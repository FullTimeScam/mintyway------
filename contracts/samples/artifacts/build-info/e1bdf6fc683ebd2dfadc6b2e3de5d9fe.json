{
	"id": "e1bdf6fc683ebd2dfadc6b2e3de5d9fe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"samples/ERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.8.2 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract ERC20PermissionsControl is ERC20, AccessControl, Ownable {\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    // 역할 정의하기\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\r\n    bytes32 public constant FREEZE_MANAGER_ROLE = keccak256(\"FREEZE_MANAGER_ROLE\");\r\n    bytes32 public constant BLACKLIST_MANAGER_ROLE = keccak256(\"BLACKLIST_MANAGER_ROLE\");\r\n    bytes32 public constant RECOVER_ROLE = keccak256(\"RECOVER_ROLE\");\r\n\r\n    // 상태 변수\r\n    EnumerableSet.AddressSet private frozenAccounts;\r\n    EnumerableSet.AddressSet private blacklistedAccounts;\r\n\r\n    // 생성자: 이름, 심볼, 기본 관리자= msg.sender\r\n    // 기본적으로 토큰을 만든 계정은 모든 권한을 가지고 있음\r\n    constructor(string memory name, string memory symbol) \r\n        ERC20(name, symbol) \r\n        Ownable(msg.sender)\r\n    {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n    }\r\n\r\n    // 민트 함수: MINTER_ROLE만 가능\r\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    // 번 함수: BURNER_ROLE만 가능\r\n    function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {\r\n        _burn(from, amount);\r\n    }\r\n\r\n    // 계정 동결 함수: FREEZE_MANAGER_ROLE만 가능\r\n    // frozenAccounts 상태변수에 계정 추가\r\n    // 동결 시 전송 기능 사용 불가\r\n    function freezeAccount(address account) external onlyRole(FREEZE_MANAGER_ROLE) {\r\n        require(!frozenAccounts.contains(account), \"Account is already frozen\");\r\n        frozenAccounts.add(account);\r\n    }\r\n\r\n    // 계정 동결 해제 함수: FREEZE_MANAGER_ROLE만 가능\r\n    function unfreezeAccount(address account) external onlyRole(FREEZE_MANAGER_ROLE) {\r\n        require(frozenAccounts.contains(account), \"Account is not frozen\");\r\n        frozenAccounts.remove(account);\r\n    }\r\n\r\n    // 블랙리스트 추가 함수: BLACKLIST_MANAGER_ROLE만 가능\r\n    // blacklistedAccounts 상태변수에 계정 추가\r\n    // 블랙리스트 등록 시 전송 기능 사용 불가\r\n    function blacklistAccount(address account) external onlyRole(BLACKLIST_MANAGER_ROLE) {\r\n        require(!blacklistedAccounts.contains(account), \"Account is already blacklisted\");\r\n        blacklistedAccounts.add(account);\r\n    }\r\n\r\n    // 블랙리스트 제거 함수: BLACKLIST_MANAGER_ROLE만 가능\r\n    function removeFromBlacklist(address account) external onlyRole(BLACKLIST_MANAGER_ROLE) {\r\n        require(blacklistedAccounts.contains(account), \"Account is not blacklisted\");\r\n        blacklistedAccounts.remove(account);\r\n    }\r\n\r\n    // 토큰 복구 함수: RECOVER_ROLE만 가능\r\n    // 원하는 계정에서 다른 계정으로 토큰 전송 가능!\r\n    function recover(address from, address to, uint256 amount) external onlyRole(RECOVER_ROLE) {\r\n        _transfer(from, to, amount); // Use the internal transfer provided by ERC20\r\n    }\r\n\r\n    // transfer 함수: 동결 및 블랙리스트 상태 확인\r\n    function transfer(address to, uint256 amount) public override returns (bool) {\r\n        require(!frozenAccounts.contains(msg.sender), \"Sender account is frozen\");\r\n        require(!frozenAccounts.contains(to), \"Recipient account is frozen\");\r\n        require(!blacklistedAccounts.contains(msg.sender), \"Sender account is blacklisted\");\r\n        require(!blacklistedAccounts.contains(to), \"Recipient account is blacklisted\");\r\n\r\n        return super.transfer(to, amount); // Call the parent ERC20 transfer function\r\n    }\r\n\r\n    // transferFrom 함수: 동결 및 블랙리스트 상태 확인\r\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\r\n        require(!frozenAccounts.contains(from), \"Sender account is frozen\");\r\n        require(!frozenAccounts.contains(to), \"Recipient account is frozen\");\r\n        require(!blacklistedAccounts.contains(from), \"Sender account is blacklisted\");\r\n        require(!blacklistedAccounts.contains(to), \"Recipient account is blacklisted\");\r\n\r\n        return super.transferFrom(from, to, amount); // Call the parent ERC20 transferFrom function\r\n    }\r\n\r\n\r\n\r\n    // <===여기부터 ROLE 관리 함수들\r\n\r\n    // MINTER_ROLE을 추가하는 함수: 오너만 호출 가능\r\n    function addMinter(address account) external onlyOwner {\r\n        grantRole(MINTER_ROLE, account);\r\n    }\r\n\r\n    // MINTER_ROLE을 제거하는 함수: 오너만 호출 가능\r\n    function removeMinter(address account) external onlyOwner {\r\n        revokeRole(MINTER_ROLE, account);\r\n    }\r\n\r\n    // BURNER_ROLE을 추가하는 함수: 오너만 호출 가능\r\n    function addBurner(address account) external onlyOwner {\r\n        grantRole(BURNER_ROLE, account);\r\n    }\r\n\r\n    // BURNER_ROLE을 제거하는 함수: 오너만 호출 가능\r\n    function removeBurner(address account) external onlyOwner {\r\n        revokeRole(BURNER_ROLE, account);\r\n    }\r\n\r\n    // FREEZE_MANAGER_ROLE을 추가하는 함수: 오너만 호출 가능\r\n    function addFreezer(address account) external onlyOwner {\r\n        grantRole(FREEZE_MANAGER_ROLE, account);\r\n    }\r\n\r\n    // FREEZE_MANAGER_ROLE을 제거하는 함수: 오너만 호출 가능\r\n    function removeFreezer(address account) external onlyOwner {\r\n        revokeRole(FREEZE_MANAGER_ROLE, account);\r\n    }\r\n\r\n    // BLACKLIST_MANAGER_ROLE을 추가하는 함수: 오너만 호출 가능\r\n    function addBlacklistManager(address account) external onlyOwner {\r\n        grantRole(BLACKLIST_MANAGER_ROLE, account);\r\n    }\r\n\r\n    // BLACKLIST_MANAGER_ROLE을 제거하는 함수: 오너만 호출 가능\r\n    function removeBlacklistManager(address account) external onlyOwner {\r\n        revokeRole(BLACKLIST_MANAGER_ROLE, account);\r\n    }\r\n\r\n    // RECOVER_ROLE을 추가하는 함수: 오너만 호출 가능\r\n    function addRecoverer(address account) external onlyOwner {\r\n        grantRole(RECOVER_ROLE, account);\r\n    }\r\n\r\n    // RECOVER_ROLE을 제거하는 함수: 오너만 호출 가능\r\n    function removeRecoverer(address account) external onlyOwner {\r\n        revokeRole(RECOVER_ROLE, account);\r\n    }\r\n\r\n    // 여기까지 ROLE 관리 함수들 ===>\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 387,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 686,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 692,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 694,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 696,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 698,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x79505182C37A 0xDB DUP5 PUSH24 0x2E725371F9A03A86506A0A0211CE544FFE6A865E7C226473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1330:11640:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x79505182C37A 0xDB DUP5 PUSH24 0x2E725371F9A03A86506A0A0211CE544FFE6A865E7C226473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1330:11640:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033",
									".code": [
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"samples/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"samples/ERC20.sol": {
				"ERC20PermissionsControl": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BLACKLIST_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FREEZE_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RECOVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addBlacklistManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addBurner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addFreezer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addRecoverer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "blacklistAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "freezeAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recover",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeBlacklistManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeBurner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFreezer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeRecoverer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "unfreezeAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"samples/ERC20.sol\":314:6619  contract ERC20PermissionsControl is ERC20, AccessControl, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"samples/ERC20.sol\":1145:1325  constructor(string memory name, string memory symbol) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"samples/ERC20.sol\":1247:1257  msg.sender */\n  caller\n    /* \"samples/ERC20.sol\":1215:1219  name */\n  dup3\n    /* \"samples/ERC20.sol\":1221:1227  symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"samples/ERC20.sol\":1275:1317  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"samples/ERC20.sol\":1286:1304  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"samples/ERC20.sol\":1306:1316  msg.sender */\n  caller\n    /* \"samples/ERC20.sol\":1275:1285  _grantRole */\n  shl(0x20, tag_19)\n    /* \"samples/ERC20.sol\":1275:1317  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n  pop\n    /* \"samples/ERC20.sol\":1145:1325  constructor(string memory name, string memory symbol) ... */\n  pop\n  pop\n    /* \"samples/ERC20.sol\":314:6619  contract ERC20PermissionsControl is ERC20, AccessControl, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_24)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_26\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_27)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_22:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_31:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_32:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_33:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_34:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_35:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_36:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_37:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_38:\n    /* \"#utility.yul\":957:984   */\n  tag_75\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_36\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_77\n  tag_37\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1030:1118   */\ntag_76:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_39:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_79\n  tag_31\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_80\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_38\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_40:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_83\n  tag_37\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1434:1490   */\ntag_82:\n    /* \"#utility.yul\":1508:1537   */\n  tag_84\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_36\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_41:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_42:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_87\n    /* \"#utility.yul\":1885:1934   */\n  tag_88\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_40\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1869:1935   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_90\n  tag_35\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2010:2122   */\ntag_89:\n    /* \"#utility.yul\":2131:2183   */\n  tag_91\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_41\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_43:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_94\n  tag_34\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2292:2414   */\ntag_93:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_95\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_42\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  dup1\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_98\n  tag_32\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2694:2813   */\ntag_97:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_100\n  tag_33\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2889:3006   */\ntag_99:\n    /* \"#utility.yul\":3030:3104   */\n  tag_101\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_43\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_103\n  tag_33\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3191:3308   */\ntag_102:\n    /* \"#utility.yul\":3332:3406   */\n  tag_104\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_43\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_44:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_45:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_46:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_108:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_109\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_110\n  tag_45\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3950:4034   */\ntag_109:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_47:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_48:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_49:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_50:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_115\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_49\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4665:4704   */\n  tag_116\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_49\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_51:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_52:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_53:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_120\n    /* \"#utility.yul\":5054:5088   */\n  tag_121\n    /* \"#utility.yul\":5063:5087   */\n  tag_122\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_51\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5054:5088   */\n  tag_52\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5036:5089   */\n  tag_51\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_54:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_55:\n    /* \"#utility.yul\":5292:5331   */\n  tag_125\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_53\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5353:5444   */\n  tag_126\n    /* \"#utility.yul\":5402:5443   */\n  tag_127\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_54\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_50\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_56:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_57:\n    /* \"#utility.yul\":5613:5645   */\n  tag_130\n  tag_56\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5654:5719   */\n  tag_131\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_55\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_58:\n    /* \"#utility.yul\":5791:5911   */\ntag_133:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_136\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_57\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_133)\ntag_135:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_59:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_139\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_47\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6142:6171   */\n  tag_140\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_48\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_141:\n    /* \"#utility.yul\":6369:6449   */\n  tag_142\n    /* \"#utility.yul\":6425:6447   */\n  tag_143\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_48\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_58\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_138:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_60:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_61:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_146\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_60\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_62:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_148\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_61\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_9:\n    /* \"#utility.yul\":7186:7223   */\n  tag_150\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_44\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_152\n  tag_37\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7274:7330   */\ntag_151:\n    /* \"#utility.yul\":7354:7392   */\n  tag_153\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_46\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7439:7506   */\n  tag_154\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_59\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_156\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_157:\n    /* \"#utility.yul\":8380:8447   */\n  tag_158\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_62\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_155)\n    /* \"#utility.yul\":7601:8219   */\ntag_156:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_159\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_47\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_160:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_160)\ntag_162:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_164\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_61\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_163:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_155:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8470:8596   */\ntag_63:\n    /* \"#utility.yul\":8507:8514   */\n  0x00\n    /* \"#utility.yul\":8547:8589   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8536:8590   */\n  and\n    /* \"#utility.yul\":8525:8590   */\n  swap1\n  pop\n    /* \"#utility.yul\":8470:8596   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8602:8698   */\ntag_64:\n    /* \"#utility.yul\":8639:8646   */\n  0x00\n    /* \"#utility.yul\":8668:8692   */\n  tag_167\n    /* \"#utility.yul\":8686:8691   */\n  dup3\n    /* \"#utility.yul\":8668:8692   */\n  tag_63\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8657:8692   */\n  swap1\n  pop\n    /* \"#utility.yul\":8602:8698   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8704:8822   */\ntag_65:\n    /* \"#utility.yul\":8791:8815   */\n  tag_169\n    /* \"#utility.yul\":8809:8814   */\n  dup2\n    /* \"#utility.yul\":8791:8815   */\n  tag_64\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8786:8789   */\n  dup3\n    /* \"#utility.yul\":8779:8816   */\n  mstore\n    /* \"#utility.yul\":8704:8822   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8828:9050   */\ntag_14:\n    /* \"#utility.yul\":8921:8925   */\n  0x00\n    /* \"#utility.yul\":8959:8961   */\n  0x20\n    /* \"#utility.yul\":8948:8957   */\n  dup3\n    /* \"#utility.yul\":8944:8962   */\n  add\n    /* \"#utility.yul\":8936:8962   */\n  swap1\n  pop\n    /* \"#utility.yul\":8972:9043   */\n  tag_171\n    /* \"#utility.yul\":9040:9041   */\n  0x00\n    /* \"#utility.yul\":9029:9038   */\n  dup4\n    /* \"#utility.yul\":9025:9042   */\n  add\n    /* \"#utility.yul\":9016:9022   */\n  dup5\n    /* \"#utility.yul\":8972:9043   */\n  tag_65\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8828:9050   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"samples/ERC20.sol\":314:6619  contract ERC20PermissionsControl is ERC20, AccessControl, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"samples/ERC20.sol\":314:6619  contract ERC20PermissionsControl is ERC20, AccessControl, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xd5391393\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf26c159f\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xf44637ba\n      eq\n      tag_43\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0xa217fddf\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xc2134b23\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd1c2de0a\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd37b34d7\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x939bcbc9\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x939bcbc9\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x974b368c\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x983b2d56\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x70a08231\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x788649ea\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x2acd2000\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x40c10f19\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x410b2424\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x526606c9\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x537df3b6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x63f15649\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x2acd2000\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3092afd5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x18160ddd\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1ec82cb8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x02846858\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0eff2afc\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":5251:5360  function removeBurner(address account) external onlyOwner {... */\n    tag_4:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":5847:5973  function addBlacklistManager(address account) external onlyOwner {... */\n    tag_7:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":3179:3363  function recover(address from, address to, uint256 amount) external onlyRole(RECOVER_ROLE) {... */\n    tag_9:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"samples/ERC20.sol\":4035:4575  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_10:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_11:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":541:603  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_12:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":5642:5760  function removeFreezer(address account) external onlyOwner {... */\n    tag_13:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_14:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      stop\n        /* \"samples/ERC20.sol\":4885:4994  function removeMinter(address account) external onlyOwner {... */\n    tag_15:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_16:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_17:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"samples/ERC20.sol\":1378:1487  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n    tag_18:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"samples/ERC20.sol\":695:779  bytes32 public constant BLACKLIST_MANAGER_ROLE = keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n    tag_19:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":5444:5558  function addFreezer(address account) external onlyOwner {... */\n    tag_20:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"samples/ERC20.sol\":2816:3045  function removeFromBlacklist(address account) external onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n    tag_21:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"samples/ERC20.sol\":610:688  bytes32 public constant FREEZE_MANAGER_ROLE = keccak256(\"FREEZE_MANAGER_ROLE\") */\n    tag_22:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      stop\n        /* \"samples/ERC20.sol\":2100:2307  function unfreezeAccount(address account) external onlyRole(FREEZE_MANAGER_ROLE) {... */\n    tag_25:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_26:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_27:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":786:850  bytes32 public constant RECOVER_ROLE = keccak256(\"RECOVER_ROLE\") */\n    tag_28:\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_29:\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":6060:6190  function removeBlacklistManager(address account) external onlyOwner {... */\n    tag_30:\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n    tag_149:\n      stop\n        /* \"samples/ERC20.sol\":4704:4809  function addMinter(address account) external onlyOwner {... */\n    tag_31:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n    tag_152:\n      stop\n        /* \"samples/ERC20.sol\":1537:1650  function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {... */\n    tag_32:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_33:\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":3437:3957  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_34:\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":6267:6376  function addRecoverer(address account) external onlyOwner {... */\n    tag_35:\n      tag_165\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n    tag_165:\n      stop\n        /* \"samples/ERC20.sol\":6453:6566  function removeRecoverer(address account) external onlyOwner {... */\n    tag_36:\n      tag_168\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n    tag_168:\n      stop\n        /* \"samples/ERC20.sol\":2508:2736  function blacklistAccount(address account) external onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n    tag_37:\n      tag_171\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_172:\n      tag_173\n      jump\t// in\n    tag_171:\n      stop\n        /* \"samples/ERC20.sol\":472:534  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_38:\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_39:\n      tag_177\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_178:\n      tag_179\n      jump\t// in\n    tag_177:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_40:\n      tag_180\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      tag_183\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/ERC20.sol\":1818:2025  function freezeAccount(address account) external onlyRole(FREEZE_MANAGER_ROLE) {... */\n    tag_41:\n      tag_185\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_186:\n      tag_187\n      jump\t// in\n    tag_185:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_42:\n      tag_188\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_189:\n      tag_190\n      jump\t// in\n    tag_188:\n      stop\n        /* \"samples/ERC20.sol\":5070:5175  function addBurner(address account) external onlyOwner {... */\n    tag_43:\n      tag_191\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_192:\n      tag_193\n      jump\t// in\n    tag_191:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_195\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_196\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":5251:5360  function removeBurner(address account) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"samples/ERC20.sol\":5320:5352  revokeRole(BURNER_ROLE, account) */\n      tag_202\n        /* \"samples/ERC20.sol\":579:603  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"samples/ERC20.sol\":5344:5351  account */\n      dup3\n        /* \"samples/ERC20.sol\":5320:5330  revokeRole */\n      tag_179\n        /* \"samples/ERC20.sol\":5320:5352  revokeRole(BURNER_ROLE, account) */\n      jump\t// in\n    tag_202:\n        /* \"samples/ERC20.sol\":5251:5360  function removeBurner(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_205\n      jump\t// in\n    tag_206:\n      dup1\n      iszero\n      tag_207\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_208\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_207)\n    tag_208:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_209:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_209\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":5847:5973  function addBlacklistManager(address account) external onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \"samples/ERC20.sol\":5923:5965  grantRole(BLACKLIST_MANAGER_ROLE, account) */\n      tag_218\n        /* \"samples/ERC20.sol\":744:779  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n        /* \"samples/ERC20.sol\":5957:5964  account */\n      dup3\n        /* \"samples/ERC20.sol\":5923:5932  grantRole */\n      tag_100\n        /* \"samples/ERC20.sol\":5923:5965  grantRole(BLACKLIST_MANAGER_ROLE, account) */\n      jump\t// in\n    tag_218:\n        /* \"samples/ERC20.sol\":5847:5973  function addBlacklistManager(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"samples/ERC20.sol\":3179:3363  function recover(address from, address to, uint256 amount) external onlyRole(RECOVER_ROLE) {... */\n    tag_80:\n        /* \"samples/ERC20.sol\":825:850  keccak256(\"RECOVER_ROLE\") */\n      0x62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_221:\n        /* \"samples/ERC20.sol\":3281:3308  _transfer(from, to, amount) */\n      tag_224\n        /* \"samples/ERC20.sol\":3291:3295  from */\n      dup5\n        /* \"samples/ERC20.sol\":3297:3299  to */\n      dup5\n        /* \"samples/ERC20.sol\":3301:3307  amount */\n      dup5\n        /* \"samples/ERC20.sol\":3281:3290  _transfer */\n      tag_225\n        /* \"samples/ERC20.sol\":3281:3308  _transfer(from, to, amount) */\n      jump\t// in\n    tag_224:\n        /* \"samples/ERC20.sol\":3179:3363  function recover(address from, address to, uint256 amount) external onlyRole(RECOVER_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":4035:4575  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_83:\n        /* \"samples/ERC20.sol\":4124:4128  bool */\n      0x00\n        /* \"samples/ERC20.sol\":4150:4179  frozenAccounts.contains(from) */\n      tag_227\n        /* \"samples/ERC20.sol\":4174:4178  from */\n      dup5\n        /* \"samples/ERC20.sol\":4150:4164  frozenAccounts */\n      0x07\n        /* \"samples/ERC20.sol\":4150:4173  frozenAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":4150:4179  frozenAccounts.contains(from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"samples/ERC20.sol\":4149:4179  !frozenAccounts.contains(from) */\n      iszero\n        /* \"samples/ERC20.sol\":4141:4208  require(!frozenAccounts.contains(from), \"Sender account is frozen\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"samples/ERC20.sol\":4228:4255  frozenAccounts.contains(to) */\n      tag_232\n        /* \"samples/ERC20.sol\":4252:4254  to */\n      dup4\n        /* \"samples/ERC20.sol\":4228:4242  frozenAccounts */\n      0x07\n        /* \"samples/ERC20.sol\":4228:4251  frozenAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":4228:4255  frozenAccounts.contains(to) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"samples/ERC20.sol\":4227:4255  !frozenAccounts.contains(to) */\n      iszero\n        /* \"samples/ERC20.sol\":4219:4287  require(!frozenAccounts.contains(to), \"Recipient account is frozen\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"samples/ERC20.sol\":4307:4341  blacklistedAccounts.contains(from) */\n      tag_236\n        /* \"samples/ERC20.sol\":4336:4340  from */\n      dup5\n        /* \"samples/ERC20.sol\":4307:4326  blacklistedAccounts */\n      0x09\n        /* \"samples/ERC20.sol\":4307:4335  blacklistedAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":4307:4341  blacklistedAccounts.contains(from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"samples/ERC20.sol\":4306:4341  !blacklistedAccounts.contains(from) */\n      iszero\n        /* \"samples/ERC20.sol\":4298:4375  require(!blacklistedAccounts.contains(from), \"Sender account is blacklisted\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"samples/ERC20.sol\":4395:4427  blacklistedAccounts.contains(to) */\n      tag_240\n        /* \"samples/ERC20.sol\":4424:4426  to */\n      dup4\n        /* \"samples/ERC20.sol\":4395:4414  blacklistedAccounts */\n      0x09\n        /* \"samples/ERC20.sol\":4395:4423  blacklistedAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":4395:4427  blacklistedAccounts.contains(to) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"samples/ERC20.sol\":4394:4427  !blacklistedAccounts.contains(to) */\n      iszero\n        /* \"samples/ERC20.sol\":4386:4464  require(!blacklistedAccounts.contains(to), \"Recipient account is blacklisted\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"samples/ERC20.sol\":4484:4520  super.transferFrom(from, to, amount) */\n      tag_244\n        /* \"samples/ERC20.sol\":4503:4507  from */\n      dup5\n        /* \"samples/ERC20.sol\":4509:4511  to */\n      dup5\n        /* \"samples/ERC20.sol\":4513:4519  amount */\n      dup5\n        /* \"samples/ERC20.sol\":4484:4502  super.transferFrom */\n      tag_245\n        /* \"samples/ERC20.sol\":4484:4520  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_244:\n        /* \"samples/ERC20.sol\":4477:4520  return super.transferFrom(from, to, amount) */\n      swap1\n      pop\n        /* \"samples/ERC20.sol\":4035:4575  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":541:603  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_92:\n        /* \"samples/ERC20.sol\":579:603  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"samples/ERC20.sol\":541:603  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"samples/ERC20.sol\":5642:5760  function removeFreezer(address account) external onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_248\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_248:\n        /* \"samples/ERC20.sol\":5712:5752  revokeRole(FREEZE_MANAGER_ROLE, account) */\n      tag_250\n        /* \"samples/ERC20.sol\":656:688  keccak256(\"FREEZE_MANAGER_ROLE\") */\n      0x109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35\n        /* \"samples/ERC20.sol\":5744:5751  account */\n      dup3\n        /* \"samples/ERC20.sol\":5712:5722  revokeRole */\n      tag_179\n        /* \"samples/ERC20.sol\":5712:5752  revokeRole(FREEZE_MANAGER_ROLE, account) */\n      jump\t// in\n    tag_250:\n        /* \"samples/ERC20.sol\":5642:5760  function removeFreezer(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_88\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_253\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_255\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_255:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":4885:4994  function removeMinter(address account) external onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_258:\n        /* \"samples/ERC20.sol\":4954:4986  revokeRole(MINTER_ROLE, account) */\n      tag_260\n        /* \"samples/ERC20.sol\":510:534  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"samples/ERC20.sol\":4978:4985  account */\n      dup3\n        /* \"samples/ERC20.sol\":4954:4964  revokeRole */\n      tag_179\n        /* \"samples/ERC20.sol\":4954:4986  revokeRole(MINTER_ROLE, account) */\n      jump\t// in\n    tag_260:\n        /* \"samples/ERC20.sol\":4885:4994  function removeMinter(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_265\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_266\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_265:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":1378:1487  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n    tag_113:\n        /* \"samples/ERC20.sol\":510:534  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_268\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_268:\n        /* \"samples/ERC20.sol\":1462:1479  _mint(to, amount) */\n      tag_270\n        /* \"samples/ERC20.sol\":1468:1470  to */\n      dup4\n        /* \"samples/ERC20.sol\":1472:1478  amount */\n      dup4\n        /* \"samples/ERC20.sol\":1462:1467  _mint */\n      tag_271\n        /* \"samples/ERC20.sol\":1462:1479  _mint(to, amount) */\n      jump\t// in\n    tag_270:\n        /* \"samples/ERC20.sol\":1378:1487  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":695:779  bytes32 public constant BLACKLIST_MANAGER_ROLE = keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n    tag_115:\n        /* \"samples/ERC20.sol\":744:779  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n        /* \"samples/ERC20.sol\":695:779  bytes32 public constant BLACKLIST_MANAGER_ROLE = keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"samples/ERC20.sol\":5444:5558  function addFreezer(address account) external onlyOwner {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_273\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_273:\n        /* \"samples/ERC20.sol\":5511:5550  grantRole(FREEZE_MANAGER_ROLE, account) */\n      tag_275\n        /* \"samples/ERC20.sol\":656:688  keccak256(\"FREEZE_MANAGER_ROLE\") */\n      0x109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35\n        /* \"samples/ERC20.sol\":5542:5549  account */\n      dup3\n        /* \"samples/ERC20.sol\":5511:5520  grantRole */\n      tag_100\n        /* \"samples/ERC20.sol\":5511:5550  grantRole(FREEZE_MANAGER_ROLE, account) */\n      jump\t// in\n    tag_275:\n        /* \"samples/ERC20.sol\":5444:5558  function addFreezer(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":2816:3045  function removeFromBlacklist(address account) external onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n    tag_122:\n        /* \"samples/ERC20.sol\":744:779  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_277\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_277:\n        /* \"samples/ERC20.sol\":2923:2960  blacklistedAccounts.contains(account) */\n      tag_279\n        /* \"samples/ERC20.sol\":2952:2959  account */\n      dup3\n        /* \"samples/ERC20.sol\":2923:2942  blacklistedAccounts */\n      0x09\n        /* \"samples/ERC20.sol\":2923:2951  blacklistedAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":2923:2960  blacklistedAccounts.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_279:\n        /* \"samples/ERC20.sol\":2915:2991  require(blacklistedAccounts.contains(account), \"Account is not blacklisted\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"samples/ERC20.sol\":3002:3037  blacklistedAccounts.remove(account) */\n      tag_283\n        /* \"samples/ERC20.sol\":3029:3036  account */\n      dup3\n        /* \"samples/ERC20.sol\":3002:3021  blacklistedAccounts */\n      0x09\n        /* \"samples/ERC20.sol\":3002:3028  blacklistedAccounts.remove */\n      tag_284\n      swap1\n        /* \"samples/ERC20.sol\":3002:3037  blacklistedAccounts.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n      pop\n        /* \"samples/ERC20.sol\":2816:3045  function removeFromBlacklist(address account) external onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":610:688  bytes32 public constant FREEZE_MANAGER_ROLE = keccak256(\"FREEZE_MANAGER_ROLE\") */\n    tag_124:\n        /* \"samples/ERC20.sol\":656:688  keccak256(\"FREEZE_MANAGER_ROLE\") */\n      0x109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35\n        /* \"samples/ERC20.sol\":610:688  bytes32 public constant FREEZE_MANAGER_ROLE = keccak256(\"FREEZE_MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_287\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_290\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"samples/ERC20.sol\":2100:2307  function unfreezeAccount(address account) external onlyRole(FREEZE_MANAGER_ROLE) {... */\n    tag_134:\n        /* \"samples/ERC20.sol\":656:688  keccak256(\"FREEZE_MANAGER_ROLE\") */\n      0x109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_292\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_292:\n        /* \"samples/ERC20.sol\":2200:2232  frozenAccounts.contains(account) */\n      tag_294\n        /* \"samples/ERC20.sol\":2224:2231  account */\n      dup3\n        /* \"samples/ERC20.sol\":2200:2214  frozenAccounts */\n      0x07\n        /* \"samples/ERC20.sol\":2200:2223  frozenAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":2200:2232  frozenAccounts.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"samples/ERC20.sol\":2192:2258  require(frozenAccounts.contains(account), \"Account is not frozen\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"samples/ERC20.sol\":2269:2299  frozenAccounts.remove(account) */\n      tag_298\n        /* \"samples/ERC20.sol\":2291:2298  account */\n      dup3\n        /* \"samples/ERC20.sol\":2269:2283  frozenAccounts */\n      0x07\n        /* \"samples/ERC20.sol\":2269:2290  frozenAccounts.remove */\n      tag_284\n      swap1\n        /* \"samples/ERC20.sol\":2269:2299  frozenAccounts.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_298:\n      pop\n        /* \"samples/ERC20.sol\":2100:2307  function unfreezeAccount(address account) external onlyRole(FREEZE_MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":786:850  bytes32 public constant RECOVER_ROLE = keccak256(\"RECOVER_ROLE\") */\n    tag_144:\n        /* \"samples/ERC20.sol\":825:850  keccak256(\"RECOVER_ROLE\") */\n      0x62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066\n        /* \"samples/ERC20.sol\":786:850  bytes32 public constant RECOVER_ROLE = keccak256(\"RECOVER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_302\n      swap1\n      tag_205\n      jump\t// in\n    tag_302:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_303\n      swap1\n      tag_205\n      jump\t// in\n    tag_303:\n      dup1\n      iszero\n      tag_304\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_305\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_304)\n    tag_305:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_306:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_306\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_304:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"samples/ERC20.sol\":6060:6190  function removeBlacklistManager(address account) external onlyOwner {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_308\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_308:\n        /* \"samples/ERC20.sol\":6139:6182  revokeRole(BLACKLIST_MANAGER_ROLE, account) */\n      tag_310\n        /* \"samples/ERC20.sol\":744:779  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n        /* \"samples/ERC20.sol\":6174:6181  account */\n      dup3\n        /* \"samples/ERC20.sol\":6139:6149  revokeRole */\n      tag_179\n        /* \"samples/ERC20.sol\":6139:6182  revokeRole(BLACKLIST_MANAGER_ROLE, account) */\n      jump\t// in\n    tag_310:\n        /* \"samples/ERC20.sol\":6060:6190  function removeBlacklistManager(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":4704:4809  function addMinter(address account) external onlyOwner {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_312\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_312:\n        /* \"samples/ERC20.sol\":4770:4801  grantRole(MINTER_ROLE, account) */\n      tag_314\n        /* \"samples/ERC20.sol\":510:534  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"samples/ERC20.sol\":4793:4800  account */\n      dup3\n        /* \"samples/ERC20.sol\":4770:4779  grantRole */\n      tag_100\n        /* \"samples/ERC20.sol\":4770:4801  grantRole(MINTER_ROLE, account) */\n      jump\t// in\n    tag_314:\n        /* \"samples/ERC20.sol\":4704:4809  function addMinter(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":1537:1650  function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {... */\n    tag_157:\n        /* \"samples/ERC20.sol\":579:603  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_316\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_316:\n        /* \"samples/ERC20.sol\":1623:1642  _burn(from, amount) */\n      tag_318\n        /* \"samples/ERC20.sol\":1629:1633  from */\n      dup4\n        /* \"samples/ERC20.sol\":1635:1641  amount */\n      dup4\n        /* \"samples/ERC20.sol\":1623:1628  _burn */\n      tag_319\n        /* \"samples/ERC20.sol\":1623:1642  _burn(from, amount) */\n      jump\t// in\n    tag_318:\n        /* \"samples/ERC20.sol\":1537:1650  function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"samples/ERC20.sol\":3437:3957  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_163:\n        /* \"samples/ERC20.sol\":3508:3512  bool */\n      0x00\n        /* \"samples/ERC20.sol\":3534:3569  frozenAccounts.contains(msg.sender) */\n      tag_321\n        /* \"samples/ERC20.sol\":3558:3568  msg.sender */\n      caller\n        /* \"samples/ERC20.sol\":3534:3548  frozenAccounts */\n      0x07\n        /* \"samples/ERC20.sol\":3534:3557  frozenAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":3534:3569  frozenAccounts.contains(msg.sender) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_321:\n        /* \"samples/ERC20.sol\":3533:3569  !frozenAccounts.contains(msg.sender) */\n      iszero\n        /* \"samples/ERC20.sol\":3525:3598  require(!frozenAccounts.contains(msg.sender), \"Sender account is frozen\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_231\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"samples/ERC20.sol\":3618:3645  frozenAccounts.contains(to) */\n      tag_324\n        /* \"samples/ERC20.sol\":3642:3644  to */\n      dup4\n        /* \"samples/ERC20.sol\":3618:3632  frozenAccounts */\n      0x07\n        /* \"samples/ERC20.sol\":3618:3641  frozenAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":3618:3645  frozenAccounts.contains(to) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_324:\n        /* \"samples/ERC20.sol\":3617:3645  !frozenAccounts.contains(to) */\n      iszero\n        /* \"samples/ERC20.sol\":3609:3677  require(!frozenAccounts.contains(to), \"Recipient account is frozen\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap1\n      tag_235\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_325:\n        /* \"samples/ERC20.sol\":3697:3737  blacklistedAccounts.contains(msg.sender) */\n      tag_327\n        /* \"samples/ERC20.sol\":3726:3736  msg.sender */\n      caller\n        /* \"samples/ERC20.sol\":3697:3716  blacklistedAccounts */\n      0x09\n        /* \"samples/ERC20.sol\":3697:3725  blacklistedAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":3697:3737  blacklistedAccounts.contains(msg.sender) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_327:\n        /* \"samples/ERC20.sol\":3696:3737  !blacklistedAccounts.contains(msg.sender) */\n      iszero\n        /* \"samples/ERC20.sol\":3688:3771  require(!blacklistedAccounts.contains(msg.sender), \"Sender account is blacklisted\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap1\n      tag_239\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"samples/ERC20.sol\":3791:3823  blacklistedAccounts.contains(to) */\n      tag_330\n        /* \"samples/ERC20.sol\":3820:3822  to */\n      dup4\n        /* \"samples/ERC20.sol\":3791:3810  blacklistedAccounts */\n      0x09\n        /* \"samples/ERC20.sol\":3791:3819  blacklistedAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":3791:3823  blacklistedAccounts.contains(to) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_330:\n        /* \"samples/ERC20.sol\":3790:3823  !blacklistedAccounts.contains(to) */\n      iszero\n        /* \"samples/ERC20.sol\":3782:3860  require(!blacklistedAccounts.contains(to), \"Recipient account is blacklisted\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap1\n      tag_243\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_331:\n        /* \"samples/ERC20.sol\":3880:3906  super.transfer(to, amount) */\n      tag_333\n        /* \"samples/ERC20.sol\":3895:3897  to */\n      dup4\n        /* \"samples/ERC20.sol\":3899:3905  amount */\n      dup4\n        /* \"samples/ERC20.sol\":3880:3894  super.transfer */\n      tag_334\n        /* \"samples/ERC20.sol\":3880:3906  super.transfer(to, amount) */\n      jump\t// in\n    tag_333:\n        /* \"samples/ERC20.sol\":3873:3906  return super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"samples/ERC20.sol\":3437:3957  function transfer(address to, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":6267:6376  function addRecoverer(address account) external onlyOwner {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_336\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_336:\n        /* \"samples/ERC20.sol\":6336:6368  grantRole(RECOVER_ROLE, account) */\n      tag_338\n        /* \"samples/ERC20.sol\":825:850  keccak256(\"RECOVER_ROLE\") */\n      0x62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066\n        /* \"samples/ERC20.sol\":6360:6367  account */\n      dup3\n        /* \"samples/ERC20.sol\":6336:6345  grantRole */\n      tag_100\n        /* \"samples/ERC20.sol\":6336:6368  grantRole(RECOVER_ROLE, account) */\n      jump\t// in\n    tag_338:\n        /* \"samples/ERC20.sol\":6267:6376  function addRecoverer(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":6453:6566  function removeRecoverer(address account) external onlyOwner {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_340\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_340:\n        /* \"samples/ERC20.sol\":6525:6558  revokeRole(RECOVER_ROLE, account) */\n      tag_342\n        /* \"samples/ERC20.sol\":825:850  keccak256(\"RECOVER_ROLE\") */\n      0x62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066\n        /* \"samples/ERC20.sol\":6550:6557  account */\n      dup3\n        /* \"samples/ERC20.sol\":6525:6535  revokeRole */\n      tag_179\n        /* \"samples/ERC20.sol\":6525:6558  revokeRole(RECOVER_ROLE, account) */\n      jump\t// in\n    tag_342:\n        /* \"samples/ERC20.sol\":6453:6566  function removeRecoverer(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":2508:2736  function blacklistAccount(address account) external onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n    tag_173:\n        /* \"samples/ERC20.sol\":744:779  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_344\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_344:\n        /* \"samples/ERC20.sol\":2613:2650  blacklistedAccounts.contains(account) */\n      tag_346\n        /* \"samples/ERC20.sol\":2642:2649  account */\n      dup3\n        /* \"samples/ERC20.sol\":2613:2632  blacklistedAccounts */\n      0x09\n        /* \"samples/ERC20.sol\":2613:2641  blacklistedAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":2613:2650  blacklistedAccounts.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_346:\n        /* \"samples/ERC20.sol\":2612:2650  !blacklistedAccounts.contains(account) */\n      iszero\n        /* \"samples/ERC20.sol\":2604:2685  require(!blacklistedAccounts.contains(account), \"Account is already blacklisted\") */\n      tag_347\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_347:\n        /* \"samples/ERC20.sol\":2696:2728  blacklistedAccounts.add(account) */\n      tag_350\n        /* \"samples/ERC20.sol\":2720:2727  account */\n      dup3\n        /* \"samples/ERC20.sol\":2696:2715  blacklistedAccounts */\n      0x09\n        /* \"samples/ERC20.sol\":2696:2719  blacklistedAccounts.add */\n      tag_351\n      swap1\n        /* \"samples/ERC20.sol\":2696:2728  blacklistedAccounts.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_350:\n      pop\n        /* \"samples/ERC20.sol\":2508:2736  function blacklistAccount(address account) external onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":472:534  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_175:\n        /* \"samples/ERC20.sol\":510:534  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"samples/ERC20.sol\":472:534  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_352\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_88\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_354\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_356\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_266\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_356:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":1818:2025  function freezeAccount(address account) external onlyRole(FREEZE_MANAGER_ROLE) {... */\n    tag_187:\n        /* \"samples/ERC20.sol\":656:688  keccak256(\"FREEZE_MANAGER_ROLE\") */\n      0x109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_359\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_359:\n        /* \"samples/ERC20.sol\":1917:1949  frozenAccounts.contains(account) */\n      tag_361\n        /* \"samples/ERC20.sol\":1941:1948  account */\n      dup3\n        /* \"samples/ERC20.sol\":1917:1931  frozenAccounts */\n      0x07\n        /* \"samples/ERC20.sol\":1917:1940  frozenAccounts.contains */\n      tag_228\n      swap1\n        /* \"samples/ERC20.sol\":1917:1949  frozenAccounts.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_361:\n        /* \"samples/ERC20.sol\":1916:1949  !frozenAccounts.contains(account) */\n      iszero\n        /* \"samples/ERC20.sol\":1908:1979  require(!frozenAccounts.contains(account), \"Account is already frozen\") */\n      tag_362\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_363\n      swap1\n      tag_364\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_362:\n        /* \"samples/ERC20.sol\":1990:2017  frozenAccounts.add(account) */\n      tag_365\n        /* \"samples/ERC20.sol\":2009:2016  account */\n      dup3\n        /* \"samples/ERC20.sol\":1990:2004  frozenAccounts */\n      0x07\n        /* \"samples/ERC20.sol\":1990:2008  frozenAccounts.add */\n      tag_351\n      swap1\n        /* \"samples/ERC20.sol\":1990:2017  frozenAccounts.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_365:\n      pop\n        /* \"samples/ERC20.sol\":1818:2025  function freezeAccount(address account) external onlyRole(FREEZE_MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_367\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_370\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_371\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_290\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"samples/ERC20.sol\":5070:5175  function addBurner(address account) external onlyOwner {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_373\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_373:\n        /* \"samples/ERC20.sol\":5136:5167  grantRole(BURNER_ROLE, account) */\n      tag_375\n        /* \"samples/ERC20.sol\":579:603  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"samples/ERC20.sol\":5159:5166  account */\n      dup3\n        /* \"samples/ERC20.sol\":5136:5145  grantRole */\n      tag_100\n        /* \"samples/ERC20.sol\":5136:5167  grantRole(BURNER_ROLE, account) */\n      jump\t// in\n    tag_375:\n        /* \"samples/ERC20.sol\":5070:5175  function addBurner(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_378\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_379\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_380\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_381\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_382\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_382:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_380:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_385\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_386\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_388\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_389\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_390\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_392\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_393\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_393:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_395\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_396\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_397\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8871:9036  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8951:8955  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:9029  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_399\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8984:8987  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8984:8994  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9020:9025  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9004:9027  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8996:9028  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:8983  _contains */\n      tag_400\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:9029  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8967:9029  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8871:9036  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_402\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_403\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_404\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_405\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_407\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_409\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_406)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_406:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_412\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_414\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_414:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_411)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_411:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_418\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_418:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_397\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8634:8790  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8707:8711  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8730:8783  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_421\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8738:8741  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8738:8748  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8774:8779  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8758:8781  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8750:8782  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8730:8737  _remove */\n      tag_422\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8730:8783  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_421:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8723:8783  return _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8634:8790  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_425\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_426\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_426:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_425:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_427\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_397\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_427:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_429\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_429:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_430\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_430:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8316:8466  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8386:8390  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8459  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_432\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8414:8417  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8414:8424  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8450:8455  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8434:8457  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8426:8458  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8413  _add */\n      tag_433\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8459  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_432:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8402:8459  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8316:8466  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_435\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_436\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_436:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_435:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_437\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_438\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_438:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_437:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_439\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_440\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_440:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_439:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_442\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_442:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_443\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_444\n      swap3\n      swap2\n      swap1\n      tag_445\n      jump\t// in\n    tag_444:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_443:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_447\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_448\n      swap2\n      swap1\n      tag_449\n      jump\t// in\n    tag_448:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_450)\n    tag_447:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_451\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_452\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_453\n      jump\t// in\n    tag_452:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_451:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_450:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_455)\n    tag_454:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_455:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_456\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_456:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4337:4341  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4385:4386  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4363  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4375:4380  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4353:4386  return set._positions[value] != 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_459\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_459:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_460\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_461\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_462\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_453\n      jump\t// in\n    tag_462:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_461:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_463\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_386\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_463:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_460:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2815:4183  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_422:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2881:2885  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2991:3007  uint256 position */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3013  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3024  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3031  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3025:3030  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3031  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2991:3031  uint256 position = set._positions[value] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3058:3059  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3046:3054  position */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3046:3059  position != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3042:4177  if (position != 0) {... */\n      tag_465\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3413:3431  uint256 valueIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3445:3446  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3434:3442  position */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3434:3446  position - 1 */\n      tag_466\n      swap2\n      swap1\n      tag_467\n      jump\t// in\n    tag_466:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3413:3446  uint256 valueIndex = position - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3460:3477  uint256 lastIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3501:3502  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3483  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3491  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3498  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3502  set._values.length - 1 */\n      tag_468\n      swap2\n      swap1\n      tag_467\n      jump\t// in\n    tag_468:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3460:3502  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3535:3544  lastIndex */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3521:3531  valueIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3521:3544  valueIndex != lastIndex */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3517:3895  if (valueIndex != lastIndex) {... */\n      tag_469\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3564:3581  bytes32 lastValue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3584:3587  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3584:3595  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3596:3605  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3584:3606  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_470\n      jumpi\n      tag_471\n      tag_472\n      jump\t// in\n    tag_471:\n    tag_470:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3564:3606  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3731:3740  lastValue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3708  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3716  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3717:3727  valueIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3728  set._values[valueIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_474\n      jumpi\n      tag_475\n      tag_472\n      jump\t// in\n    tag_475:\n    tag_474:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3740  set._values[valueIndex] = lastValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3872:3880  position */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3847  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3858  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3869  set._positions[lastValue] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3859:3868  lastValue */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3869  set._positions[lastValue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3880  set._positions[lastValue] = position */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3546:3895  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3517:3895  if (valueIndex != lastIndex) {... */\n    tag_469:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3973:3976  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3973:3984  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3973:3990  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_477\n      jumpi\n      tag_478\n      tag_479\n      jump\t// in\n    tag_478:\n    tag_477:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4079  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4090  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4097  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4091:4096  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4097  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4069:4097  delete set._positions[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4119:4123  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4112:4123  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_464)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3042:4177  if (position != 0) {... */\n    tag_465:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4161:4166  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4154:4166  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2815:4183  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_464:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_433:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2304:2308  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      tag_483\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2335:2338  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2340:2345  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2334  _contains */\n      tag_400\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      jump\t// in\n    tag_483:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n      tag_484\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2365  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2373  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2379:2384  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2547  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2555  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2562  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2523  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2534  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2535:2540  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2562  set._positions[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2583:2587  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2576:2587  return true */\n      swap1\n      pop\n      jump(tag_482)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n    tag_484:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2625:2630  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2618:2630  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_482:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_488:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_490:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_491:\n        /* \"#utility.yul\":561:584   */\n      tag_539\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_490\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_540:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_492:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_542\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_491\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_53:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_545\n      tag_488\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":833:952   */\n    tag_544:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_546\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_492\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_493:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_494:\n        /* \"#utility.yul\":1268:1289   */\n      tag_549\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_493\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_56:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_551\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_494\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_495:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_496:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_554\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_495\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_497:\n        /* \"#utility.yul\":1825:1849   */\n      tag_556\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_496\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_557:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_498:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_559\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_497\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_59:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_562\n      tag_488\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":2101:2220   */\n    tag_561:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_563\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_498\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2459   */\n    tag_499:\n        /* \"#utility.yul\":2412:2418   */\n      0x00\n        /* \"#utility.yul\":2446:2451   */\n      dup2\n        /* \"#utility.yul\":2440:2452   */\n      mload\n        /* \"#utility.yul\":2430:2452   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2465:2634   */\n    tag_500:\n        /* \"#utility.yul\":2549:2560   */\n      0x00\n        /* \"#utility.yul\":2583:2589   */\n      dup3\n        /* \"#utility.yul\":2578:2581   */\n      dup3\n        /* \"#utility.yul\":2571:2590   */\n      mstore\n        /* \"#utility.yul\":2623:2627   */\n      0x20\n        /* \"#utility.yul\":2618:2621   */\n      dup3\n        /* \"#utility.yul\":2614:2628   */\n      add\n        /* \"#utility.yul\":2599:2628   */\n      swap1\n      pop\n        /* \"#utility.yul\":2465:2634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2640:2779   */\n    tag_501:\n        /* \"#utility.yul\":2729:2735   */\n      dup3\n        /* \"#utility.yul\":2724:2727   */\n      dup2\n        /* \"#utility.yul\":2719:2722   */\n      dup4\n        /* \"#utility.yul\":2713:2736   */\n      mcopy\n        /* \"#utility.yul\":2770:2771   */\n      0x00\n        /* \"#utility.yul\":2761:2767   */\n      dup4\n        /* \"#utility.yul\":2756:2759   */\n      dup4\n        /* \"#utility.yul\":2752:2768   */\n      add\n        /* \"#utility.yul\":2745:2772   */\n      mstore\n        /* \"#utility.yul\":2640:2779   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2785:2887   */\n    tag_502:\n        /* \"#utility.yul\":2826:2832   */\n      0x00\n        /* \"#utility.yul\":2877:2879   */\n      0x1f\n        /* \"#utility.yul\":2873:2880   */\n      not\n        /* \"#utility.yul\":2868:2870   */\n      0x1f\n        /* \"#utility.yul\":2861:2866   */\n      dup4\n        /* \"#utility.yul\":2857:2871   */\n      add\n        /* \"#utility.yul\":2853:2881   */\n      and\n        /* \"#utility.yul\":2843:2881   */\n      swap1\n      pop\n        /* \"#utility.yul\":2785:2887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:3270   */\n    tag_503:\n        /* \"#utility.yul\":2981:2984   */\n      0x00\n        /* \"#utility.yul\":3009:3048   */\n      tag_569\n        /* \"#utility.yul\":3042:3047   */\n      dup3\n        /* \"#utility.yul\":3009:3048   */\n      tag_499\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":3064:3135   */\n      tag_570\n        /* \"#utility.yul\":3128:3134   */\n      dup2\n        /* \"#utility.yul\":3123:3126   */\n      dup6\n        /* \"#utility.yul\":3064:3135   */\n      tag_500\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":3057:3135   */\n      swap4\n      pop\n        /* \"#utility.yul\":3144:3209   */\n      tag_571\n        /* \"#utility.yul\":3202:3208   */\n      dup2\n        /* \"#utility.yul\":3197:3200   */\n      dup6\n        /* \"#utility.yul\":3190:3194   */\n      0x20\n        /* \"#utility.yul\":3183:3188   */\n      dup7\n        /* \"#utility.yul\":3179:3195   */\n      add\n        /* \"#utility.yul\":3144:3209   */\n      tag_501\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":3234:3263   */\n      tag_572\n        /* \"#utility.yul\":3256:3262   */\n      dup2\n        /* \"#utility.yul\":3234:3263   */\n      tag_502\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":3229:3232   */\n      dup5\n        /* \"#utility.yul\":3225:3264   */\n      add\n        /* \"#utility.yul\":3218:3264   */\n      swap2\n      pop\n        /* \"#utility.yul\":2985:3270   */\n      pop\n        /* \"#utility.yul\":2893:3270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3276:3589   */\n    tag_64:\n        /* \"#utility.yul\":3389:3393   */\n      0x00\n        /* \"#utility.yul\":3427:3429   */\n      0x20\n        /* \"#utility.yul\":3416:3425   */\n      dup3\n        /* \"#utility.yul\":3412:3430   */\n      add\n        /* \"#utility.yul\":3404:3430   */\n      swap1\n      pop\n        /* \"#utility.yul\":3476:3485   */\n      dup2\n        /* \"#utility.yul\":3470:3474   */\n      dup2\n        /* \"#utility.yul\":3466:3486   */\n      sub\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3440:3487   */\n      mstore\n        /* \"#utility.yul\":3504:3582   */\n      tag_574\n        /* \"#utility.yul\":3577:3581   */\n      dup2\n        /* \"#utility.yul\":3568:3574   */\n      dup5\n        /* \"#utility.yul\":3504:3582   */\n      tag_503\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":3496:3582   */\n      swap1\n      pop\n        /* \"#utility.yul\":3276:3589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3595:3672   */\n    tag_504:\n        /* \"#utility.yul\":3632:3639   */\n      0x00\n        /* \"#utility.yul\":3661:3666   */\n      dup2\n        /* \"#utility.yul\":3650:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3595:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3800   */\n    tag_505:\n        /* \"#utility.yul\":3751:3775   */\n      tag_577\n        /* \"#utility.yul\":3769:3774   */\n      dup2\n        /* \"#utility.yul\":3751:3775   */\n      tag_504\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":3744:3749   */\n      dup2\n        /* \"#utility.yul\":3741:3776   */\n      eq\n        /* \"#utility.yul\":3731:3794   */\n      tag_578\n      jumpi\n        /* \"#utility.yul\":3790:3791   */\n      0x00\n        /* \"#utility.yul\":3787:3788   */\n      dup1\n        /* \"#utility.yul\":3780:3792   */\n      revert\n        /* \"#utility.yul\":3731:3794   */\n    tag_578:\n        /* \"#utility.yul\":3678:3800   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3806:3945   */\n    tag_506:\n        /* \"#utility.yul\":3852:3857   */\n      0x00\n        /* \"#utility.yul\":3890:3896   */\n      dup2\n        /* \"#utility.yul\":3877:3897   */\n      calldataload\n        /* \"#utility.yul\":3868:3897   */\n      swap1\n      pop\n        /* \"#utility.yul\":3906:3939   */\n      tag_580\n        /* \"#utility.yul\":3933:3938   */\n      dup2\n        /* \"#utility.yul\":3906:3939   */\n      tag_505\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":3806:3945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3951:4425   */\n    tag_67:\n        /* \"#utility.yul\":4019:4025   */\n      0x00\n        /* \"#utility.yul\":4027:4033   */\n      dup1\n        /* \"#utility.yul\":4076:4078   */\n      0x40\n        /* \"#utility.yul\":4064:4073   */\n      dup4\n        /* \"#utility.yul\":4055:4062   */\n      dup6\n        /* \"#utility.yul\":4051:4074   */\n      sub\n        /* \"#utility.yul\":4047:4079   */\n      slt\n        /* \"#utility.yul\":4044:4163   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":4082:4161   */\n      tag_583\n      tag_488\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":4044:4163   */\n    tag_582:\n        /* \"#utility.yul\":4202:4203   */\n      0x00\n        /* \"#utility.yul\":4227:4280   */\n      tag_584\n        /* \"#utility.yul\":4272:4279   */\n      dup6\n        /* \"#utility.yul\":4263:4269   */\n      dup3\n        /* \"#utility.yul\":4252:4261   */\n      dup7\n        /* \"#utility.yul\":4248:4270   */\n      add\n        /* \"#utility.yul\":4227:4280   */\n      tag_498\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":4217:4280   */\n      swap3\n      pop\n        /* \"#utility.yul\":4173:4290   */\n      pop\n        /* \"#utility.yul\":4329:4331   */\n      0x20\n        /* \"#utility.yul\":4355:4408   */\n      tag_585\n        /* \"#utility.yul\":4400:4407   */\n      dup6\n        /* \"#utility.yul\":4391:4397   */\n      dup3\n        /* \"#utility.yul\":4380:4389   */\n      dup7\n        /* \"#utility.yul\":4376:4398   */\n      add\n        /* \"#utility.yul\":4355:4408   */\n      tag_506\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":4345:4408   */\n      swap2\n      pop\n        /* \"#utility.yul\":4300:4418   */\n      pop\n        /* \"#utility.yul\":3951:4425   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4431:4549   */\n    tag_507:\n        /* \"#utility.yul\":4518:4542   */\n      tag_587\n        /* \"#utility.yul\":4536:4541   */\n      dup2\n        /* \"#utility.yul\":4518:4542   */\n      tag_504\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":4513:4516   */\n      dup3\n        /* \"#utility.yul\":4506:4543   */\n      mstore\n        /* \"#utility.yul\":4431:4549   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:4777   */\n    tag_76:\n        /* \"#utility.yul\":4648:4652   */\n      0x00\n        /* \"#utility.yul\":4686:4688   */\n      0x20\n        /* \"#utility.yul\":4675:4684   */\n      dup3\n        /* \"#utility.yul\":4671:4689   */\n      add\n        /* \"#utility.yul\":4663:4689   */\n      swap1\n      pop\n        /* \"#utility.yul\":4699:4770   */\n      tag_589\n        /* \"#utility.yul\":4767:4768   */\n      0x00\n        /* \"#utility.yul\":4756:4765   */\n      dup4\n        /* \"#utility.yul\":4752:4769   */\n      add\n        /* \"#utility.yul\":4743:4749   */\n      dup5\n        /* \"#utility.yul\":4699:4770   */\n      tag_507\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":4555:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_79:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_592\n      tag_488\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":4893:5012   */\n    tag_591:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_593\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_498\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_594\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_498\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_595\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_506\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5485   */\n    tag_508:\n        /* \"#utility.yul\":5445:5452   */\n      0x00\n        /* \"#utility.yul\":5474:5479   */\n      dup2\n        /* \"#utility.yul\":5463:5479   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5491:5613   */\n    tag_509:\n        /* \"#utility.yul\":5564:5588   */\n      tag_598\n        /* \"#utility.yul\":5582:5587   */\n      dup2\n        /* \"#utility.yul\":5564:5588   */\n      tag_508\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5554:5589   */\n      eq\n        /* \"#utility.yul\":5544:5607   */\n      tag_599\n      jumpi\n        /* \"#utility.yul\":5603:5604   */\n      0x00\n        /* \"#utility.yul\":5600:5601   */\n      dup1\n        /* \"#utility.yul\":5593:5605   */\n      revert\n        /* \"#utility.yul\":5544:5607   */\n    tag_599:\n        /* \"#utility.yul\":5491:5613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5619:5758   */\n    tag_510:\n        /* \"#utility.yul\":5665:5670   */\n      0x00\n        /* \"#utility.yul\":5703:5709   */\n      dup2\n        /* \"#utility.yul\":5690:5710   */\n      calldataload\n        /* \"#utility.yul\":5681:5710   */\n      swap1\n      pop\n        /* \"#utility.yul\":5719:5752   */\n      tag_601\n        /* \"#utility.yul\":5746:5751   */\n      dup2\n        /* \"#utility.yul\":5719:5752   */\n      tag_509\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":5619:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6093   */\n    tag_87:\n        /* \"#utility.yul\":5823:5829   */\n      0x00\n        /* \"#utility.yul\":5872:5874   */\n      0x20\n        /* \"#utility.yul\":5860:5869   */\n      dup3\n        /* \"#utility.yul\":5851:5858   */\n      dup5\n        /* \"#utility.yul\":5847:5870   */\n      sub\n        /* \"#utility.yul\":5843:5875   */\n      slt\n        /* \"#utility.yul\":5840:5959   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":5878:5957   */\n      tag_604\n      tag_488\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":5840:5959   */\n    tag_603:\n        /* \"#utility.yul\":5998:5999   */\n      0x00\n        /* \"#utility.yul\":6023:6076   */\n      tag_605\n        /* \"#utility.yul\":6068:6075   */\n      dup5\n        /* \"#utility.yul\":6059:6065   */\n      dup3\n        /* \"#utility.yul\":6048:6057   */\n      dup6\n        /* \"#utility.yul\":6044:6066   */\n      add\n        /* \"#utility.yul\":6023:6076   */\n      tag_510\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":6013:6076   */\n      swap2\n      pop\n        /* \"#utility.yul\":5969:6086   */\n      pop\n        /* \"#utility.yul\":5764:6093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6099:6217   */\n    tag_511:\n        /* \"#utility.yul\":6186:6210   */\n      tag_607\n        /* \"#utility.yul\":6204:6209   */\n      dup2\n        /* \"#utility.yul\":6186:6210   */\n      tag_508\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":6181:6184   */\n      dup3\n        /* \"#utility.yul\":6174:6211   */\n      mstore\n        /* \"#utility.yul\":6099:6217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6445   */\n    tag_90:\n        /* \"#utility.yul\":6316:6320   */\n      0x00\n        /* \"#utility.yul\":6354:6356   */\n      0x20\n        /* \"#utility.yul\":6343:6352   */\n      dup3\n        /* \"#utility.yul\":6339:6357   */\n      add\n        /* \"#utility.yul\":6331:6357   */\n      swap1\n      pop\n        /* \"#utility.yul\":6367:6438   */\n      tag_609\n        /* \"#utility.yul\":6435:6436   */\n      0x00\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6437   */\n      add\n        /* \"#utility.yul\":6411:6417   */\n      dup5\n        /* \"#utility.yul\":6367:6438   */\n      tag_511\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":6223:6445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6925   */\n    tag_99:\n        /* \"#utility.yul\":6519:6525   */\n      0x00\n        /* \"#utility.yul\":6527:6533   */\n      dup1\n        /* \"#utility.yul\":6576:6578   */\n      0x40\n        /* \"#utility.yul\":6564:6573   */\n      dup4\n        /* \"#utility.yul\":6555:6562   */\n      dup6\n        /* \"#utility.yul\":6551:6574   */\n      sub\n        /* \"#utility.yul\":6547:6579   */\n      slt\n        /* \"#utility.yul\":6544:6663   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":6582:6661   */\n      tag_612\n      tag_488\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":6544:6663   */\n    tag_611:\n        /* \"#utility.yul\":6702:6703   */\n      0x00\n        /* \"#utility.yul\":6727:6780   */\n      tag_613\n        /* \"#utility.yul\":6772:6779   */\n      dup6\n        /* \"#utility.yul\":6763:6769   */\n      dup3\n        /* \"#utility.yul\":6752:6761   */\n      dup7\n        /* \"#utility.yul\":6748:6770   */\n      add\n        /* \"#utility.yul\":6727:6780   */\n      tag_510\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":6717:6780   */\n      swap3\n      pop\n        /* \"#utility.yul\":6673:6790   */\n      pop\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"#utility.yul\":6855:6908   */\n      tag_614\n        /* \"#utility.yul\":6900:6907   */\n      dup6\n        /* \"#utility.yul\":6891:6897   */\n      dup3\n        /* \"#utility.yul\":6880:6889   */\n      dup7\n        /* \"#utility.yul\":6876:6898   */\n      add\n        /* \"#utility.yul\":6855:6908   */\n      tag_498\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":6845:6908   */\n      swap2\n      pop\n        /* \"#utility.yul\":6800:6918   */\n      pop\n        /* \"#utility.yul\":6451:6925   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7017   */\n    tag_512:\n        /* \"#utility.yul\":6966:6973   */\n      0x00\n        /* \"#utility.yul\":7006:7010   */\n      0xff\n        /* \"#utility.yul\":6999:7004   */\n      dup3\n        /* \"#utility.yul\":6995:7011   */\n      and\n        /* \"#utility.yul\":6984:7011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7023:7135   */\n    tag_513:\n        /* \"#utility.yul\":7106:7128   */\n      tag_617\n        /* \"#utility.yul\":7122:7127   */\n      dup2\n        /* \"#utility.yul\":7106:7128   */\n      tag_512\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":7101:7104   */\n      dup3\n        /* \"#utility.yul\":7094:7129   */\n      mstore\n        /* \"#utility.yul\":7023:7135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7141:7355   */\n    tag_107:\n        /* \"#utility.yul\":7230:7234   */\n      0x00\n        /* \"#utility.yul\":7268:7270   */\n      0x20\n        /* \"#utility.yul\":7257:7266   */\n      dup3\n        /* \"#utility.yul\":7253:7271   */\n      add\n        /* \"#utility.yul\":7245:7271   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7348   */\n      tag_619\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7347   */\n      add\n        /* \"#utility.yul\":7321:7327   */\n      dup5\n        /* \"#utility.yul\":7281:7348   */\n      tag_513\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":7141:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7479   */\n    tag_514:\n        /* \"#utility.yul\":7448:7472   */\n      tag_621\n        /* \"#utility.yul\":7466:7471   */\n      dup2\n        /* \"#utility.yul\":7448:7472   */\n      tag_496\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":7443:7446   */\n      dup3\n        /* \"#utility.yul\":7436:7473   */\n      mstore\n        /* \"#utility.yul\":7361:7479   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7485:7707   */\n    tag_138:\n        /* \"#utility.yul\":7578:7582   */\n      0x00\n        /* \"#utility.yul\":7616:7618   */\n      0x20\n        /* \"#utility.yul\":7605:7614   */\n      dup3\n        /* \"#utility.yul\":7601:7619   */\n      add\n        /* \"#utility.yul\":7593:7619   */\n      swap1\n      pop\n        /* \"#utility.yul\":7629:7700   */\n      tag_623\n        /* \"#utility.yul\":7697:7698   */\n      0x00\n        /* \"#utility.yul\":7686:7695   */\n      dup4\n        /* \"#utility.yul\":7682:7699   */\n      add\n        /* \"#utility.yul\":7673:7679   */\n      dup5\n        /* \"#utility.yul\":7629:7700   */\n      tag_514\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":7485:7707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:8187   */\n    tag_182:\n        /* \"#utility.yul\":7781:7787   */\n      0x00\n        /* \"#utility.yul\":7789:7795   */\n      dup1\n        /* \"#utility.yul\":7838:7840   */\n      0x40\n        /* \"#utility.yul\":7826:7835   */\n      dup4\n        /* \"#utility.yul\":7817:7824   */\n      dup6\n        /* \"#utility.yul\":7813:7836   */\n      sub\n        /* \"#utility.yul\":7809:7841   */\n      slt\n        /* \"#utility.yul\":7806:7925   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":7844:7923   */\n      tag_626\n      tag_488\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":7806:7925   */\n    tag_625:\n        /* \"#utility.yul\":7964:7965   */\n      0x00\n        /* \"#utility.yul\":7989:8042   */\n      tag_627\n        /* \"#utility.yul\":8034:8041   */\n      dup6\n        /* \"#utility.yul\":8025:8031   */\n      dup3\n        /* \"#utility.yul\":8014:8023   */\n      dup7\n        /* \"#utility.yul\":8010:8032   */\n      add\n        /* \"#utility.yul\":7989:8042   */\n      tag_498\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":7979:8042   */\n      swap3\n      pop\n        /* \"#utility.yul\":7935:8052   */\n      pop\n        /* \"#utility.yul\":8091:8093   */\n      0x20\n        /* \"#utility.yul\":8117:8170   */\n      tag_628\n        /* \"#utility.yul\":8162:8169   */\n      dup6\n        /* \"#utility.yul\":8153:8159   */\n      dup3\n        /* \"#utility.yul\":8142:8151   */\n      dup7\n        /* \"#utility.yul\":8138:8160   */\n      add\n        /* \"#utility.yul\":8117:8170   */\n      tag_498\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":8107:8170   */\n      swap2\n      pop\n        /* \"#utility.yul\":8062:8180   */\n      pop\n        /* \"#utility.yul\":7713:8187   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8193:8373   */\n    tag_515:\n        /* \"#utility.yul\":8241:8318   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8238:8239   */\n      0x00\n        /* \"#utility.yul\":8231:8319   */\n      mstore\n        /* \"#utility.yul\":8338:8342   */\n      0x22\n        /* \"#utility.yul\":8335:8336   */\n      0x04\n        /* \"#utility.yul\":8328:8343   */\n      mstore\n        /* \"#utility.yul\":8362:8366   */\n      0x24\n        /* \"#utility.yul\":8359:8360   */\n      0x00\n        /* \"#utility.yul\":8352:8367   */\n      revert\n        /* \"#utility.yul\":8379:8699   */\n    tag_205:\n        /* \"#utility.yul\":8423:8429   */\n      0x00\n        /* \"#utility.yul\":8460:8461   */\n      0x02\n        /* \"#utility.yul\":8454:8458   */\n      dup3\n        /* \"#utility.yul\":8450:8462   */\n      div\n        /* \"#utility.yul\":8440:8462   */\n      swap1\n      pop\n        /* \"#utility.yul\":8507:8508   */\n      0x01\n        /* \"#utility.yul\":8501:8505   */\n      dup3\n        /* \"#utility.yul\":8497:8509   */\n      and\n        /* \"#utility.yul\":8528:8546   */\n      dup1\n        /* \"#utility.yul\":8518:8599   */\n      tag_631\n      jumpi\n        /* \"#utility.yul\":8584:8588   */\n      0x7f\n        /* \"#utility.yul\":8576:8582   */\n      dup3\n        /* \"#utility.yul\":8572:8589   */\n      and\n        /* \"#utility.yul\":8562:8589   */\n      swap2\n      pop\n        /* \"#utility.yul\":8518:8599   */\n    tag_631:\n        /* \"#utility.yul\":8646:8648   */\n      0x20\n        /* \"#utility.yul\":8638:8644   */\n      dup3\n        /* \"#utility.yul\":8635:8649   */\n      lt\n        /* \"#utility.yul\":8615:8633   */\n      dup2\n        /* \"#utility.yul\":8612:8650   */\n      sub\n        /* \"#utility.yul\":8609:8693   */\n      tag_632\n      jumpi\n        /* \"#utility.yul\":8665:8683   */\n      tag_633\n      tag_515\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":8609:8693   */\n    tag_632:\n        /* \"#utility.yul\":8430:8699   */\n      pop\n        /* \"#utility.yul\":8379:8699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8705:8879   */\n    tag_516:\n        /* \"#utility.yul\":8845:8871   */\n      0x53656e646572206163636f756e742069732066726f7a656e0000000000000000\n        /* \"#utility.yul\":8841:8842   */\n      0x00\n        /* \"#utility.yul\":8833:8839   */\n      dup3\n        /* \"#utility.yul\":8829:8843   */\n      add\n        /* \"#utility.yul\":8822:8872   */\n      mstore\n        /* \"#utility.yul\":8705:8879   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8885:9251   */\n    tag_517:\n        /* \"#utility.yul\":9027:9030   */\n      0x00\n        /* \"#utility.yul\":9048:9115   */\n      tag_636\n        /* \"#utility.yul\":9112:9114   */\n      0x18\n        /* \"#utility.yul\":9107:9110   */\n      dup4\n        /* \"#utility.yul\":9048:9115   */\n      tag_500\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":9041:9115   */\n      swap2\n      pop\n        /* \"#utility.yul\":9124:9217   */\n      tag_637\n        /* \"#utility.yul\":9213:9216   */\n      dup3\n        /* \"#utility.yul\":9124:9217   */\n      tag_516\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":9242:9244   */\n      0x20\n        /* \"#utility.yul\":9237:9240   */\n      dup3\n        /* \"#utility.yul\":9233:9245   */\n      add\n        /* \"#utility.yul\":9226:9245   */\n      swap1\n      pop\n        /* \"#utility.yul\":8885:9251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9257:9676   */\n    tag_231:\n        /* \"#utility.yul\":9423:9427   */\n      0x00\n        /* \"#utility.yul\":9461:9463   */\n      0x20\n        /* \"#utility.yul\":9450:9459   */\n      dup3\n        /* \"#utility.yul\":9446:9464   */\n      add\n        /* \"#utility.yul\":9438:9464   */\n      swap1\n      pop\n        /* \"#utility.yul\":9510:9519   */\n      dup2\n        /* \"#utility.yul\":9504:9508   */\n      dup2\n        /* \"#utility.yul\":9500:9520   */\n      sub\n        /* \"#utility.yul\":9496:9497   */\n      0x00\n        /* \"#utility.yul\":9485:9494   */\n      dup4\n        /* \"#utility.yul\":9481:9498   */\n      add\n        /* \"#utility.yul\":9474:9521   */\n      mstore\n        /* \"#utility.yul\":9538:9669   */\n      tag_639\n        /* \"#utility.yul\":9664:9668   */\n      dup2\n        /* \"#utility.yul\":9538:9669   */\n      tag_517\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":9530:9669   */\n      swap1\n      pop\n        /* \"#utility.yul\":9257:9676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:9859   */\n    tag_518:\n        /* \"#utility.yul\":9822:9851   */\n      0x526563697069656e74206163636f756e742069732066726f7a656e0000000000\n        /* \"#utility.yul\":9818:9819   */\n      0x00\n        /* \"#utility.yul\":9810:9816   */\n      dup3\n        /* \"#utility.yul\":9806:9820   */\n      add\n        /* \"#utility.yul\":9799:9852   */\n      mstore\n        /* \"#utility.yul\":9682:9859   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9865:10231   */\n    tag_519:\n        /* \"#utility.yul\":10007:10010   */\n      0x00\n        /* \"#utility.yul\":10028:10095   */\n      tag_642\n        /* \"#utility.yul\":10092:10094   */\n      0x1b\n        /* \"#utility.yul\":10087:10090   */\n      dup4\n        /* \"#utility.yul\":10028:10095   */\n      tag_500\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":10021:10095   */\n      swap2\n      pop\n        /* \"#utility.yul\":10104:10197   */\n      tag_643\n        /* \"#utility.yul\":10193:10196   */\n      dup3\n        /* \"#utility.yul\":10104:10197   */\n      tag_518\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":10222:10224   */\n      0x20\n        /* \"#utility.yul\":10217:10220   */\n      dup3\n        /* \"#utility.yul\":10213:10225   */\n      add\n        /* \"#utility.yul\":10206:10225   */\n      swap1\n      pop\n        /* \"#utility.yul\":9865:10231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10237:10656   */\n    tag_235:\n        /* \"#utility.yul\":10403:10407   */\n      0x00\n        /* \"#utility.yul\":10441:10443   */\n      0x20\n        /* \"#utility.yul\":10430:10439   */\n      dup3\n        /* \"#utility.yul\":10426:10444   */\n      add\n        /* \"#utility.yul\":10418:10444   */\n      swap1\n      pop\n        /* \"#utility.yul\":10490:10499   */\n      dup2\n        /* \"#utility.yul\":10484:10488   */\n      dup2\n        /* \"#utility.yul\":10480:10500   */\n      sub\n        /* \"#utility.yul\":10476:10477   */\n      0x00\n        /* \"#utility.yul\":10465:10474   */\n      dup4\n        /* \"#utility.yul\":10461:10478   */\n      add\n        /* \"#utility.yul\":10454:10501   */\n      mstore\n        /* \"#utility.yul\":10518:10649   */\n      tag_645\n        /* \"#utility.yul\":10644:10648   */\n      dup2\n        /* \"#utility.yul\":10518:10649   */\n      tag_519\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":10510:10649   */\n      swap1\n      pop\n        /* \"#utility.yul\":10237:10656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10662:10841   */\n    tag_520:\n        /* \"#utility.yul\":10802:10833   */\n      0x53656e646572206163636f756e7420697320626c61636b6c6973746564000000\n        /* \"#utility.yul\":10798:10799   */\n      0x00\n        /* \"#utility.yul\":10790:10796   */\n      dup3\n        /* \"#utility.yul\":10786:10800   */\n      add\n        /* \"#utility.yul\":10779:10834   */\n      mstore\n        /* \"#utility.yul\":10662:10841   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10847:11213   */\n    tag_521:\n        /* \"#utility.yul\":10989:10992   */\n      0x00\n        /* \"#utility.yul\":11010:11077   */\n      tag_648\n        /* \"#utility.yul\":11074:11076   */\n      0x1d\n        /* \"#utility.yul\":11069:11072   */\n      dup4\n        /* \"#utility.yul\":11010:11077   */\n      tag_500\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":11003:11077   */\n      swap2\n      pop\n        /* \"#utility.yul\":11086:11179   */\n      tag_649\n        /* \"#utility.yul\":11175:11178   */\n      dup3\n        /* \"#utility.yul\":11086:11179   */\n      tag_520\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":11204:11206   */\n      0x20\n        /* \"#utility.yul\":11199:11202   */\n      dup3\n        /* \"#utility.yul\":11195:11207   */\n      add\n        /* \"#utility.yul\":11188:11207   */\n      swap1\n      pop\n        /* \"#utility.yul\":10847:11213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11219:11638   */\n    tag_239:\n        /* \"#utility.yul\":11385:11389   */\n      0x00\n        /* \"#utility.yul\":11423:11425   */\n      0x20\n        /* \"#utility.yul\":11412:11421   */\n      dup3\n        /* \"#utility.yul\":11408:11426   */\n      add\n        /* \"#utility.yul\":11400:11426   */\n      swap1\n      pop\n        /* \"#utility.yul\":11472:11481   */\n      dup2\n        /* \"#utility.yul\":11466:11470   */\n      dup2\n        /* \"#utility.yul\":11462:11482   */\n      sub\n        /* \"#utility.yul\":11458:11459   */\n      0x00\n        /* \"#utility.yul\":11447:11456   */\n      dup4\n        /* \"#utility.yul\":11443:11460   */\n      add\n        /* \"#utility.yul\":11436:11483   */\n      mstore\n        /* \"#utility.yul\":11500:11631   */\n      tag_651\n        /* \"#utility.yul\":11626:11630   */\n      dup2\n        /* \"#utility.yul\":11500:11631   */\n      tag_521\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":11492:11631   */\n      swap1\n      pop\n        /* \"#utility.yul\":11219:11638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11644:11826   */\n    tag_522:\n        /* \"#utility.yul\":11784:11818   */\n      0x526563697069656e74206163636f756e7420697320626c61636b6c6973746564\n        /* \"#utility.yul\":11780:11781   */\n      0x00\n        /* \"#utility.yul\":11772:11778   */\n      dup3\n        /* \"#utility.yul\":11768:11782   */\n      add\n        /* \"#utility.yul\":11761:11819   */\n      mstore\n        /* \"#utility.yul\":11644:11826   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11832:12198   */\n    tag_523:\n        /* \"#utility.yul\":11974:11977   */\n      0x00\n        /* \"#utility.yul\":11995:12062   */\n      tag_654\n        /* \"#utility.yul\":12059:12061   */\n      0x20\n        /* \"#utility.yul\":12054:12057   */\n      dup4\n        /* \"#utility.yul\":11995:12062   */\n      tag_500\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":11988:12062   */\n      swap2\n      pop\n        /* \"#utility.yul\":12071:12164   */\n      tag_655\n        /* \"#utility.yul\":12160:12163   */\n      dup3\n        /* \"#utility.yul\":12071:12164   */\n      tag_522\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":12189:12191   */\n      0x20\n        /* \"#utility.yul\":12184:12187   */\n      dup3\n        /* \"#utility.yul\":12180:12192   */\n      add\n        /* \"#utility.yul\":12173:12192   */\n      swap1\n      pop\n        /* \"#utility.yul\":11832:12198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12204:12623   */\n    tag_243:\n        /* \"#utility.yul\":12370:12374   */\n      0x00\n        /* \"#utility.yul\":12408:12410   */\n      0x20\n        /* \"#utility.yul\":12397:12406   */\n      dup3\n        /* \"#utility.yul\":12393:12411   */\n      add\n        /* \"#utility.yul\":12385:12411   */\n      swap1\n      pop\n        /* \"#utility.yul\":12457:12466   */\n      dup2\n        /* \"#utility.yul\":12451:12455   */\n      dup2\n        /* \"#utility.yul\":12447:12467   */\n      sub\n        /* \"#utility.yul\":12443:12444   */\n      0x00\n        /* \"#utility.yul\":12432:12441   */\n      dup4\n        /* \"#utility.yul\":12428:12445   */\n      add\n        /* \"#utility.yul\":12421:12468   */\n      mstore\n        /* \"#utility.yul\":12485:12616   */\n      tag_657\n        /* \"#utility.yul\":12611:12615   */\n      dup2\n        /* \"#utility.yul\":12485:12616   */\n      tag_523\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":12477:12616   */\n      swap1\n      pop\n        /* \"#utility.yul\":12204:12623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12629:12805   */\n    tag_524:\n        /* \"#utility.yul\":12769:12797   */\n      0x4163636f756e74206973206e6f7420626c61636b6c6973746564000000000000\n        /* \"#utility.yul\":12765:12766   */\n      0x00\n        /* \"#utility.yul\":12757:12763   */\n      dup3\n        /* \"#utility.yul\":12753:12767   */\n      add\n        /* \"#utility.yul\":12746:12798   */\n      mstore\n        /* \"#utility.yul\":12629:12805   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12811:13177   */\n    tag_525:\n        /* \"#utility.yul\":12953:12956   */\n      0x00\n        /* \"#utility.yul\":12974:13041   */\n      tag_660\n        /* \"#utility.yul\":13038:13040   */\n      0x1a\n        /* \"#utility.yul\":13033:13036   */\n      dup4\n        /* \"#utility.yul\":12974:13041   */\n      tag_500\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":12967:13041   */\n      swap2\n      pop\n        /* \"#utility.yul\":13050:13143   */\n      tag_661\n        /* \"#utility.yul\":13139:13142   */\n      dup3\n        /* \"#utility.yul\":13050:13143   */\n      tag_524\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":13168:13170   */\n      0x20\n        /* \"#utility.yul\":13163:13166   */\n      dup3\n        /* \"#utility.yul\":13159:13171   */\n      add\n        /* \"#utility.yul\":13152:13171   */\n      swap1\n      pop\n        /* \"#utility.yul\":12811:13177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13183:13602   */\n    tag_282:\n        /* \"#utility.yul\":13349:13353   */\n      0x00\n        /* \"#utility.yul\":13387:13389   */\n      0x20\n        /* \"#utility.yul\":13376:13385   */\n      dup3\n        /* \"#utility.yul\":13372:13390   */\n      add\n        /* \"#utility.yul\":13364:13390   */\n      swap1\n      pop\n        /* \"#utility.yul\":13436:13445   */\n      dup2\n        /* \"#utility.yul\":13430:13434   */\n      dup2\n        /* \"#utility.yul\":13426:13446   */\n      sub\n        /* \"#utility.yul\":13422:13423   */\n      0x00\n        /* \"#utility.yul\":13411:13420   */\n      dup4\n        /* \"#utility.yul\":13407:13424   */\n      add\n        /* \"#utility.yul\":13400:13447   */\n      mstore\n        /* \"#utility.yul\":13464:13595   */\n      tag_663\n        /* \"#utility.yul\":13590:13594   */\n      dup2\n        /* \"#utility.yul\":13464:13595   */\n      tag_525\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":13456:13595   */\n      swap1\n      pop\n        /* \"#utility.yul\":13183:13602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13608:13779   */\n    tag_526:\n        /* \"#utility.yul\":13748:13771   */\n      0x4163636f756e74206973206e6f742066726f7a656e0000000000000000000000\n        /* \"#utility.yul\":13744:13745   */\n      0x00\n        /* \"#utility.yul\":13736:13742   */\n      dup3\n        /* \"#utility.yul\":13732:13746   */\n      add\n        /* \"#utility.yul\":13725:13772   */\n      mstore\n        /* \"#utility.yul\":13608:13779   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13785:14151   */\n    tag_527:\n        /* \"#utility.yul\":13927:13930   */\n      0x00\n        /* \"#utility.yul\":13948:14015   */\n      tag_666\n        /* \"#utility.yul\":14012:14014   */\n      0x15\n        /* \"#utility.yul\":14007:14010   */\n      dup4\n        /* \"#utility.yul\":13948:14015   */\n      tag_500\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":13941:14015   */\n      swap2\n      pop\n        /* \"#utility.yul\":14024:14117   */\n      tag_667\n        /* \"#utility.yul\":14113:14116   */\n      dup3\n        /* \"#utility.yul\":14024:14117   */\n      tag_526\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":14142:14144   */\n      0x20\n        /* \"#utility.yul\":14137:14140   */\n      dup3\n        /* \"#utility.yul\":14133:14145   */\n      add\n        /* \"#utility.yul\":14126:14145   */\n      swap1\n      pop\n        /* \"#utility.yul\":13785:14151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14157:14576   */\n    tag_297:\n        /* \"#utility.yul\":14323:14327   */\n      0x00\n        /* \"#utility.yul\":14361:14363   */\n      0x20\n        /* \"#utility.yul\":14350:14359   */\n      dup3\n        /* \"#utility.yul\":14346:14364   */\n      add\n        /* \"#utility.yul\":14338:14364   */\n      swap1\n      pop\n        /* \"#utility.yul\":14410:14419   */\n      dup2\n        /* \"#utility.yul\":14404:14408   */\n      dup2\n        /* \"#utility.yul\":14400:14420   */\n      sub\n        /* \"#utility.yul\":14396:14397   */\n      0x00\n        /* \"#utility.yul\":14385:14394   */\n      dup4\n        /* \"#utility.yul\":14381:14398   */\n      add\n        /* \"#utility.yul\":14374:14421   */\n      mstore\n        /* \"#utility.yul\":14438:14569   */\n      tag_669\n        /* \"#utility.yul\":14564:14568   */\n      dup2\n        /* \"#utility.yul\":14438:14569   */\n      tag_527\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":14430:14569   */\n      swap1\n      pop\n        /* \"#utility.yul\":14157:14576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14582:14762   */\n    tag_528:\n        /* \"#utility.yul\":14722:14754   */\n      0x4163636f756e7420697320616c726561647920626c61636b6c69737465640000\n        /* \"#utility.yul\":14718:14719   */\n      0x00\n        /* \"#utility.yul\":14710:14716   */\n      dup3\n        /* \"#utility.yul\":14706:14720   */\n      add\n        /* \"#utility.yul\":14699:14755   */\n      mstore\n        /* \"#utility.yul\":14582:14762   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14768:15134   */\n    tag_529:\n        /* \"#utility.yul\":14910:14913   */\n      0x00\n        /* \"#utility.yul\":14931:14998   */\n      tag_672\n        /* \"#utility.yul\":14995:14997   */\n      0x1e\n        /* \"#utility.yul\":14990:14993   */\n      dup4\n        /* \"#utility.yul\":14931:14998   */\n      tag_500\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":14924:14998   */\n      swap2\n      pop\n        /* \"#utility.yul\":15007:15100   */\n      tag_673\n        /* \"#utility.yul\":15096:15099   */\n      dup3\n        /* \"#utility.yul\":15007:15100   */\n      tag_528\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":15125:15127   */\n      0x20\n        /* \"#utility.yul\":15120:15123   */\n      dup3\n        /* \"#utility.yul\":15116:15128   */\n      add\n        /* \"#utility.yul\":15109:15128   */\n      swap1\n      pop\n        /* \"#utility.yul\":14768:15134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15140:15559   */\n    tag_349:\n        /* \"#utility.yul\":15306:15310   */\n      0x00\n        /* \"#utility.yul\":15344:15346   */\n      0x20\n        /* \"#utility.yul\":15333:15342   */\n      dup3\n        /* \"#utility.yul\":15329:15347   */\n      add\n        /* \"#utility.yul\":15321:15347   */\n      swap1\n      pop\n        /* \"#utility.yul\":15393:15402   */\n      dup2\n        /* \"#utility.yul\":15387:15391   */\n      dup2\n        /* \"#utility.yul\":15383:15403   */\n      sub\n        /* \"#utility.yul\":15379:15380   */\n      0x00\n        /* \"#utility.yul\":15368:15377   */\n      dup4\n        /* \"#utility.yul\":15364:15381   */\n      add\n        /* \"#utility.yul\":15357:15404   */\n      mstore\n        /* \"#utility.yul\":15421:15552   */\n      tag_675\n        /* \"#utility.yul\":15547:15551   */\n      dup2\n        /* \"#utility.yul\":15421:15552   */\n      tag_529\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":15413:15552   */\n      swap1\n      pop\n        /* \"#utility.yul\":15140:15559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15565:15740   */\n    tag_530:\n        /* \"#utility.yul\":15705:15732   */\n      0x4163636f756e7420697320616c72656164792066726f7a656e00000000000000\n        /* \"#utility.yul\":15701:15702   */\n      0x00\n        /* \"#utility.yul\":15693:15699   */\n      dup3\n        /* \"#utility.yul\":15689:15703   */\n      add\n        /* \"#utility.yul\":15682:15733   */\n      mstore\n        /* \"#utility.yul\":15565:15740   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15746:16112   */\n    tag_531:\n        /* \"#utility.yul\":15888:15891   */\n      0x00\n        /* \"#utility.yul\":15909:15976   */\n      tag_678\n        /* \"#utility.yul\":15973:15975   */\n      0x19\n        /* \"#utility.yul\":15968:15971   */\n      dup4\n        /* \"#utility.yul\":15909:15976   */\n      tag_500\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":15902:15976   */\n      swap2\n      pop\n        /* \"#utility.yul\":15985:16078   */\n      tag_679\n        /* \"#utility.yul\":16074:16077   */\n      dup3\n        /* \"#utility.yul\":15985:16078   */\n      tag_530\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":16103:16105   */\n      0x20\n        /* \"#utility.yul\":16098:16101   */\n      dup3\n        /* \"#utility.yul\":16094:16106   */\n      add\n        /* \"#utility.yul\":16087:16106   */\n      swap1\n      pop\n        /* \"#utility.yul\":15746:16112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16118:16537   */\n    tag_364:\n        /* \"#utility.yul\":16284:16288   */\n      0x00\n        /* \"#utility.yul\":16322:16324   */\n      0x20\n        /* \"#utility.yul\":16311:16320   */\n      dup3\n        /* \"#utility.yul\":16307:16325   */\n      add\n        /* \"#utility.yul\":16299:16325   */\n      swap1\n      pop\n        /* \"#utility.yul\":16371:16380   */\n      dup2\n        /* \"#utility.yul\":16365:16369   */\n      dup2\n        /* \"#utility.yul\":16361:16381   */\n      sub\n        /* \"#utility.yul\":16357:16358   */\n      0x00\n        /* \"#utility.yul\":16346:16355   */\n      dup4\n        /* \"#utility.yul\":16342:16359   */\n      add\n        /* \"#utility.yul\":16335:16382   */\n      mstore\n        /* \"#utility.yul\":16399:16530   */\n      tag_681\n        /* \"#utility.yul\":16525:16529   */\n      dup2\n        /* \"#utility.yul\":16399:16530   */\n      tag_531\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":16391:16530   */\n      swap1\n      pop\n        /* \"#utility.yul\":16118:16537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16543:16875   */\n    tag_445:\n        /* \"#utility.yul\":16664:16668   */\n      0x00\n        /* \"#utility.yul\":16702:16704   */\n      0x40\n        /* \"#utility.yul\":16691:16700   */\n      dup3\n        /* \"#utility.yul\":16687:16705   */\n      add\n        /* \"#utility.yul\":16679:16705   */\n      swap1\n      pop\n        /* \"#utility.yul\":16715:16786   */\n      tag_683\n        /* \"#utility.yul\":16783:16784   */\n      0x00\n        /* \"#utility.yul\":16772:16781   */\n      dup4\n        /* \"#utility.yul\":16768:16785   */\n      add\n        /* \"#utility.yul\":16759:16765   */\n      dup6\n        /* \"#utility.yul\":16715:16786   */\n      tag_514\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":16796:16868   */\n      tag_684\n        /* \"#utility.yul\":16864:16866   */\n      0x20\n        /* \"#utility.yul\":16853:16862   */\n      dup4\n        /* \"#utility.yul\":16849:16867   */\n      add\n        /* \"#utility.yul\":16840:16846   */\n      dup5\n        /* \"#utility.yul\":16796:16868   */\n      tag_511\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":16543:16875   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16881:17061   */\n    tag_532:\n        /* \"#utility.yul\":16929:17006   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16926:16927   */\n      0x00\n        /* \"#utility.yul\":16919:17007   */\n      mstore\n        /* \"#utility.yul\":17026:17030   */\n      0x11\n        /* \"#utility.yul\":17023:17024   */\n      0x04\n        /* \"#utility.yul\":17016:17031   */\n      mstore\n        /* \"#utility.yul\":17050:17054   */\n      0x24\n        /* \"#utility.yul\":17047:17048   */\n      0x00\n        /* \"#utility.yul\":17040:17055   */\n      revert\n        /* \"#utility.yul\":17067:17258   */\n    tag_449:\n        /* \"#utility.yul\":17107:17110   */\n      0x00\n        /* \"#utility.yul\":17126:17146   */\n      tag_687\n        /* \"#utility.yul\":17144:17145   */\n      dup3\n        /* \"#utility.yul\":17126:17146   */\n      tag_504\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":17121:17146   */\n      swap2\n      pop\n        /* \"#utility.yul\":17160:17180   */\n      tag_688\n        /* \"#utility.yul\":17178:17179   */\n      dup4\n        /* \"#utility.yul\":17160:17180   */\n      tag_504\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":17155:17180   */\n      swap3\n      pop\n        /* \"#utility.yul\":17203:17204   */\n      dup3\n        /* \"#utility.yul\":17200:17201   */\n      dup3\n        /* \"#utility.yul\":17196:17205   */\n      add\n        /* \"#utility.yul\":17189:17205   */\n      swap1\n      pop\n        /* \"#utility.yul\":17224:17227   */\n      dup1\n        /* \"#utility.yul\":17221:17222   */\n      dup3\n        /* \"#utility.yul\":17218:17228   */\n      gt\n        /* \"#utility.yul\":17215:17251   */\n      iszero\n      tag_689\n      jumpi\n        /* \"#utility.yul\":17231:17249   */\n      tag_690\n      tag_532\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":17215:17251   */\n    tag_689:\n        /* \"#utility.yul\":17067:17258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17264:17706   */\n    tag_453:\n        /* \"#utility.yul\":17413:17417   */\n      0x00\n        /* \"#utility.yul\":17451:17453   */\n      0x60\n        /* \"#utility.yul\":17440:17449   */\n      dup3\n        /* \"#utility.yul\":17436:17454   */\n      add\n        /* \"#utility.yul\":17428:17454   */\n      swap1\n      pop\n        /* \"#utility.yul\":17464:17535   */\n      tag_692\n        /* \"#utility.yul\":17532:17533   */\n      0x00\n        /* \"#utility.yul\":17521:17530   */\n      dup4\n        /* \"#utility.yul\":17517:17534   */\n      add\n        /* \"#utility.yul\":17508:17514   */\n      dup7\n        /* \"#utility.yul\":17464:17535   */\n      tag_514\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":17545:17617   */\n      tag_693\n        /* \"#utility.yul\":17613:17615   */\n      0x20\n        /* \"#utility.yul\":17602:17611   */\n      dup4\n        /* \"#utility.yul\":17598:17616   */\n      add\n        /* \"#utility.yul\":17589:17595   */\n      dup6\n        /* \"#utility.yul\":17545:17617   */\n      tag_507\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":17627:17699   */\n      tag_694\n        /* \"#utility.yul\":17695:17697   */\n      0x40\n        /* \"#utility.yul\":17684:17693   */\n      dup4\n        /* \"#utility.yul\":17680:17698   */\n      add\n        /* \"#utility.yul\":17671:17677   */\n      dup5\n        /* \"#utility.yul\":17627:17699   */\n      tag_507\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":17264:17706   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17712:17906   */\n    tag_467:\n        /* \"#utility.yul\":17752:17756   */\n      0x00\n        /* \"#utility.yul\":17772:17792   */\n      tag_696\n        /* \"#utility.yul\":17790:17791   */\n      dup3\n        /* \"#utility.yul\":17772:17792   */\n      tag_504\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":17767:17792   */\n      swap2\n      pop\n        /* \"#utility.yul\":17806:17826   */\n      tag_697\n        /* \"#utility.yul\":17824:17825   */\n      dup4\n        /* \"#utility.yul\":17806:17826   */\n      tag_504\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":17801:17826   */\n      swap3\n      pop\n        /* \"#utility.yul\":17850:17851   */\n      dup3\n        /* \"#utility.yul\":17847:17848   */\n      dup3\n        /* \"#utility.yul\":17843:17852   */\n      sub\n        /* \"#utility.yul\":17835:17852   */\n      swap1\n      pop\n        /* \"#utility.yul\":17874:17875   */\n      dup2\n        /* \"#utility.yul\":17868:17872   */\n      dup2\n        /* \"#utility.yul\":17865:17876   */\n      gt\n        /* \"#utility.yul\":17862:17899   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":17879:17897   */\n      tag_699\n      tag_532\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":17862:17899   */\n    tag_698:\n        /* \"#utility.yul\":17712:17906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17912:18092   */\n    tag_472:\n        /* \"#utility.yul\":17960:18037   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17957:17958   */\n      0x00\n        /* \"#utility.yul\":17950:18038   */\n      mstore\n        /* \"#utility.yul\":18057:18061   */\n      0x32\n        /* \"#utility.yul\":18054:18055   */\n      0x04\n        /* \"#utility.yul\":18047:18062   */\n      mstore\n        /* \"#utility.yul\":18081:18085   */\n      0x24\n        /* \"#utility.yul\":18078:18079   */\n      0x00\n        /* \"#utility.yul\":18071:18086   */\n      revert\n        /* \"#utility.yul\":18098:18278   */\n    tag_479:\n        /* \"#utility.yul\":18146:18223   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18143:18144   */\n      0x00\n        /* \"#utility.yul\":18136:18224   */\n      mstore\n        /* \"#utility.yul\":18243:18247   */\n      0x31\n        /* \"#utility.yul\":18240:18241   */\n      0x04\n        /* \"#utility.yul\":18233:18248   */\n      mstore\n        /* \"#utility.yul\":18267:18271   */\n      0x24\n        /* \"#utility.yul\":18264:18265   */\n      0x00\n        /* \"#utility.yul\":18257:18272   */\n      revert\n\n    auxdata: 0xa26469706673582212209c26cc67ef99f195020f6087d9e61d1bb3d80c84a11a7f1c70f958753d6279a464736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2030": {
									"entryPoint": null,
									"id": 2030,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_429": {
									"entryPoint": null,
									"id": 429,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 435,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1294": {
									"entryPoint": 781,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_525": {
									"entryPoint": 240,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 681,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1627,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9053:12",
										"nodeType": "YulBlock",
										"src": "0:9053:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "423:28:12",
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:12",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:12:12",
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nativeSrc": "433:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nativeSrc": "546:28:12",
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:12",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:12",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nativeSrc": "556:12:12",
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nativeSrc": "556:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nativeSrc": "628:54:12",
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nativeSrc": "638:38:12",
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:12",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nativeSrc": "652:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:12",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nativeSrc": "668:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nativeSrc": "648:28:12",
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:12",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:12",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nativeSrc": "716:152:12",
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:12",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:12",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nativeSrc": "726:88:12",
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nativeSrc": "726:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:12",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:12",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nativeSrc": "823:15:12",
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nativeSrc": "823:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:12",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:12",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nativeSrc": "847:15:12",
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nativeSrc": "847:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nativeSrc": "917:238:12",
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nativeSrc": "927:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nativeSrc": "957:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nativeSrc": "945:40:12",
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:12",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:12",
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nativeSrc": "1098:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nativeSrc": "1098:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:12",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nativeSrc": "1036:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nativeSrc": "1072:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nativeSrc": "1033:62:12",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nativeSrc": "1030:88:12",
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nativeSrc": "1127:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nativeSrc": "1127:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:12",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:12",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nativeSrc": "1202:88:12",
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nativeSrc": "1212:30:12",
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nativeSrc": "1222:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nativeSrc": "1251:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nativeSrc": "1251:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:12",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:12",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nativeSrc": "1363:241:12",
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:12",
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nativeSrc": "1470:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nativeSrc": "1470:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nativeSrc": "1437:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nativeSrc": "1434:56:12",
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nativeSrc": "1500:37:12",
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nativeSrc": "1508:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nativeSrc": "1574:23:12",
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nativeSrc": "1582:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:12",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:12",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nativeSrc": "1672:77:12",
													"nodeType": "YulBlock",
													"src": "1672:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:12"
																},
																"nativeSrc": "1683:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:12"
															},
															"nativeSrc": "1683:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:12"
																		},
																		"nativeSrc": "1722:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:12"
																},
																"nativeSrc": "1715:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:12"
															},
															"nativeSrc": "1715:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:12",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:12",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:12",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:139:12"
											},
											{
												"body": {
													"nativeSrc": "1850:339:12",
													"nodeType": "YulBlock",
													"src": "1850:339:12",
													"statements": [
														{
															"nativeSrc": "1860:75:12",
															"nodeType": "YulAssignment",
															"src": "1860:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:12"
																		},
																		"nativeSrc": "1885:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:12"
																},
																"nativeSrc": "1869:66:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:12"
																},
																"nativeSrc": "1944:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:12"
															},
															"nativeSrc": "1944:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:12"
														},
														{
															"nativeSrc": "1974:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:12"
																},
																"nativeSrc": "1985:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:12",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:12",
																"nodeType": "YulBlock",
																"src": "2039:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:12"
																			},
																			"nativeSrc": "2041:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:12"
																		},
																		"nativeSrc": "2041:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:12"
																		},
																		"nativeSrc": "2016:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:12"
																},
																"nativeSrc": "2013:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:12"
															},
															"nativeSrc": "2010:112:12",
															"nodeType": "YulIf",
															"src": "2010:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:12"
																},
																"nativeSrc": "2131:52:12",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:12"
															},
															"nativeSrc": "2131:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:12",
														"nodeType": "YulTypedName",
														"src": "1823:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:12",
														"nodeType": "YulTypedName",
														"src": "1828:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:12",
														"nodeType": "YulTypedName",
														"src": "1836:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:12",
														"nodeType": "YulTypedName",
														"src": "1844:5:12",
														"type": ""
													}
												],
												"src": "1755:434:12"
											},
											{
												"body": {
													"nativeSrc": "2282:282:12",
													"nodeType": "YulBlock",
													"src": "2282:282:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:12",
																"nodeType": "YulBlock",
																"src": "2331:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:12"
																			},
																			"nativeSrc": "2333:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:12"
																		},
																		"nativeSrc": "2333:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:12"
																				},
																				"nativeSrc": "2306:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:12"
																		},
																		"nativeSrc": "2302:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:12"
																},
																"nativeSrc": "2295:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:12"
															},
															"nativeSrc": "2292:122:12",
															"nodeType": "YulIf",
															"src": "2292:122:12"
														},
														{
															"nativeSrc": "2423:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:12"
																},
																"nativeSrc": "2437:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:12",
															"nodeType": "YulAssignment",
															"src": "2459:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:12"
																		},
																		"nativeSrc": "2527:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:12"
																},
																"nativeSrc": "2468:90:12",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:12",
														"nodeType": "YulTypedName",
														"src": "2260:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:12",
														"nodeType": "YulTypedName",
														"src": "2268:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:12",
														"nodeType": "YulTypedName",
														"src": "2276:5:12",
														"type": ""
													}
												],
												"src": "2209:355:12"
											},
											{
												"body": {
													"nativeSrc": "2684:739:12",
													"nodeType": "YulBlock",
													"src": "2684:739:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:12",
																"nodeType": "YulBlock",
																"src": "2730:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:12"
																			},
																			"nativeSrc": "2732:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:12"
																		},
																		"nativeSrc": "2732:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:12"
																		},
																		"nativeSrc": "2701:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:12"
																},
																"nativeSrc": "2697:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:12"
															},
															"nativeSrc": "2694:119:12",
															"nodeType": "YulIf",
															"src": "2694:119:12"
														},
														{
															"nativeSrc": "2823:291:12",
															"nodeType": "YulBlock",
															"src": "2823:291:12",
															"statements": [
																{
																	"nativeSrc": "2838:38:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:12"
																				},
																				"nativeSrc": "2858:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:12"
																		},
																		"nativeSrc": "2852:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:12",
																		"nodeType": "YulBlock",
																		"src": "2923:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:12"
																					},
																					"nativeSrc": "2925:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:12"
																				},
																				"nativeSrc": "2925:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:12",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:12"
																		},
																		"nativeSrc": "2892:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:12"
																	},
																	"nativeSrc": "2889:117:12",
																	"nodeType": "YulIf",
																	"src": "2889:117:12"
																},
																{
																	"nativeSrc": "3020:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:12"
																				},
																				"nativeSrc": "3072:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:12"
																		},
																		"nativeSrc": "3030:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:12",
															"nodeType": "YulBlock",
															"src": "3124:292:12",
															"statements": [
																{
																	"nativeSrc": "3139:39:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:12"
																				},
																				"nativeSrc": "3159:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:12"
																		},
																		"nativeSrc": "3153:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:12",
																		"nodeType": "YulBlock",
																		"src": "3225:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:12"
																					},
																					"nativeSrc": "3227:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:12"
																				},
																				"nativeSrc": "3227:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:12"
																		},
																		"nativeSrc": "3194:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:12"
																	},
																	"nativeSrc": "3191:117:12",
																	"nodeType": "YulIf",
																	"src": "3191:117:12"
																},
																{
																	"nativeSrc": "3322:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:12"
																				},
																				"nativeSrc": "3374:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:12"
																		},
																		"nativeSrc": "3332:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:12",
														"nodeType": "YulTypedName",
														"src": "2646:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:12",
														"nodeType": "YulTypedName",
														"src": "2657:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:12",
														"nodeType": "YulTypedName",
														"src": "2669:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:12",
														"nodeType": "YulTypedName",
														"src": "2677:6:12",
														"type": ""
													}
												],
												"src": "2570:853:12"
											},
											{
												"body": {
													"nativeSrc": "3488:40:12",
													"nodeType": "YulBlock",
													"src": "3488:40:12",
													"statements": [
														{
															"nativeSrc": "3499:22:12",
															"nodeType": "YulAssignment",
															"src": "3499:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:12"
																},
																"nativeSrc": "3509:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:12",
														"nodeType": "YulTypedName",
														"src": "3471:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:12",
														"nodeType": "YulTypedName",
														"src": "3481:6:12",
														"type": ""
													}
												],
												"src": "3429:99:12"
											},
											{
												"body": {
													"nativeSrc": "3562:152:12",
													"nodeType": "YulBlock",
													"src": "3562:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:12",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:12"
																},
																"nativeSrc": "3572:88:12",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:12"
															},
															"nativeSrc": "3572:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:12"
																},
																"nativeSrc": "3669:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:12"
															},
															"nativeSrc": "3669:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:12"
																},
																"nativeSrc": "3693:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:12"
															},
															"nativeSrc": "3693:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:12"
											},
											{
												"body": {
													"nativeSrc": "3771:269:12",
													"nodeType": "YulBlock",
													"src": "3771:269:12",
													"statements": [
														{
															"nativeSrc": "3781:22:12",
															"nodeType": "YulAssignment",
															"src": "3781:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:12"
																},
																"nativeSrc": "3791:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:12"
																}
															]
														},
														{
															"nativeSrc": "3812:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:12"
																},
																"nativeSrc": "3838:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:12",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:12",
																"nodeType": "YulBlock",
																"src": "3889:51:12",
																"statements": [
																	{
																		"nativeSrc": "3903:27:12",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:12"
																			},
																			"nativeSrc": "3913:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:12"
																},
																"nativeSrc": "3862:26:12",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:12"
															},
															"nativeSrc": "3859:81:12",
															"nodeType": "YulIf",
															"src": "3859:81:12"
														},
														{
															"body": {
																"nativeSrc": "3992:42:12",
																"nodeType": "YulBlock",
																"src": "3992:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:12"
																			},
																			"nativeSrc": "4006:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:12"
																		},
																		"nativeSrc": "4006:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:12"
																		},
																		"nativeSrc": "3976:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:12"
																},
																"nativeSrc": "3953:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:12"
															},
															"nativeSrc": "3950:84:12",
															"nodeType": "YulIf",
															"src": "3950:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:12",
														"nodeType": "YulTypedName",
														"src": "3755:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:12",
														"nodeType": "YulTypedName",
														"src": "3764:6:12",
														"type": ""
													}
												],
												"src": "3720:320:12"
											},
											{
												"body": {
													"nativeSrc": "4100:87:12",
													"nodeType": "YulBlock",
													"src": "4100:87:12",
													"statements": [
														{
															"nativeSrc": "4110:11:12",
															"nodeType": "YulAssignment",
															"src": "4110:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:12",
																"nodeType": "YulIdentifier",
																"src": "4118:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:12"
																},
																"nativeSrc": "4131:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:12"
															},
															"nativeSrc": "4131:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:12"
														},
														{
															"nativeSrc": "4154:26:12",
															"nodeType": "YulAssignment",
															"src": "4154:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:12"
																},
																"nativeSrc": "4162:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:12",
														"nodeType": "YulTypedName",
														"src": "4087:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:12",
														"nodeType": "YulTypedName",
														"src": "4095:4:12",
														"type": ""
													}
												],
												"src": "4046:141:12"
											},
											{
												"body": {
													"nativeSrc": "4237:49:12",
													"nodeType": "YulBlock",
													"src": "4237:49:12",
													"statements": [
														{
															"nativeSrc": "4247:33:12",
															"nodeType": "YulAssignment",
															"src": "4247:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:12"
																		},
																		"nativeSrc": "4261:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:12"
																},
																"nativeSrc": "4257:23:12",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:12",
														"nodeType": "YulTypedName",
														"src": "4220:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:12",
														"nodeType": "YulTypedName",
														"src": "4230:6:12",
														"type": ""
													}
												],
												"src": "4193:93:12"
											},
											{
												"body": {
													"nativeSrc": "4345:54:12",
													"nodeType": "YulBlock",
													"src": "4345:54:12",
													"statements": [
														{
															"nativeSrc": "4355:37:12",
															"nodeType": "YulAssignment",
															"src": "4355:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:12"
																},
																"nativeSrc": "4376:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:12",
														"nodeType": "YulTypedName",
														"src": "4320:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:12",
														"nodeType": "YulTypedName",
														"src": "4326:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:12",
														"nodeType": "YulTypedName",
														"src": "4336:8:12",
														"type": ""
													}
												],
												"src": "4292:107:12"
											},
											{
												"body": {
													"nativeSrc": "4481:317:12",
													"nodeType": "YulBlock",
													"src": "4481:317:12",
													"statements": [
														{
															"nativeSrc": "4491:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:12"
																},
																"nativeSrc": "4508:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:12",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:12"
																},
																"nativeSrc": "4547:97:12",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:12",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:12",
															"nodeType": "YulAssignment",
															"src": "4653:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:12"
																},
																"nativeSrc": "4665:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:12"
																}
															]
														},
														{
															"nativeSrc": "4713:30:12",
															"nodeType": "YulAssignment",
															"src": "4713:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:12"
																		},
																		"nativeSrc": "4733:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:12"
																},
																"nativeSrc": "4722:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:12"
																}
															]
														},
														{
															"nativeSrc": "4752:40:12",
															"nodeType": "YulAssignment",
															"src": "4752:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:12"
																		},
																		"nativeSrc": "4772:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:12"
																},
																"nativeSrc": "4762:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:12",
														"nodeType": "YulTypedName",
														"src": "4442:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:12",
														"nodeType": "YulTypedName",
														"src": "4449:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:12",
														"nodeType": "YulTypedName",
														"src": "4461:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:12",
														"nodeType": "YulTypedName",
														"src": "4474:6:12",
														"type": ""
													}
												],
												"src": "4405:393:12"
											},
											{
												"body": {
													"nativeSrc": "4849:32:12",
													"nodeType": "YulBlock",
													"src": "4849:32:12",
													"statements": [
														{
															"nativeSrc": "4859:16:12",
															"nodeType": "YulAssignment",
															"src": "4859:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:12",
																"nodeType": "YulIdentifier",
																"src": "4870:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:12",
														"nodeType": "YulTypedName",
														"src": "4831:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:12",
														"nodeType": "YulTypedName",
														"src": "4841:7:12",
														"type": ""
													}
												],
												"src": "4804:77:12"
											},
											{
												"body": {
													"nativeSrc": "4919:28:12",
													"nodeType": "YulBlock",
													"src": "4919:28:12",
													"statements": [
														{
															"nativeSrc": "4929:12:12",
															"nodeType": "YulAssignment",
															"src": "4929:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:12",
																"nodeType": "YulIdentifier",
																"src": "4936:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:12",
														"nodeType": "YulTypedName",
														"src": "4905:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:12",
														"nodeType": "YulTypedName",
														"src": "4915:3:12",
														"type": ""
													}
												],
												"src": "4887:60:12"
											},
											{
												"body": {
													"nativeSrc": "5013:82:12",
													"nodeType": "YulBlock",
													"src": "5013:82:12",
													"statements": [
														{
															"nativeSrc": "5023:66:12",
															"nodeType": "YulAssignment",
															"src": "5023:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:12"
																				},
																				"nativeSrc": "5063:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:12"
																		},
																		"nativeSrc": "5054:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:12"
																},
																"nativeSrc": "5036:53:12",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:12",
														"nodeType": "YulTypedName",
														"src": "4993:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:12",
														"nodeType": "YulTypedName",
														"src": "5003:9:12",
														"type": ""
													}
												],
												"src": "4953:142:12"
											},
											{
												"body": {
													"nativeSrc": "5148:28:12",
													"nodeType": "YulBlock",
													"src": "5148:28:12",
													"statements": [
														{
															"nativeSrc": "5158:12:12",
															"nodeType": "YulAssignment",
															"src": "5158:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:12",
																"nodeType": "YulIdentifier",
																"src": "5165:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:12",
														"nodeType": "YulTypedName",
														"src": "5134:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:12",
														"nodeType": "YulTypedName",
														"src": "5144:3:12",
														"type": ""
													}
												],
												"src": "5101:75:12"
											},
											{
												"body": {
													"nativeSrc": "5258:193:12",
													"nodeType": "YulBlock",
													"src": "5258:193:12",
													"statements": [
														{
															"nativeSrc": "5268:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:12"
																},
																"nativeSrc": "5292:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:12",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:12"
																				},
																				"nativeSrc": "5381:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:12"
																				},
																				"nativeSrc": "5402:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:12"
																		},
																		"nativeSrc": "5353:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:12"
																},
																"nativeSrc": "5340:105:12",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:12"
															},
															"nativeSrc": "5340:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:12",
														"nodeType": "YulTypedName",
														"src": "5235:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:12",
														"nodeType": "YulTypedName",
														"src": "5241:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:12",
														"nodeType": "YulTypedName",
														"src": "5249:7:12",
														"type": ""
													}
												],
												"src": "5182:269:12"
											},
											{
												"body": {
													"nativeSrc": "5506:24:12",
													"nodeType": "YulBlock",
													"src": "5506:24:12",
													"statements": [
														{
															"nativeSrc": "5516:8:12",
															"nodeType": "YulAssignment",
															"src": "5516:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:12",
																"nodeType": "YulLiteral",
																"src": "5523:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:12",
														"nodeType": "YulTypedName",
														"src": "5502:3:12",
														"type": ""
													}
												],
												"src": "5457:73:12"
											},
											{
												"body": {
													"nativeSrc": "5589:136:12",
													"nodeType": "YulBlock",
													"src": "5589:136:12",
													"statements": [
														{
															"nativeSrc": "5599:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:12"
																},
																"nativeSrc": "5613:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:12"
																},
																"nativeSrc": "5654:65:12",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:12"
															},
															"nativeSrc": "5654:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:12",
														"nodeType": "YulTypedName",
														"src": "5575:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:12",
														"nodeType": "YulTypedName",
														"src": "5581:6:12",
														"type": ""
													}
												],
												"src": "5536:189:12"
											},
											{
												"body": {
													"nativeSrc": "5781:136:12",
													"nodeType": "YulBlock",
													"src": "5781:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:12",
																"nodeType": "YulBlock",
																"src": "5848:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:12"
																			},
																			"nativeSrc": "5862:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:12"
																		},
																		"nativeSrc": "5862:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:12"
																},
																"nativeSrc": "5798:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:12"
															},
															"nativeSrc": "5791:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:12",
																"nodeType": "YulBlock",
																"src": "5813:26:12",
																"statements": [
																	{
																		"nativeSrc": "5815:22:12",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:12"
																			},
																			"nativeSrc": "5824:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:12",
																"nodeType": "YulBlock",
																"src": "5795:2:12",
																"statements": []
															},
															"src": "5791:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:12",
														"nodeType": "YulTypedName",
														"src": "5769:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:12",
														"nodeType": "YulTypedName",
														"src": "5776:3:12",
														"type": ""
													}
												],
												"src": "5731:186:12"
											},
											{
												"body": {
													"nativeSrc": "6002:464:12",
													"nodeType": "YulBlock",
													"src": "6002:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:12",
																"nodeType": "YulBlock",
																"src": "6028:431:12",
																"statements": [
																	{
																		"nativeSrc": "6042:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:12"
																			},
																			"nativeSrc": "6058:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:12",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:12"
																					},
																					"nativeSrc": "6142:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:12"
																			},
																			"nativeSrc": "6128:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:12",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:12",
																			"nodeType": "YulBlock",
																			"src": "6329:27:12",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:12",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:12",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:12"
																			},
																			"nativeSrc": "6310:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:12"
																		},
																		"nativeSrc": "6307:49:12",
																		"nodeType": "YulIf",
																		"src": "6307:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:12"
																							},
																							"nativeSrc": "6425:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:12"
																					},
																					"nativeSrc": "6411:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:12"
																			},
																			"nativeSrc": "6369:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:12"
																		},
																		"nativeSrc": "6369:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:12"
																},
																"nativeSrc": "6016:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:12"
															},
															"nativeSrc": "6013:446:12",
															"nodeType": "YulIf",
															"src": "6013:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:12",
														"nodeType": "YulTypedName",
														"src": "5978:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:12",
														"nodeType": "YulTypedName",
														"src": "5985:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:12",
														"nodeType": "YulTypedName",
														"src": "5990:10:12",
														"type": ""
													}
												],
												"src": "5923:543:12"
											},
											{
												"body": {
													"nativeSrc": "6535:54:12",
													"nodeType": "YulBlock",
													"src": "6535:54:12",
													"statements": [
														{
															"nativeSrc": "6545:37:12",
															"nodeType": "YulAssignment",
															"src": "6545:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:12"
																},
																"nativeSrc": "6566:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:12",
														"nodeType": "YulTypedName",
														"src": "6510:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:12",
														"nodeType": "YulTypedName",
														"src": "6516:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:12",
														"nodeType": "YulTypedName",
														"src": "6526:8:12",
														"type": ""
													}
												],
												"src": "6472:117:12"
											},
											{
												"body": {
													"nativeSrc": "6646:118:12",
													"nodeType": "YulBlock",
													"src": "6646:118:12",
													"statements": [
														{
															"nativeSrc": "6656:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:12"
																				},
																				"nativeSrc": "6701:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:12"
																				},
																				"nativeSrc": "6716:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:12"
																		},
																		"nativeSrc": "6672:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:12"
																},
																"nativeSrc": "6668:56:12",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:12",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:12",
															"nodeType": "YulAssignment",
															"src": "6733:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:12"
																},
																"nativeSrc": "6743:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:12",
														"nodeType": "YulTypedName",
														"src": "6623:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:12",
														"nodeType": "YulTypedName",
														"src": "6629:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:12",
														"nodeType": "YulTypedName",
														"src": "6639:6:12",
														"type": ""
													}
												],
												"src": "6595:169:12"
											},
											{
												"body": {
													"nativeSrc": "6850:214:12",
													"nodeType": "YulBlock",
													"src": "6850:214:12",
													"statements": [
														{
															"nativeSrc": "6983:37:12",
															"nodeType": "YulAssignment",
															"src": "6983:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:12"
																},
																"nativeSrc": "6991:29:12",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:12"
																}
															]
														},
														{
															"nativeSrc": "7029:29:12",
															"nodeType": "YulAssignment",
															"src": "7029:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:12"
																		},
																		"nativeSrc": "7046:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:12"
																},
																"nativeSrc": "7037:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:12",
														"nodeType": "YulTypedName",
														"src": "6831:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:12",
														"nodeType": "YulTypedName",
														"src": "6837:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:12",
														"nodeType": "YulTypedName",
														"src": "6845:4:12",
														"type": ""
													}
												],
												"src": "6769:295:12"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:12",
													"nodeType": "YulBlock",
													"src": "7161:1303:12",
													"statements": [
														{
															"nativeSrc": "7172:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:12"
																},
																"nativeSrc": "7186:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:12",
																"nodeType": "YulBlock",
																"src": "7308:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:12"
																			},
																			"nativeSrc": "7310:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:12"
																		},
																		"nativeSrc": "7310:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:12"
																},
																"nativeSrc": "7277:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:12"
															},
															"nativeSrc": "7274:56:12",
															"nodeType": "YulIf",
															"src": "7274:56:12"
														},
														{
															"nativeSrc": "7340:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:12"
																		},
																		"nativeSrc": "7380:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:12"
																},
																"nativeSrc": "7354:38:12",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:12"
																},
																"nativeSrc": "7439:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:12"
															},
															"nativeSrc": "7439:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:12"
														},
														{
															"nativeSrc": "7516:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:12",
																"nodeType": "YulLiteral",
																"src": "7533:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:12",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:12",
															"nodeType": "YulAssignment",
															"src": "7544:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:12",
																"nodeType": "YulLiteral",
																"src": "7557:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:12",
																		"nodeType": "YulBlock",
																		"src": "7608:611:12",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:12",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:12"
																							},
																							"nativeSrc": "7649:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:12"
																					},
																					"nativeSrc": "7637:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:12",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:12"
																					},
																					"nativeSrc": "7687:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:12",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:12",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:12",
																					"nodeType": "YulBlock",
																					"src": "7805:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:12"
																												},
																												"nativeSrc": "7844:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:12"
																										},
																										"nativeSrc": "7838:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:12"
																								},
																								"nativeSrc": "7823:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:12"
																							},
																							"nativeSrc": "7823:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:12"
																						},
																						{
																							"nativeSrc": "7882:24:12",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:12",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:12"
																								},
																								"nativeSrc": "7892:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:12",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:12",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:12"
																								},
																								"nativeSrc": "7936:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:12"
																					},
																					"nativeSrc": "7768:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:12"
																				},
																				"nativeSrc": "7760:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:12",
																					"nodeType": "YulBlock",
																					"src": "7783:21:12",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:12",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:12",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:12"
																								},
																								"nativeSrc": "7790:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:12",
																					"nodeType": "YulBlock",
																					"src": "7764:3:12",
																					"statements": []
																				},
																				"src": "7760:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:12",
																					"nodeType": "YulBlock",
																					"src": "8004:156:12",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:12"
																										},
																										"nativeSrc": "8045:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:12"
																								},
																								"nativeSrc": "8039:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:12",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:12",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:12"
																												},
																												"nativeSrc": "8127:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:12"
																										},
																										"nativeSrc": "8097:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:12"
																								},
																								"nativeSrc": "8082:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:12"
																							},
																							"nativeSrc": "8082:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:12"
																					},
																					"nativeSrc": "7984:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:12"
																				},
																				"nativeSrc": "7981:179:12",
																				"nodeType": "YulIf",
																				"src": "7981:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:12",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:12"
																									},
																									"nativeSrc": "8190:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:12",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:12"
																							},
																							"nativeSrc": "8186:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:12"
																					},
																					"nativeSrc": "8173:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:12"
																				},
																				"nativeSrc": "8173:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:12"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:12",
																	"nodeType": "YulCase",
																	"src": "7601:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:12",
																		"nodeType": "YulBlock",
																		"src": "8236:222:12",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:12",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:12",
																					"nodeType": "YulBlock",
																					"src": "8287:67:12",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:12",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:12"
																										},
																										"nativeSrc": "8320:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:12"
																								},
																								"nativeSrc": "8314:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:12"
																				},
																				"nativeSrc": "8277:77:12",
																				"nodeType": "YulIf",
																				"src": "8277:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:12"
																							},
																							"nativeSrc": "8380:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:12"
																					},
																					"nativeSrc": "8367:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:12"
																				},
																				"nativeSrc": "8367:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:12"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:12",
																	"nodeType": "YulCase",
																	"src": "8228:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:12"
																},
																"nativeSrc": "7578:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:12"
															},
															"nativeSrc": "7571:887:12",
															"nodeType": "YulSwitch",
															"src": "7571:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:12",
														"nodeType": "YulTypedName",
														"src": "7150:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:12",
														"nodeType": "YulTypedName",
														"src": "7156:3:12",
														"type": ""
													}
												],
												"src": "7069:1395:12"
											},
											{
												"body": {
													"nativeSrc": "8515:81:12",
													"nodeType": "YulBlock",
													"src": "8515:81:12",
													"statements": [
														{
															"nativeSrc": "8525:65:12",
															"nodeType": "YulAssignment",
															"src": "8525:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8540:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8540:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8547:42:12",
																		"nodeType": "YulLiteral",
																		"src": "8547:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8536:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8536:3:12"
																},
																"nativeSrc": "8536:54:12",
																"nodeType": "YulFunctionCall",
																"src": "8536:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8525:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "8525:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8470:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8497:5:12",
														"nodeType": "YulTypedName",
														"src": "8497:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8507:7:12",
														"nodeType": "YulTypedName",
														"src": "8507:7:12",
														"type": ""
													}
												],
												"src": "8470:126:12"
											},
											{
												"body": {
													"nativeSrc": "8647:51:12",
													"nodeType": "YulBlock",
													"src": "8647:51:12",
													"statements": [
														{
															"nativeSrc": "8657:35:12",
															"nodeType": "YulAssignment",
															"src": "8657:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8686:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8686:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8668:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8668:17:12"
																},
																"nativeSrc": "8668:24:12",
																"nodeType": "YulFunctionCall",
																"src": "8668:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8657:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "8657:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8602:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8629:5:12",
														"nodeType": "YulTypedName",
														"src": "8629:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8639:7:12",
														"nodeType": "YulTypedName",
														"src": "8639:7:12",
														"type": ""
													}
												],
												"src": "8602:96:12"
											},
											{
												"body": {
													"nativeSrc": "8769:53:12",
													"nodeType": "YulBlock",
													"src": "8769:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8786:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8786:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8809:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8809:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8791:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "8791:17:12"
																		},
																		"nativeSrc": "8791:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8791:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8779:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:12"
																},
																"nativeSrc": "8779:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8779:37:12"
															},
															"nativeSrc": "8779:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "8779:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8704:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8757:5:12",
														"nodeType": "YulTypedName",
														"src": "8757:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8764:3:12",
														"nodeType": "YulTypedName",
														"src": "8764:3:12",
														"type": ""
													}
												],
												"src": "8704:118:12"
											},
											{
												"body": {
													"nativeSrc": "8926:124:12",
													"nodeType": "YulBlock",
													"src": "8926:124:12",
													"statements": [
														{
															"nativeSrc": "8936:26:12",
															"nodeType": "YulAssignment",
															"src": "8936:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8948:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8948:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8959:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8959:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8944:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8944:3:12"
																},
																"nativeSrc": "8944:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8944:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8936:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8936:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9016:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9016:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9029:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9029:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9040:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9040:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9025:3:12"
																		},
																		"nativeSrc": "9025:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9025:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8972:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8972:43:12"
																},
																"nativeSrc": "8972:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8972:71:12"
															},
															"nativeSrc": "8972:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8972:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8828:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8898:9:12",
														"nodeType": "YulTypedName",
														"src": "8898:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8910:6:12",
														"nodeType": "YulTypedName",
														"src": "8910:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8921:4:12",
														"nodeType": "YulTypedName",
														"src": "8921:4:12",
														"type": ""
													}
												],
												"src": "8828:222:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516132b03803806132b083398181016040528101906100319190610461565b338282816003908161004391906106e4565b50806004908161005391906106e4565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd91906107f2565b60405180910390fd5b6100d5816100f060201b60201c565b506100e85f801b336101b360201b60201c565b50505061080b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6101c483836102a960201b60201c565b61029f57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061023c61030d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506102a3565b5f90505b92915050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103738261032d565b810181811067ffffffffffffffff821117156103925761039161033d565b5b80604052505050565b5f6103a4610314565b90506103b0828261036a565b919050565b5f67ffffffffffffffff8211156103cf576103ce61033d565b5b6103d88261032d565b9050602081019050919050565b8281835e5f83830152505050565b5f610405610400846103b5565b61039b565b90508281526020810184848401111561042157610420610329565b5b61042c8482856103e5565b509392505050565b5f82601f83011261044857610447610325565b5b81516104588482602086016103f3565b91505092915050565b5f80604083850312156104775761047661031d565b5b5f83015167ffffffffffffffff81111561049457610493610321565b5b6104a085828601610434565b925050602083015167ffffffffffffffff8111156104c1576104c0610321565b5b6104cd85828601610434565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061052557607f821691505b602082108103610538576105376104e1565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261059a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261055f565b6105a4868361055f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6105e86105e36105de846105bc565b6105c5565b6105bc565b9050919050565b5f819050919050565b610601836105ce565b61061561060d826105ef565b84845461056b565b825550505050565b5f90565b61062961061d565b6106348184846105f8565b505050565b5b818110156106575761064c5f82610621565b60018101905061063a565b5050565b601f82111561069c5761066d8161053e565b61067684610550565b81016020851015610685578190505b61069961069185610550565b830182610639565b50505b505050565b5f82821c905092915050565b5f6106bc5f19846008026106a1565b1980831691505092915050565b5f6106d483836106ad565b9150826002028217905092915050565b6106ed826104d7565b67ffffffffffffffff8111156107065761070561033d565b5b610710825461050e565b61071b82828561065b565b5f60209050601f83116001811461074c575f841561073a578287015190505b61074485826106c9565b8655506107ab565b601f19841661075a8661053e565b5f5b828110156107815784890151825560018201915060208501945060208101905061075c565b8683101561079e578489015161079a601f8916826106ad565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107dc826107b3565b9050919050565b6107ec816107d2565b82525050565b5f6020820190506108055f8301846107e3565b92915050565b612a98806108185f395ff3fe608060405234801561000f575f80fd5b5060043610610251575f3560e01c806370a0823111610144578063a217fddf116100c1578063d539139311610085578063d5391393146106b7578063d547741f146106d5578063dd62ed3e146106f1578063f26c159f14610721578063f2fde38b1461073d578063f44637ba1461075957610251565b8063a217fddf14610615578063a9059cbb14610633578063c2134b2314610663578063d1c2de0a1461067f578063d37b34d71461069b57610251565b8063939bcbc911610108578063939bcbc91461058557806395d89b41146105a3578063974b368c146105c1578063983b2d56146105dd5780639dc29fac146105f957610251565b806370a08231146104e1578063715018a614610511578063788649ea1461051b5780638da5cb5b1461053757806391d148541461055557610251565b80632acd2000116101d257806340c10f191161019657806340c10f1914610451578063410b24241461046d578063526606c91461048b578063537df3b6146104a757806363f15649146104c357610251565b80632acd2000146103c35780632f2ff15d146103df5780633092afd5146103fb578063313ce5671461041757806336568abe1461043557610251565b806318160ddd1161021957806318160ddd1461030b5780631ec82cb81461032957806323b872dd14610345578063248a9ca314610375578063282c51f3146103a557610251565b806301ffc9a714610255578063028468581461028557806306fdde03146102a1578063095ea7b3146102bf5780630eff2afc146102ef575b5f80fd5b61026f600480360381019061026a91906121c2565b610775565b60405161027c9190612207565b60405180910390f35b61029f600480360381019061029a919061227a565b6107ee565b005b6102a9610823565b6040516102b69190612315565b60405180910390f35b6102d960048036038101906102d49190612368565b6108b3565b6040516102e69190612207565b60405180910390f35b6103096004803603810190610304919061227a565b6108d5565b005b61031361090a565b60405161032091906123b5565b60405180910390f35b610343600480360381019061033e91906123ce565b610913565b005b61035f600480360381019061035a91906123ce565b61094e565b60405161036c9190612207565b60405180910390f35b61038f600480360381019061038a9190612451565b610ab3565b60405161039c919061248b565b60405180910390f35b6103ad610ad0565b6040516103ba919061248b565b60405180910390f35b6103dd60048036038101906103d8919061227a565b610af4565b005b6103f960048036038101906103f491906124a4565b610b29565b005b6104156004803603810190610410919061227a565b610b4b565b005b61041f610b80565b60405161042c91906124fd565b60405180910390f35b61044f600480360381019061044a91906124a4565b610b88565b005b61046b60048036038101906104669190612368565b610c03565b005b610475610c3c565b604051610482919061248b565b60405180910390f35b6104a560048036038101906104a0919061227a565b610c60565b005b6104c160048036038101906104bc919061227a565b610c95565b005b6104cb610d2b565b6040516104d8919061248b565b60405180910390f35b6104fb60048036038101906104f6919061227a565b610d4f565b60405161050891906123b5565b60405180910390f35b610519610d94565b005b6105356004803603810190610530919061227a565b610da7565b005b61053f610e3d565b60405161054c9190612525565b60405180910390f35b61056f600480360381019061056a91906124a4565b610e65565b60405161057c9190612207565b60405180910390f35b61058d610ec9565b60405161059a919061248b565b60405180910390f35b6105ab610eed565b6040516105b89190612315565b60405180910390f35b6105db60048036038101906105d6919061227a565b610f7d565b005b6105f760048036038101906105f2919061227a565b610fb2565b005b610613600480360381019061060e9190612368565b610fe7565b005b61061d611020565b60405161062a919061248b565b60405180910390f35b61064d60048036038101906106489190612368565b611026565b60405161065a9190612207565b60405180910390f35b61067d6004803603810190610678919061227a565b611189565b005b6106996004803603810190610694919061227a565b6111be565b005b6106b560048036038101906106b0919061227a565b6111f3565b005b6106bf61128a565b6040516106cc919061248b565b60405180910390f35b6106ef60048036038101906106ea91906124a4565b6112ae565b005b61070b6004803603810190610706919061253e565b6112d0565b60405161071891906123b5565b60405180910390f35b61073b6004803603810190610736919061227a565b611352565b005b6107576004803603810190610752919061227a565b6113e9565b005b610773600480360381019061076e919061227a565b61146d565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107e757506107e6826114a2565b5b9050919050565b6107f661150b565b6108207f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848826112ae565b50565b606060038054610832906125a9565b80601f016020809104026020016040519081016040528092919081815260200182805461085e906125a9565b80156108a95780601f10610880576101008083540402835291602001916108a9565b820191905f5260205f20905b81548152906001019060200180831161088c57829003601f168201915b5050505050905090565b5f806108bd611592565b90506108ca818585611599565b600191505092915050565b6108dd61150b565b6109077ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee82610b29565b50565b5f600254905090565b7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e06661093d816115ab565b6109488484846115bf565b50505050565b5f6109638460076116af90919063ffffffff16565b156109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a90612623565b60405180910390fd5b6109b78360076116af90919063ffffffff16565b156109f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ee9061268b565b60405180910390fd5b610a0b8460096116af90919063ffffffff16565b15610a4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a42906126f3565b60405180910390fd5b610a5f8360096116af90919063ffffffff16565b15610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a969061275b565b60405180910390fd5b610aaa8484846116dc565b90509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b610afc61150b565b610b267f109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35826112ae565b50565b610b3282610ab3565b610b3b816115ab565b610b45838361170a565b50505050565b610b5361150b565b610b7d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826112ae565b50565b5f6012905090565b610b90611592565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bf4576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bfe82826117f4565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610c2d816115ab565b610c3783836118de565b505050565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee81565b610c6861150b565b610c927f109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b3582610b29565b50565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee610cbf816115ab565b610cd38260096116af90919063ffffffff16565b610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d09906127c3565b60405180910390fd5b610d2682600961195d90919063ffffffff16565b505050565b7f109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b3581565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610d9c61150b565b610da55f61198a565b565b7f109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35610dd1816115ab565b610de58260076116af90919063ffffffff16565b610e24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1b9061282b565b60405180910390fd5b610e3882600761195d90919063ffffffff16565b505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e06681565b606060048054610efc906125a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610f28906125a9565b8015610f735780601f10610f4a57610100808354040283529160200191610f73565b820191905f5260205f20905b815481529060010190602001808311610f5657829003601f168201915b5050505050905090565b610f8561150b565b610faf7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee826112ae565b50565b610fba61150b565b610fe47f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682610b29565b50565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848611011816115ab565b61101b8383611a4d565b505050565b5f801b81565b5f61103b3360076116af90919063ffffffff16565b1561107b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107290612623565b60405180910390fd5b61108f8360076116af90919063ffffffff16565b156110cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c69061268b565b60405180910390fd5b6110e33360096116af90919063ffffffff16565b15611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111a906126f3565b60405180910390fd5b6111378360096116af90919063ffffffff16565b15611177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116e9061275b565b60405180910390fd5b6111818383611acc565b905092915050565b61119161150b565b6111bb7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e06682610b29565b50565b6111c661150b565b6111f07f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066826112ae565b50565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee61121d816115ab565b6112318260096116af90919063ffffffff16565b15611271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126890612893565b60405180910390fd5b611285826009611aee90919063ffffffff16565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6112b782610ab3565b6112c0816115ab565b6112ca83836117f4565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b3561137c816115ab565b6113908260076116af90919063ffffffff16565b156113d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c7906128fb565b60405180910390fd5b6113e4826007611aee90919063ffffffff16565b505050565b6113f161150b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611461575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114589190612525565b60405180910390fd5b61146a8161198a565b50565b61147561150b565b61149f7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84882610b29565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611513611592565b73ffffffffffffffffffffffffffffffffffffffff16611531610e3d565b73ffffffffffffffffffffffffffffffffffffffff161461159057611554611592565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115879190612525565b60405180910390fd5b565b5f33905090565b6115a68383836001611b1b565b505050565b6115bc816115b7611592565b611cea565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361162f575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116269190612525565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361169f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116969190612525565b60405180910390fd5b6116aa838383611d3b565b505050565b5f6116d4835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611f54565b905092915050565b5f806116e6611592565b90506116f3858285611f74565b6116fe8585856115bf565b60019150509392505050565b5f6117158383610e65565b6117ea57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611787611592565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506117ee565b5f90505b92915050565b5f6117ff8383610e65565b156118d4575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611871611592565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506118d8565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361194e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119459190612525565b60405180910390fd5b6119595f8383611d3b565b5050565b5f611982835f018373ffffffffffffffffffffffffffffffffffffffff165f1b612006565b905092915050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611abd575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611ab49190612525565b60405180910390fd5b611ac8825f83611d3b565b5050565b5f80611ad6611592565b9050611ae38185856115bf565b600191505092915050565b5f611b13835f018373ffffffffffffffffffffffffffffffffffffffff165f1b612102565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b8b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611b829190612525565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bfb575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611bf29190612525565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611ce4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611cdb91906123b5565b60405180910390a35b50505050565b611cf48282610e65565b611d375780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611d2e929190612919565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d8b578060025f828254611d7f919061296d565b92505081905550611e59565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611e14578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611e0b939291906129a0565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ea0578060025f8282540392505081905550611eea565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f4791906123b5565b60405180910390a3505050565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f611f7f84846112d0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146120005781811015611ff1578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611fe8939291906129a0565b60405180910390fd5b611fff84848484035f611b1b565b5b50505050565b5f80836001015f8481526020019081526020015f205490505f81146120f7575f60018261203391906129d5565b90505f6001865f018054905061204991906129d5565b90508082146120af575f865f01828154811061206857612067612a08565b5b905f5260205f200154905080875f01848154811061208957612088612a08565b5b905f5260205f20018190555083876001015f8381526020019081526020015f2081905550505b855f018054806120c2576120c1612a35565b5b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f9055600193505050506120fc565b5f9150505b92915050565b5f61210d8383611f54565b61215f57825f0182908060018154018082558091505060019003905f5260205f20015f9091909190915055825f0180549050836001015f8481526020019081526020015f208190555060019050612163565b5f90505b92915050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6121a18161216d565b81146121ab575f80fd5b50565b5f813590506121bc81612198565b92915050565b5f602082840312156121d7576121d6612169565b5b5f6121e4848285016121ae565b91505092915050565b5f8115159050919050565b612201816121ed565b82525050565b5f60208201905061221a5f8301846121f8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61224982612220565b9050919050565b6122598161223f565b8114612263575f80fd5b50565b5f8135905061227481612250565b92915050565b5f6020828403121561228f5761228e612169565b5b5f61229c84828501612266565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6122e7826122a5565b6122f181856122af565b93506123018185602086016122bf565b61230a816122cd565b840191505092915050565b5f6020820190508181035f83015261232d81846122dd565b905092915050565b5f819050919050565b61234781612335565b8114612351575f80fd5b50565b5f813590506123628161233e565b92915050565b5f806040838503121561237e5761237d612169565b5b5f61238b85828601612266565b925050602061239c85828601612354565b9150509250929050565b6123af81612335565b82525050565b5f6020820190506123c85f8301846123a6565b92915050565b5f805f606084860312156123e5576123e4612169565b5b5f6123f286828701612266565b935050602061240386828701612266565b925050604061241486828701612354565b9150509250925092565b5f819050919050565b6124308161241e565b811461243a575f80fd5b50565b5f8135905061244b81612427565b92915050565b5f6020828403121561246657612465612169565b5b5f6124738482850161243d565b91505092915050565b6124858161241e565b82525050565b5f60208201905061249e5f83018461247c565b92915050565b5f80604083850312156124ba576124b9612169565b5b5f6124c78582860161243d565b92505060206124d885828601612266565b9150509250929050565b5f60ff82169050919050565b6124f7816124e2565b82525050565b5f6020820190506125105f8301846124ee565b92915050565b61251f8161223f565b82525050565b5f6020820190506125385f830184612516565b92915050565b5f806040838503121561255457612553612169565b5b5f61256185828601612266565b925050602061257285828601612266565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806125c057607f821691505b6020821081036125d3576125d261257c565b5b50919050565b7f53656e646572206163636f756e742069732066726f7a656e00000000000000005f82015250565b5f61260d6018836122af565b9150612618826125d9565b602082019050919050565b5f6020820190508181035f83015261263a81612601565b9050919050565b7f526563697069656e74206163636f756e742069732066726f7a656e00000000005f82015250565b5f612675601b836122af565b915061268082612641565b602082019050919050565b5f6020820190508181035f8301526126a281612669565b9050919050565b7f53656e646572206163636f756e7420697320626c61636b6c69737465640000005f82015250565b5f6126dd601d836122af565b91506126e8826126a9565b602082019050919050565b5f6020820190508181035f83015261270a816126d1565b9050919050565b7f526563697069656e74206163636f756e7420697320626c61636b6c69737465645f82015250565b5f6127456020836122af565b915061275082612711565b602082019050919050565b5f6020820190508181035f83015261277281612739565b9050919050565b7f4163636f756e74206973206e6f7420626c61636b6c69737465640000000000005f82015250565b5f6127ad601a836122af565b91506127b882612779565b602082019050919050565b5f6020820190508181035f8301526127da816127a1565b9050919050565b7f4163636f756e74206973206e6f742066726f7a656e00000000000000000000005f82015250565b5f6128156015836122af565b9150612820826127e1565b602082019050919050565b5f6020820190508181035f83015261284281612809565b9050919050565b7f4163636f756e7420697320616c726561647920626c61636b6c697374656400005f82015250565b5f61287d601e836122af565b915061288882612849565b602082019050919050565b5f6020820190508181035f8301526128aa81612871565b9050919050565b7f4163636f756e7420697320616c72656164792066726f7a656e000000000000005f82015250565b5f6128e56019836122af565b91506128f0826128b1565b602082019050919050565b5f6020820190508181035f830152612912816128d9565b9050919050565b5f60408201905061292c5f830185612516565b612939602083018461247c565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61297782612335565b915061298283612335565b925082820190508082111561299a57612999612940565b5b92915050565b5f6060820190506129b35f830186612516565b6129c060208301856123a6565b6129cd60408301846123a6565b949350505050565b5f6129df82612335565b91506129ea83612335565b9250828203905081811115612a0257612a01612940565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea26469706673582212209c26cc67ef99f195020f6087d9e61d1bb3d80c84a11a7f1c70f958753d6279a464736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x32B0 CODESIZE SUB DUP1 PUSH2 0x32B0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x461 JUMP JUMPDEST CALLER DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0xF0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xE8 PUSH0 DUP1 SHL CALLER PUSH2 0x1B3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x80B JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C4 DUP4 DUP4 PUSH2 0x2A9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x29F JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x23C PUSH2 0x30D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2A3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x373 DUP3 PUSH2 0x32D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x392 JUMPI PUSH2 0x391 PUSH2 0x33D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A4 PUSH2 0x314 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B0 DUP3 DUP3 PUSH2 0x36A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3CF JUMPI PUSH2 0x3CE PUSH2 0x33D JUMP JUMPDEST JUMPDEST PUSH2 0x3D8 DUP3 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x405 PUSH2 0x400 DUP5 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x420 PUSH2 0x329 JUMP JUMPDEST JUMPDEST PUSH2 0x42C DUP5 DUP3 DUP6 PUSH2 0x3E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x448 JUMPI PUSH2 0x447 PUSH2 0x325 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x458 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x477 JUMPI PUSH2 0x476 PUSH2 0x31D JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x494 JUMPI PUSH2 0x493 PUSH2 0x321 JUMP JUMPDEST JUMPDEST PUSH2 0x4A0 DUP6 DUP3 DUP7 ADD PUSH2 0x434 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C1 JUMPI PUSH2 0x4C0 PUSH2 0x321 JUMP JUMPDEST JUMPDEST PUSH2 0x4CD DUP6 DUP3 DUP7 ADD PUSH2 0x434 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x525 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x538 JUMPI PUSH2 0x537 PUSH2 0x4E1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x59A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x5A4 DUP7 DUP4 PUSH2 0x55F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5E8 PUSH2 0x5E3 PUSH2 0x5DE DUP5 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x601 DUP4 PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x615 PUSH2 0x60D DUP3 PUSH2 0x5EF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x56B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x629 PUSH2 0x61D JUMP JUMPDEST PUSH2 0x634 DUP2 DUP5 DUP5 PUSH2 0x5F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x657 JUMPI PUSH2 0x64C PUSH0 DUP3 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x63A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x69C JUMPI PUSH2 0x66D DUP2 PUSH2 0x53E JUMP JUMPDEST PUSH2 0x676 DUP5 PUSH2 0x550 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x685 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x699 PUSH2 0x691 DUP6 PUSH2 0x550 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x639 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6BC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6A1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6D4 DUP4 DUP4 PUSH2 0x6AD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6ED DUP3 PUSH2 0x4D7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x706 JUMPI PUSH2 0x705 PUSH2 0x33D JUMP JUMPDEST JUMPDEST PUSH2 0x710 DUP3 SLOAD PUSH2 0x50E JUMP JUMPDEST PUSH2 0x71B DUP3 DUP3 DUP6 PUSH2 0x65B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x74C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x73A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x744 DUP6 DUP3 PUSH2 0x6C9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x75A DUP7 PUSH2 0x53E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x781 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x75C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x79E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x79A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6AD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7DC DUP3 PUSH2 0x7B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EC DUP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x805 PUSH0 DUP4 ADD DUP5 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A98 DUP1 PUSH2 0x818 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x251 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xF26C159F EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0xF44637BA EQ PUSH2 0x759 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xC2134B23 EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0xD1C2DE0A EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xD37B34D7 EQ PUSH2 0x69B JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x939BCBC9 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x939BCBC9 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0x974B368C EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x5F9 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x788649EA EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x555 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x2ACD2000 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x410B2424 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x526606C9 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x63F15649 EQ PUSH2 0x4C3 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x2ACD2000 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x435 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x1EC82CB8 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x3A5 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x2846858 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xEFF2AFC EQ PUSH2 0x2EF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x8D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x313 PUSH2 0x90A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x23CE JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x23CE JUMP JUMPDEST PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x2451 JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0xB29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xB4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41F PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0xB88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x475 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xC95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CB PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x519 PUSH2 0xD94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x535 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x530 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xDA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x53F PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AB PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xF7D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xFB2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x613 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH2 0xFE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61D PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x1189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x11BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x11F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6BF PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0x12AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x1352 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x757 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x13E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x773 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x146D JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x7E7 JUMPI POP PUSH2 0x7E6 DUP3 PUSH2 0x14A2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F6 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x820 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0x12AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x832 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x85E SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x880 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8BD PUSH2 0x1592 JUMP JUMPDEST SWAP1 POP PUSH2 0x8CA DUP2 DUP6 DUP6 PUSH2 0x1599 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8DD PUSH2 0x150B JUMP JUMPDEST PUSH2 0x907 PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP3 PUSH2 0xB29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 PUSH2 0x93D DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x948 DUP5 DUP5 DUP5 PUSH2 0x15BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x963 DUP5 PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B7 DUP4 PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EE SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0B DUP5 PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA42 SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5F DUP4 PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP1 PUSH2 0x275B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAAA DUP5 DUP5 DUP5 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0xAFC PUSH2 0x150B JUMP JUMPDEST PUSH2 0xB26 PUSH32 0x109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35 DUP3 PUSH2 0x12AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB32 DUP3 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xB3B DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0xB45 DUP4 DUP4 PUSH2 0x170A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB53 PUSH2 0x150B JUMP JUMPDEST PUSH2 0xB7D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x12AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB90 PUSH2 0x1592 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE DUP3 DUP3 PUSH2 0x17F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xC2D DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0xC37 DUP4 DUP4 PUSH2 0x18DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP2 JUMP JUMPDEST PUSH2 0xC68 PUSH2 0x150B JUMP JUMPDEST PUSH2 0xC92 PUSH32 0x109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35 DUP3 PUSH2 0xB29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE PUSH2 0xCBF DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0xCD3 DUP3 PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD09 SWAP1 PUSH2 0x27C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD26 DUP3 PUSH1 0x9 PUSH2 0x195D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9C PUSH2 0x150B JUMP JUMPDEST PUSH2 0xDA5 PUSH0 PUSH2 0x198A JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35 PUSH2 0xDD1 DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0xDE5 DUP3 PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1B SWAP1 PUSH2 0x282B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE38 DUP3 PUSH1 0x7 PUSH2 0x195D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xEFC SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF28 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF73 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF4A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF73 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF56 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF85 PUSH2 0x150B JUMP JUMPDEST PUSH2 0xFAF PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP3 PUSH2 0x12AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFBA PUSH2 0x150B JUMP JUMPDEST PUSH2 0xFE4 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0xB29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x1011 DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x101B DUP4 DUP4 PUSH2 0x1A4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x103B CALLER PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x107B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1072 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108F DUP4 PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x10CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E3 CALLER PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111A SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1137 DUP4 PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116E SWAP1 PUSH2 0x275B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1181 DUP4 DUP4 PUSH2 0x1ACC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1191 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x11BB PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP3 PUSH2 0xB29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x11C6 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x11F0 PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP3 PUSH2 0x12AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE PUSH2 0x121D DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x1231 DUP3 PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1268 SWAP1 PUSH2 0x2893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1285 DUP3 PUSH1 0x9 PUSH2 0x1AEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x12B7 DUP3 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x12C0 DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x12CA DUP4 DUP4 PUSH2 0x17F4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35 PUSH2 0x137C DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x1390 DUP3 PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C7 SWAP1 PUSH2 0x28FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E4 DUP3 PUSH1 0x7 PUSH2 0x1AEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13F1 PUSH2 0x150B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1461 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1458 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x146A DUP2 PUSH2 0x198A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1475 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x149F PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0xB29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1513 PUSH2 0x1592 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1531 PUSH2 0xE3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1590 JUMPI PUSH2 0x1554 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1587 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15A6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x15BC DUP2 PUSH2 0x15B7 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x1CEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x162F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1626 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x169F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1696 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16AA DUP4 DUP4 DUP4 PUSH2 0x1D3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16D4 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1F54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x16E6 PUSH2 0x1592 JUMP JUMPDEST SWAP1 POP PUSH2 0x16F3 DUP6 DUP3 DUP6 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0x16FE DUP6 DUP6 DUP6 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1715 DUP4 DUP4 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x17EA JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1787 PUSH2 0x1592 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x17EE JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17FF DUP4 DUP4 PUSH2 0xE65 JUMP JUMPDEST ISZERO PUSH2 0x18D4 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1871 PUSH2 0x1592 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x18D8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x194E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1945 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1959 PUSH0 DUP4 DUP4 PUSH2 0x1D3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1982 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x2006 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ABD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB4 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AC8 DUP3 PUSH0 DUP4 PUSH2 0x1D3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1AD6 PUSH2 0x1592 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE3 DUP2 DUP6 DUP6 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B13 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x2102 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B82 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BFB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF2 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1CE4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CDB SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1CF4 DUP3 DUP3 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x1D37 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2E SWAP3 SWAP2 SWAP1 PUSH2 0x2919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D8B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D7F SWAP2 SWAP1 PUSH2 0x296D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E59 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1E14 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EA0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EEA JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F47 SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7F DUP5 DUP5 PUSH2 0x12D0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x2000 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1FF1 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FFF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1B1B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x20F7 JUMPI PUSH0 PUSH1 0x1 DUP3 PUSH2 0x2033 SWAP2 SWAP1 PUSH2 0x29D5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP7 PUSH0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x2049 SWAP2 SWAP1 PUSH2 0x29D5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x20AF JUMPI PUSH0 DUP7 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2068 JUMPI PUSH2 0x2067 PUSH2 0x2A08 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2089 JUMPI PUSH2 0x2088 PUSH2 0x2A08 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH0 ADD DUP1 SLOAD DUP1 PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x2A35 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x20FC JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x210D DUP4 DUP4 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x215F JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2163 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A1 DUP2 PUSH2 0x216D JUMP JUMPDEST DUP2 EQ PUSH2 0x21AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21BC DUP2 PUSH2 0x2198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D7 JUMPI PUSH2 0x21D6 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E4 DUP5 DUP3 DUP6 ADD PUSH2 0x21AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2201 DUP2 PUSH2 0x21ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x221A PUSH0 DUP4 ADD DUP5 PUSH2 0x21F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2249 DUP3 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2259 DUP2 PUSH2 0x223F JUMP JUMPDEST DUP2 EQ PUSH2 0x2263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2274 DUP2 PUSH2 0x2250 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228F JUMPI PUSH2 0x228E PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x229C DUP5 DUP3 DUP6 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22E7 DUP3 PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x22F1 DUP2 DUP6 PUSH2 0x22AF JUMP JUMPDEST SWAP4 POP PUSH2 0x2301 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22BF JUMP JUMPDEST PUSH2 0x230A DUP2 PUSH2 0x22CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232D DUP2 DUP5 PUSH2 0x22DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2347 DUP2 PUSH2 0x2335 JUMP JUMPDEST DUP2 EQ PUSH2 0x2351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2362 DUP2 PUSH2 0x233E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x237E JUMPI PUSH2 0x237D PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x238B DUP6 DUP3 DUP7 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x239C DUP6 DUP3 DUP7 ADD PUSH2 0x2354 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x23AF DUP2 PUSH2 0x2335 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x23A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23E5 JUMPI PUSH2 0x23E4 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F2 DUP7 DUP3 DUP8 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2403 DUP7 DUP3 DUP8 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2414 DUP7 DUP3 DUP8 ADD PUSH2 0x2354 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2430 DUP2 PUSH2 0x241E JUMP JUMPDEST DUP2 EQ PUSH2 0x243A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x244B DUP2 PUSH2 0x2427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2466 JUMPI PUSH2 0x2465 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2473 DUP5 DUP3 DUP6 ADD PUSH2 0x243D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2485 DUP2 PUSH2 0x241E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x249E PUSH0 DUP4 ADD DUP5 PUSH2 0x247C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24BA JUMPI PUSH2 0x24B9 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24C7 DUP6 DUP3 DUP7 ADD PUSH2 0x243D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24D8 DUP6 DUP3 DUP7 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24F7 DUP2 PUSH2 0x24E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2510 PUSH0 DUP4 ADD DUP5 PUSH2 0x24EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x251F DUP2 PUSH2 0x223F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2538 PUSH0 DUP4 ADD DUP5 PUSH2 0x2516 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2554 JUMPI PUSH2 0x2553 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2561 DUP6 DUP3 DUP7 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2572 DUP6 DUP3 DUP7 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25D3 JUMPI PUSH2 0x25D2 PUSH2 0x257C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206163636F756E742069732066726F7A656E0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x260D PUSH1 0x18 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2618 DUP3 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x263A DUP2 PUSH2 0x2601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E74206163636F756E742069732066726F7A656E0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2675 PUSH1 0x1B DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2680 DUP3 PUSH2 0x2641 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26A2 DUP2 PUSH2 0x2669 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206163636F756E7420697320626C61636B6C6973746564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26DD PUSH1 0x1D DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x26E8 DUP3 PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x270A DUP2 PUSH2 0x26D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E74206163636F756E7420697320626C61636B6C6973746564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2745 PUSH1 0x20 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2750 DUP3 PUSH2 0x2711 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2772 DUP2 PUSH2 0x2739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F7420626C61636B6C6973746564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27AD PUSH1 0x1A DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x27B8 DUP3 PUSH2 0x2779 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27DA DUP2 PUSH2 0x27A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F742066726F7A656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2815 PUSH1 0x15 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2820 DUP3 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2842 DUP2 PUSH2 0x2809 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C726561647920626C61636B6C69737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x287D PUSH1 0x1E DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2888 DUP3 PUSH2 0x2849 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28AA DUP2 PUSH2 0x2871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C72656164792066726F7A656E00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28E5 PUSH1 0x19 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x28F0 DUP3 PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2912 DUP2 PUSH2 0x28D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x292C PUSH0 DUP4 ADD DUP6 PUSH2 0x2516 JUMP JUMPDEST PUSH2 0x2939 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x247C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2977 DUP3 PUSH2 0x2335 JUMP JUMPDEST SWAP2 POP PUSH2 0x2982 DUP4 PUSH2 0x2335 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x299A JUMPI PUSH2 0x2999 PUSH2 0x2940 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29B3 PUSH0 DUP4 ADD DUP7 PUSH2 0x2516 JUMP JUMPDEST PUSH2 0x29C0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x29CD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23A6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29DF DUP3 PUSH2 0x2335 JUMP JUMPDEST SWAP2 POP PUSH2 0x29EA DUP4 PUSH2 0x2335 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A02 JUMPI PUSH2 0x2A01 PUSH2 0x2940 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0x26 0xCC PUSH8 0xEF99F195020F6087 0xD9 0xE6 SAR SHL 0xB3 0xD8 0xC DUP5 LOG1 BYTE PUSH32 0x1C70F958753D6279A464736F6C63430008190033000000000000000000000000 ",
							"sourceMap": "314:6305:11:-:0;;;1145:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1247:10;1215:4;1221:6;1970:5:4;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1275:42:11::2;2232:4:0;1286:18:11::0;::::2;1306:10;1275;;;:42;;:::i;:::-;;1145:180:::0;;314:6305;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;8470:126::-;8507:7;8547:42;8540:5;8536:54;8525:65;;8470:126;;;:::o;8602:96::-;8639:7;8668:24;8686:5;8668:24;:::i;:::-;8657:35;;8602:96;;;:::o;8704:118::-;8791:24;8809:5;8791:24;:::i;:::-;8786:3;8779:37;8704:118;;:::o;8828:222::-;8921:4;8959:2;8948:9;8944:18;8936:26;;8972:71;9040:1;9029:9;9025:17;9016:6;8972:71;:::i;:::-;8828:222;;;;:::o;314:6305:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BLACKLIST_MANAGER_ROLE_1997": {
									"entryPoint": 3132,
									"id": 1997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BURNER_ROLE_1987": {
									"entryPoint": 2768,
									"id": 1987,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 4128,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FREEZE_MANAGER_ROLE_1992": {
									"entryPoint": 3371,
									"id": 1992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1982": {
									"entryPoint": 4746,
									"id": 1982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RECOVER_ROLE_2002": {
									"entryPoint": 3785,
									"id": 2002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_1401": {
									"entryPoint": 8450,
									"id": 1401,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_approve_1069": {
									"entryPoint": 5529,
									"id": 1069,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1129": {
									"entryPoint": 6939,
									"id": 1129,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1051": {
									"entryPoint": 6733,
									"id": 1051,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_463": {
									"entryPoint": 5387,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 7402,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 5547,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_contains_1504": {
									"entryPoint": 8020,
									"id": 1504,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_256": {
									"entryPoint": 5898,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1018": {
									"entryPoint": 6366,
									"id": 1018,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1294": {
									"entryPoint": 5522,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_remove_1485": {
									"entryPoint": 8198,
									"id": 1485,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 6132,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1177": {
									"entryPoint": 8052,
									"id": 1177,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_525": {
									"entryPoint": 6538,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_908": {
									"entryPoint": 5567,
									"id": 908,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_985": {
									"entryPoint": 7483,
									"id": 985,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addBlacklistManager_2377": {
									"entryPoint": 2261,
									"id": 2377,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addBurner_2325": {
									"entryPoint": 5229,
									"id": 2325,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addFreezer_2351": {
									"entryPoint": 3168,
									"id": 2351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addMinter_2299": {
									"entryPoint": 4018,
									"id": 2299,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRecoverer_2403": {
									"entryPoint": 4489,
									"id": 2403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1701": {
									"entryPoint": 6894,
									"id": 1701,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_805": {
									"entryPoint": 4816,
									"id": 805,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_829": {
									"entryPoint": 2227,
									"id": 829,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_764": {
									"entryPoint": 3407,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blacklistAccount_2133": {
									"entryPoint": 4595,
									"id": 2133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_2062": {
									"entryPoint": 4071,
									"id": 2062,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@contains_1755": {
									"entryPoint": 5807,
									"id": 1755,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_742": {
									"entryPoint": 2944,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@freezeAccount_2086": {
									"entryPoint": 4946,
									"id": 2086,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2739,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2857,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3685,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_2046": {
									"entryPoint": 3075,
									"id": 2046,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_724": {
									"entryPoint": 2083,
									"id": 724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_446": {
									"entryPoint": 3645,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recover_2175": {
									"entryPoint": 2323,
									"id": 2175,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@removeBlacklistManager_2390": {
									"entryPoint": 3965,
									"id": 2390,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeBurner_2338": {
									"entryPoint": 2030,
									"id": 2338,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeFreezer_2364": {
									"entryPoint": 2804,
									"id": 2364,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeFromBlacklist_2156": {
									"entryPoint": 3221,
									"id": 2156,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeMinter_2312": {
									"entryPoint": 2891,
									"id": 2312,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeRecoverer_2416": {
									"entryPoint": 4542,
									"id": 2416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_1728": {
									"entryPoint": 6493,
									"id": 1728,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_477": {
									"entryPoint": 3476,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 2952,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4782,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1335": {
									"entryPoint": 5282,
									"id": 1335,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1909,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_733": {
									"entryPoint": 3821,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_751": {
									"entryPoint": 2314,
									"id": 751,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2286": {
									"entryPoint": 2382,
									"id": 2286,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_861": {
									"entryPoint": 5852,
									"id": 861,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_505": {
									"entryPoint": 5097,
									"id": 505,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_2230": {
									"entryPoint": 4134,
									"id": 2230,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_788": {
									"entryPoint": 6860,
									"id": 788,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unfreezeAccount_2109": {
									"entryPoint": 3495,
									"id": 2109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 9277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 10521,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10656,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 9246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8895,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9596,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10760,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6": {
									"entryPoint": 9689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab": {
									"entryPoint": 10001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc": {
									"entryPoint": 9793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a": {
									"entryPoint": 10313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c": {
									"entryPoint": 9897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21": {
									"entryPoint": 10209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9": {
									"entryPoint": 10105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d": {
									"entryPoint": 10417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 9255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18281:12",
										"nodeType": "YulBlock",
										"src": "0:18281:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1563:81:12",
													"nodeType": "YulBlock",
													"src": "1563:81:12",
													"statements": [
														{
															"nativeSrc": "1573:65:12",
															"nodeType": "YulAssignment",
															"src": "1573:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:12"
																},
																"nativeSrc": "1584:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:12",
														"nodeType": "YulTypedName",
														"src": "1545:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:12",
														"nodeType": "YulTypedName",
														"src": "1555:7:12",
														"type": ""
													}
												],
												"src": "1518:126:12"
											},
											{
												"body": {
													"nativeSrc": "1695:51:12",
													"nodeType": "YulBlock",
													"src": "1695:51:12",
													"statements": [
														{
															"nativeSrc": "1705:35:12",
															"nodeType": "YulAssignment",
															"src": "1705:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:12"
																},
																"nativeSrc": "1716:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:12",
														"nodeType": "YulTypedName",
														"src": "1677:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:12",
														"nodeType": "YulTypedName",
														"src": "1687:7:12",
														"type": ""
													}
												],
												"src": "1650:96:12"
											},
											{
												"body": {
													"nativeSrc": "1795:79:12",
													"nodeType": "YulBlock",
													"src": "1795:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:12",
																"nodeType": "YulBlock",
																"src": "1852:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:12"
																			},
																			"nativeSrc": "1854:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:12"
																		},
																		"nativeSrc": "1854:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:12"
																				},
																				"nativeSrc": "1825:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:12"
																		},
																		"nativeSrc": "1815:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:12"
																},
																"nativeSrc": "1808:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:12"
															},
															"nativeSrc": "1805:63:12",
															"nodeType": "YulIf",
															"src": "1805:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:12",
														"nodeType": "YulTypedName",
														"src": "1788:5:12",
														"type": ""
													}
												],
												"src": "1752:122:12"
											},
											{
												"body": {
													"nativeSrc": "1932:87:12",
													"nodeType": "YulBlock",
													"src": "1932:87:12",
													"statements": [
														{
															"nativeSrc": "1942:29:12",
															"nodeType": "YulAssignment",
															"src": "1942:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:12"
																},
																"nativeSrc": "1951:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:12"
																},
																"nativeSrc": "1980:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:12"
															},
															"nativeSrc": "1980:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:12",
														"nodeType": "YulTypedName",
														"src": "1910:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:12",
														"nodeType": "YulTypedName",
														"src": "1918:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:12",
														"nodeType": "YulTypedName",
														"src": "1926:5:12",
														"type": ""
													}
												],
												"src": "1880:139:12"
											},
											{
												"body": {
													"nativeSrc": "2091:263:12",
													"nodeType": "YulBlock",
													"src": "2091:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2137:83:12",
																"nodeType": "YulBlock",
																"src": "2137:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2139:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:12"
																			},
																			"nativeSrc": "2139:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:12"
																		},
																		"nativeSrc": "2139:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2112:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2108:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:12"
																		},
																		"nativeSrc": "2108:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2104:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:12"
																},
																"nativeSrc": "2104:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2104:32:12"
															},
															"nativeSrc": "2101:119:12",
															"nodeType": "YulIf",
															"src": "2101:119:12"
														},
														{
															"nativeSrc": "2230:117:12",
															"nodeType": "YulBlock",
															"src": "2230:117:12",
															"statements": [
																{
																	"nativeSrc": "2245:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2259:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2249:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2274:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2274:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2309:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2320:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2305:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:12"
																				},
																				"nativeSrc": "2305:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2329:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2284:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:12"
																		},
																		"nativeSrc": "2284:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2274:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:12",
														"nodeType": "YulTypedName",
														"src": "2061:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:12",
														"nodeType": "YulTypedName",
														"src": "2072:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:12",
														"nodeType": "YulTypedName",
														"src": "2084:6:12",
														"type": ""
													}
												],
												"src": "2025:329:12"
											},
											{
												"body": {
													"nativeSrc": "2419:40:12",
													"nodeType": "YulBlock",
													"src": "2419:40:12",
													"statements": [
														{
															"nativeSrc": "2430:22:12",
															"nodeType": "YulAssignment",
															"src": "2430:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2446:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2446:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2440:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2440:5:12"
																},
																"nativeSrc": "2440:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2430:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2360:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2402:5:12",
														"nodeType": "YulTypedName",
														"src": "2402:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2412:6:12",
														"nodeType": "YulTypedName",
														"src": "2412:6:12",
														"type": ""
													}
												],
												"src": "2360:99:12"
											},
											{
												"body": {
													"nativeSrc": "2561:73:12",
													"nodeType": "YulBlock",
													"src": "2561:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2578:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2578:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2583:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2571:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2571:6:12"
																},
																"nativeSrc": "2571:19:12",
																"nodeType": "YulFunctionCall",
																"src": "2571:19:12"
															},
															"nativeSrc": "2571:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "2571:19:12"
														},
														{
															"nativeSrc": "2599:29:12",
															"nodeType": "YulAssignment",
															"src": "2599:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2618:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2618:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2623:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2623:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2614:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2614:3:12"
																},
																"nativeSrc": "2614:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2614:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2599:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "2599:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2465:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2533:3:12",
														"nodeType": "YulTypedName",
														"src": "2533:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2538:6:12",
														"nodeType": "YulTypedName",
														"src": "2538:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2549:11:12",
														"nodeType": "YulTypedName",
														"src": "2549:11:12",
														"type": ""
													}
												],
												"src": "2465:169:12"
											},
											{
												"body": {
													"nativeSrc": "2702:77:12",
													"nodeType": "YulBlock",
													"src": "2702:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2719:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2719:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2724:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2729:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2729:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2713:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2713:5:12"
																},
																"nativeSrc": "2713:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2713:23:12"
															},
															"nativeSrc": "2713:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "2713:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2756:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2756:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2761:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2761:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2752:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2752:3:12"
																		},
																		"nativeSrc": "2752:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2752:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2770:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2770:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2745:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2745:6:12"
																},
																"nativeSrc": "2745:27:12",
																"nodeType": "YulFunctionCall",
																"src": "2745:27:12"
															},
															"nativeSrc": "2745:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "2745:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2640:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2684:3:12",
														"nodeType": "YulTypedName",
														"src": "2684:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2689:3:12",
														"nodeType": "YulTypedName",
														"src": "2689:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2694:6:12",
														"nodeType": "YulTypedName",
														"src": "2694:6:12",
														"type": ""
													}
												],
												"src": "2640:139:12"
											},
											{
												"body": {
													"nativeSrc": "2833:54:12",
													"nodeType": "YulBlock",
													"src": "2833:54:12",
													"statements": [
														{
															"nativeSrc": "2843:38:12",
															"nodeType": "YulAssignment",
															"src": "2843:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2868:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2868:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2857:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:12"
																		},
																		"nativeSrc": "2857:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2857:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2877:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2877:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2873:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2873:3:12"
																		},
																		"nativeSrc": "2873:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2873:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2853:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2853:3:12"
																},
																"nativeSrc": "2853:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2853:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2843:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2843:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2785:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2816:5:12",
														"nodeType": "YulTypedName",
														"src": "2816:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2826:6:12",
														"nodeType": "YulTypedName",
														"src": "2826:6:12",
														"type": ""
													}
												],
												"src": "2785:102:12"
											},
											{
												"body": {
													"nativeSrc": "2985:285:12",
													"nodeType": "YulBlock",
													"src": "2985:285:12",
													"statements": [
														{
															"nativeSrc": "2995:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2995:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3042:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3042:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3009:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3009:32:12"
																},
																"nativeSrc": "3009:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3009:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2999:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2999:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3057:78:12",
															"nodeType": "YulAssignment",
															"src": "3057:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3123:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3123:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3128:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3128:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3064:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "3064:58:12"
																},
																"nativeSrc": "3064:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3064:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3057:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3057:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3183:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3183:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3190:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3190:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3179:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3179:3:12"
																		},
																		"nativeSrc": "3179:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3179:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3197:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3197:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3202:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3144:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "3144:34:12"
																},
																"nativeSrc": "3144:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3144:65:12"
															},
															"nativeSrc": "3144:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3144:65:12"
														},
														{
															"nativeSrc": "3218:46:12",
															"nodeType": "YulAssignment",
															"src": "3218:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3229:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3229:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3256:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3256:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3234:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "3234:21:12"
																		},
																		"nativeSrc": "3234:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3225:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:12"
																},
																"nativeSrc": "3225:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3225:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3218:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2893:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2966:5:12",
														"nodeType": "YulTypedName",
														"src": "2966:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2973:3:12",
														"nodeType": "YulTypedName",
														"src": "2973:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2981:3:12",
														"nodeType": "YulTypedName",
														"src": "2981:3:12",
														"type": ""
													}
												],
												"src": "2893:377:12"
											},
											{
												"body": {
													"nativeSrc": "3394:195:12",
													"nodeType": "YulBlock",
													"src": "3394:195:12",
													"statements": [
														{
															"nativeSrc": "3404:26:12",
															"nodeType": "YulAssignment",
															"src": "3404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:12"
																},
																"nativeSrc": "3412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3451:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3462:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3447:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:12"
																		},
																		"nativeSrc": "3447:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3470:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3470:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3476:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3476:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3466:3:12"
																		},
																		"nativeSrc": "3466:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3466:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3440:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3440:6:12"
																},
																"nativeSrc": "3440:47:12",
																"nodeType": "YulFunctionCall",
																"src": "3440:47:12"
															},
															"nativeSrc": "3440:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "3440:47:12"
														},
														{
															"nativeSrc": "3496:86:12",
															"nodeType": "YulAssignment",
															"src": "3496:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3568:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3568:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3577:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3577:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3504:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "3504:63:12"
																},
																"nativeSrc": "3504:78:12",
																"nodeType": "YulFunctionCall",
																"src": "3504:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3496:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3496:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3276:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3366:9:12",
														"nodeType": "YulTypedName",
														"src": "3366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3378:6:12",
														"nodeType": "YulTypedName",
														"src": "3378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3389:4:12",
														"nodeType": "YulTypedName",
														"src": "3389:4:12",
														"type": ""
													}
												],
												"src": "3276:313:12"
											},
											{
												"body": {
													"nativeSrc": "3640:32:12",
													"nodeType": "YulBlock",
													"src": "3640:32:12",
													"statements": [
														{
															"nativeSrc": "3650:16:12",
															"nodeType": "YulAssignment",
															"src": "3650:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "3661:5:12",
																"nodeType": "YulIdentifier",
																"src": "3661:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3650:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3650:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3595:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3622:5:12",
														"nodeType": "YulTypedName",
														"src": "3622:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3632:7:12",
														"nodeType": "YulTypedName",
														"src": "3632:7:12",
														"type": ""
													}
												],
												"src": "3595:77:12"
											},
											{
												"body": {
													"nativeSrc": "3721:79:12",
													"nodeType": "YulBlock",
													"src": "3721:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3778:16:12",
																"nodeType": "YulBlock",
																"src": "3778:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3787:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3787:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3790:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3790:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3780:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3780:6:12"
																			},
																			"nativeSrc": "3780:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3780:12:12"
																		},
																		"nativeSrc": "3780:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3780:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3744:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3744:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3769:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3769:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3751:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3751:17:12"
																				},
																				"nativeSrc": "3751:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3751:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3741:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3741:2:12"
																		},
																		"nativeSrc": "3741:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3741:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3734:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3734:6:12"
																},
																"nativeSrc": "3734:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3734:43:12"
															},
															"nativeSrc": "3731:63:12",
															"nodeType": "YulIf",
															"src": "3731:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3678:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3714:5:12",
														"nodeType": "YulTypedName",
														"src": "3714:5:12",
														"type": ""
													}
												],
												"src": "3678:122:12"
											},
											{
												"body": {
													"nativeSrc": "3858:87:12",
													"nodeType": "YulBlock",
													"src": "3858:87:12",
													"statements": [
														{
															"nativeSrc": "3868:29:12",
															"nodeType": "YulAssignment",
															"src": "3868:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3890:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3890:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3877:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3877:12:12"
																},
																"nativeSrc": "3877:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3877:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3868:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3868:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3933:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3933:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3906:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3906:26:12"
																},
																"nativeSrc": "3906:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3906:33:12"
															},
															"nativeSrc": "3906:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3906:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3806:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3836:6:12",
														"nodeType": "YulTypedName",
														"src": "3836:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3844:3:12",
														"nodeType": "YulTypedName",
														"src": "3844:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3852:5:12",
														"nodeType": "YulTypedName",
														"src": "3852:5:12",
														"type": ""
													}
												],
												"src": "3806:139:12"
											},
											{
												"body": {
													"nativeSrc": "4034:391:12",
													"nodeType": "YulBlock",
													"src": "4034:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4080:83:12",
																"nodeType": "YulBlock",
																"src": "4080:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4082:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4082:77:12"
																			},
																			"nativeSrc": "4082:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4082:79:12"
																		},
																		"nativeSrc": "4082:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4082:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4055:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4055:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4064:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4064:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4051:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4051:3:12"
																		},
																		"nativeSrc": "4051:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4051:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4076:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4076:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4047:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4047:3:12"
																},
																"nativeSrc": "4047:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4047:32:12"
															},
															"nativeSrc": "4044:119:12",
															"nodeType": "YulIf",
															"src": "4044:119:12"
														},
														{
															"nativeSrc": "4173:117:12",
															"nodeType": "YulBlock",
															"src": "4173:117:12",
															"statements": [
																{
																	"nativeSrc": "4188:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4188:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4202:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4192:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4192:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4217:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4217:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4252:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4252:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4263:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4263:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4248:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4248:3:12"
																				},
																				"nativeSrc": "4248:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4248:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4272:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4272:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4227:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4227:20:12"
																		},
																		"nativeSrc": "4227:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4227:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4217:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4217:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4300:118:12",
															"nodeType": "YulBlock",
															"src": "4300:118:12",
															"statements": [
																{
																	"nativeSrc": "4315:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4315:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4329:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4329:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4319:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4319:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4345:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4345:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4380:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4380:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4391:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4391:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4376:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4376:3:12"
																				},
																				"nativeSrc": "4376:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4376:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4400:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4400:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4355:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4355:20:12"
																		},
																		"nativeSrc": "4355:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4355:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4345:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4345:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3951:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3996:9:12",
														"nodeType": "YulTypedName",
														"src": "3996:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4007:7:12",
														"nodeType": "YulTypedName",
														"src": "4007:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4019:6:12",
														"nodeType": "YulTypedName",
														"src": "4019:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4027:6:12",
														"nodeType": "YulTypedName",
														"src": "4027:6:12",
														"type": ""
													}
												],
												"src": "3951:474:12"
											},
											{
												"body": {
													"nativeSrc": "4496:53:12",
													"nodeType": "YulBlock",
													"src": "4496:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4513:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4513:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4536:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4536:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4518:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4518:17:12"
																		},
																		"nativeSrc": "4518:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4518:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4506:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4506:6:12"
																},
																"nativeSrc": "4506:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4506:37:12"
															},
															"nativeSrc": "4506:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4506:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4431:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4484:5:12",
														"nodeType": "YulTypedName",
														"src": "4484:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4491:3:12",
														"nodeType": "YulTypedName",
														"src": "4491:3:12",
														"type": ""
													}
												],
												"src": "4431:118:12"
											},
											{
												"body": {
													"nativeSrc": "4653:124:12",
													"nodeType": "YulBlock",
													"src": "4653:124:12",
													"statements": [
														{
															"nativeSrc": "4663:26:12",
															"nodeType": "YulAssignment",
															"src": "4663:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4675:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4671:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:12"
																},
																"nativeSrc": "4671:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4671:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4663:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4663:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4743:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4743:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4756:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4756:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4767:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4767:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4752:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:12"
																		},
																		"nativeSrc": "4752:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4699:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4699:43:12"
																},
																"nativeSrc": "4699:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4699:71:12"
															},
															"nativeSrc": "4699:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4699:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4555:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4625:9:12",
														"nodeType": "YulTypedName",
														"src": "4625:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4637:6:12",
														"nodeType": "YulTypedName",
														"src": "4637:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4648:4:12",
														"nodeType": "YulTypedName",
														"src": "4648:4:12",
														"type": ""
													}
												],
												"src": "4555:222:12"
											},
											{
												"body": {
													"nativeSrc": "4883:519:12",
													"nodeType": "YulBlock",
													"src": "4883:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:12",
																"nodeType": "YulBlock",
																"src": "4929:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:12"
																			},
																			"nativeSrc": "4931:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:12"
																		},
																		"nativeSrc": "4931:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:12"
																		},
																		"nativeSrc": "4900:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:12"
																},
																"nativeSrc": "4896:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:12"
															},
															"nativeSrc": "4893:119:12",
															"nodeType": "YulIf",
															"src": "4893:119:12"
														},
														{
															"nativeSrc": "5022:117:12",
															"nodeType": "YulBlock",
															"src": "5022:117:12",
															"statements": [
																{
																	"nativeSrc": "5037:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:12"
																				},
																				"nativeSrc": "5097:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:12"
																		},
																		"nativeSrc": "5076:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:12",
															"nodeType": "YulBlock",
															"src": "5149:118:12",
															"statements": [
																{
																	"nativeSrc": "5164:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:12"
																				},
																				"nativeSrc": "5225:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:12"
																		},
																		"nativeSrc": "5204:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:12",
															"nodeType": "YulBlock",
															"src": "5277:118:12",
															"statements": [
																{
																	"nativeSrc": "5292:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:12"
																				},
																				"nativeSrc": "5353:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:12"
																		},
																		"nativeSrc": "5332:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:12",
														"nodeType": "YulTypedName",
														"src": "4837:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:12",
														"nodeType": "YulTypedName",
														"src": "4848:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:12",
														"nodeType": "YulTypedName",
														"src": "4860:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:12",
														"nodeType": "YulTypedName",
														"src": "4868:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:12",
														"nodeType": "YulTypedName",
														"src": "4876:6:12",
														"type": ""
													}
												],
												"src": "4783:619:12"
											},
											{
												"body": {
													"nativeSrc": "5453:32:12",
													"nodeType": "YulBlock",
													"src": "5453:32:12",
													"statements": [
														{
															"nativeSrc": "5463:16:12",
															"nodeType": "YulAssignment",
															"src": "5463:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5474:5:12",
																"nodeType": "YulIdentifier",
																"src": "5474:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5463:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5463:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5408:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5435:5:12",
														"nodeType": "YulTypedName",
														"src": "5435:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5445:7:12",
														"nodeType": "YulTypedName",
														"src": "5445:7:12",
														"type": ""
													}
												],
												"src": "5408:77:12"
											},
											{
												"body": {
													"nativeSrc": "5534:79:12",
													"nodeType": "YulBlock",
													"src": "5534:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5591:16:12",
																"nodeType": "YulBlock",
																"src": "5591:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5600:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5600:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5603:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5603:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5593:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5593:6:12"
																			},
																			"nativeSrc": "5593:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5593:12:12"
																		},
																		"nativeSrc": "5593:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5593:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5557:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5557:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5582:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5582:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5564:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5564:17:12"
																				},
																				"nativeSrc": "5564:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5564:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5554:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5554:2:12"
																		},
																		"nativeSrc": "5554:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5554:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5547:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:12"
																},
																"nativeSrc": "5547:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5547:43:12"
															},
															"nativeSrc": "5544:63:12",
															"nodeType": "YulIf",
															"src": "5544:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5491:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5527:5:12",
														"nodeType": "YulTypedName",
														"src": "5527:5:12",
														"type": ""
													}
												],
												"src": "5491:122:12"
											},
											{
												"body": {
													"nativeSrc": "5671:87:12",
													"nodeType": "YulBlock",
													"src": "5671:87:12",
													"statements": [
														{
															"nativeSrc": "5681:29:12",
															"nodeType": "YulAssignment",
															"src": "5681:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5703:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5690:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5690:12:12"
																},
																"nativeSrc": "5690:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5690:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5681:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5681:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5746:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5746:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5719:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "5719:26:12"
																},
																"nativeSrc": "5719:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5719:33:12"
															},
															"nativeSrc": "5719:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5719:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5619:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5649:6:12",
														"nodeType": "YulTypedName",
														"src": "5649:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5657:3:12",
														"nodeType": "YulTypedName",
														"src": "5657:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5665:5:12",
														"nodeType": "YulTypedName",
														"src": "5665:5:12",
														"type": ""
													}
												],
												"src": "5619:139:12"
											},
											{
												"body": {
													"nativeSrc": "5830:263:12",
													"nodeType": "YulBlock",
													"src": "5830:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5876:83:12",
																"nodeType": "YulBlock",
																"src": "5876:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5878:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5878:77:12"
																			},
																			"nativeSrc": "5878:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5878:79:12"
																		},
																		"nativeSrc": "5878:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5878:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5851:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5851:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5860:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5847:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:12"
																		},
																		"nativeSrc": "5847:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5872:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5872:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5843:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:12"
																},
																"nativeSrc": "5843:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5843:32:12"
															},
															"nativeSrc": "5840:119:12",
															"nodeType": "YulIf",
															"src": "5840:119:12"
														},
														{
															"nativeSrc": "5969:117:12",
															"nodeType": "YulBlock",
															"src": "5969:117:12",
															"statements": [
																{
																	"nativeSrc": "5984:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5984:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5988:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5988:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6013:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6013:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6048:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6048:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6059:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6059:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6044:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6044:3:12"
																				},
																				"nativeSrc": "6044:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6044:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6068:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6068:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6023:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6023:20:12"
																		},
																		"nativeSrc": "6023:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6023:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6013:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6013:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5764:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5800:9:12",
														"nodeType": "YulTypedName",
														"src": "5800:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5811:7:12",
														"nodeType": "YulTypedName",
														"src": "5811:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5823:6:12",
														"nodeType": "YulTypedName",
														"src": "5823:6:12",
														"type": ""
													}
												],
												"src": "5764:329:12"
											},
											{
												"body": {
													"nativeSrc": "6164:53:12",
													"nodeType": "YulBlock",
													"src": "6164:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6181:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6181:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6204:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6204:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6186:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:17:12"
																		},
																		"nativeSrc": "6186:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6174:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:12"
																},
																"nativeSrc": "6174:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6174:37:12"
															},
															"nativeSrc": "6174:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "6174:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6099:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6152:5:12",
														"nodeType": "YulTypedName",
														"src": "6152:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6159:3:12",
														"nodeType": "YulTypedName",
														"src": "6159:3:12",
														"type": ""
													}
												],
												"src": "6099:118:12"
											},
											{
												"body": {
													"nativeSrc": "6321:124:12",
													"nodeType": "YulBlock",
													"src": "6321:124:12",
													"statements": [
														{
															"nativeSrc": "6331:26:12",
															"nodeType": "YulAssignment",
															"src": "6331:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6343:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6343:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6354:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6354:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6339:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:12"
																},
																"nativeSrc": "6339:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6339:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6331:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6331:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6411:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6411:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6424:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6435:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:12"
																		},
																		"nativeSrc": "6420:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6367:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6367:43:12"
																},
																"nativeSrc": "6367:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6367:71:12"
															},
															"nativeSrc": "6367:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6367:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6223:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:12",
														"nodeType": "YulTypedName",
														"src": "6293:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6305:6:12",
														"nodeType": "YulTypedName",
														"src": "6305:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6316:4:12",
														"nodeType": "YulTypedName",
														"src": "6316:4:12",
														"type": ""
													}
												],
												"src": "6223:222:12"
											},
											{
												"body": {
													"nativeSrc": "6534:391:12",
													"nodeType": "YulBlock",
													"src": "6534:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6580:83:12",
																"nodeType": "YulBlock",
																"src": "6580:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6582:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6582:77:12"
																			},
																			"nativeSrc": "6582:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6582:79:12"
																		},
																		"nativeSrc": "6582:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6582:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6555:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6555:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6551:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6551:3:12"
																		},
																		"nativeSrc": "6551:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6551:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6576:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6576:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6547:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6547:3:12"
																},
																"nativeSrc": "6547:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6547:32:12"
															},
															"nativeSrc": "6544:119:12",
															"nodeType": "YulIf",
															"src": "6544:119:12"
														},
														{
															"nativeSrc": "6673:117:12",
															"nodeType": "YulBlock",
															"src": "6673:117:12",
															"statements": [
																{
																	"nativeSrc": "6688:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6688:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6702:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6702:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6692:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6692:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6717:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6717:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6752:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6752:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6763:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6763:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6748:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6748:3:12"
																				},
																				"nativeSrc": "6748:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6748:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6772:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6772:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6727:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6727:20:12"
																		},
																		"nativeSrc": "6727:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6717:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6717:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6800:118:12",
															"nodeType": "YulBlock",
															"src": "6800:118:12",
															"statements": [
																{
																	"nativeSrc": "6815:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6815:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6829:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6819:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6819:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6845:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6845:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6880:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6880:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6891:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6891:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6876:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6876:3:12"
																				},
																				"nativeSrc": "6876:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6876:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6900:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6900:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6855:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6855:20:12"
																		},
																		"nativeSrc": "6855:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6855:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6845:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6845:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6451:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6496:9:12",
														"nodeType": "YulTypedName",
														"src": "6496:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6507:7:12",
														"nodeType": "YulTypedName",
														"src": "6507:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6519:6:12",
														"nodeType": "YulTypedName",
														"src": "6519:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6527:6:12",
														"nodeType": "YulTypedName",
														"src": "6527:6:12",
														"type": ""
													}
												],
												"src": "6451:474:12"
											},
											{
												"body": {
													"nativeSrc": "6974:43:12",
													"nodeType": "YulBlock",
													"src": "6974:43:12",
													"statements": [
														{
															"nativeSrc": "6984:27:12",
															"nodeType": "YulAssignment",
															"src": "6984:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6999:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6999:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7006:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7006:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6995:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:12"
																},
																"nativeSrc": "6995:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6995:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6984:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6984:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6931:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6956:5:12",
														"nodeType": "YulTypedName",
														"src": "6956:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6966:7:12",
														"nodeType": "YulTypedName",
														"src": "6966:7:12",
														"type": ""
													}
												],
												"src": "6931:86:12"
											},
											{
												"body": {
													"nativeSrc": "7084:51:12",
													"nodeType": "YulBlock",
													"src": "7084:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7101:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7101:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7122:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7122:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7106:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "7106:15:12"
																		},
																		"nativeSrc": "7106:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7106:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7094:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:12"
																},
																"nativeSrc": "7094:35:12",
																"nodeType": "YulFunctionCall",
																"src": "7094:35:12"
															},
															"nativeSrc": "7094:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "7094:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7023:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7072:5:12",
														"nodeType": "YulTypedName",
														"src": "7072:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7079:3:12",
														"nodeType": "YulTypedName",
														"src": "7079:3:12",
														"type": ""
													}
												],
												"src": "7023:112:12"
											},
											{
												"body": {
													"nativeSrc": "7235:120:12",
													"nodeType": "YulBlock",
													"src": "7235:120:12",
													"statements": [
														{
															"nativeSrc": "7245:26:12",
															"nodeType": "YulAssignment",
															"src": "7245:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7257:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7257:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7268:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7268:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7253:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:12"
																},
																"nativeSrc": "7253:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7253:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7245:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7245:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7321:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7334:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7345:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7345:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7330:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:12"
																		},
																		"nativeSrc": "7330:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7281:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "7281:39:12"
																},
																"nativeSrc": "7281:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7281:67:12"
															},
															"nativeSrc": "7281:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "7281:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7141:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7207:9:12",
														"nodeType": "YulTypedName",
														"src": "7207:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7219:6:12",
														"nodeType": "YulTypedName",
														"src": "7219:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7230:4:12",
														"nodeType": "YulTypedName",
														"src": "7230:4:12",
														"type": ""
													}
												],
												"src": "7141:214:12"
											},
											{
												"body": {
													"nativeSrc": "7426:53:12",
													"nodeType": "YulBlock",
													"src": "7426:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7443:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7443:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7466:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7466:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7448:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "7448:17:12"
																		},
																		"nativeSrc": "7448:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7448:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7436:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:12"
																},
																"nativeSrc": "7436:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7436:37:12"
															},
															"nativeSrc": "7436:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "7436:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7361:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7414:5:12",
														"nodeType": "YulTypedName",
														"src": "7414:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7421:3:12",
														"nodeType": "YulTypedName",
														"src": "7421:3:12",
														"type": ""
													}
												],
												"src": "7361:118:12"
											},
											{
												"body": {
													"nativeSrc": "7583:124:12",
													"nodeType": "YulBlock",
													"src": "7583:124:12",
													"statements": [
														{
															"nativeSrc": "7593:26:12",
															"nodeType": "YulAssignment",
															"src": "7593:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7605:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7605:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7616:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7616:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7601:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7601:3:12"
																},
																"nativeSrc": "7601:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7601:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7593:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7593:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7673:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7673:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7686:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7686:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7697:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7697:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7682:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7682:3:12"
																		},
																		"nativeSrc": "7682:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7682:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7629:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7629:43:12"
																},
																"nativeSrc": "7629:71:12",
																"nodeType": "YulFunctionCall",
																"src": "7629:71:12"
															},
															"nativeSrc": "7629:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "7629:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7485:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7555:9:12",
														"nodeType": "YulTypedName",
														"src": "7555:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7567:6:12",
														"nodeType": "YulTypedName",
														"src": "7567:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7578:4:12",
														"nodeType": "YulTypedName",
														"src": "7578:4:12",
														"type": ""
													}
												],
												"src": "7485:222:12"
											},
											{
												"body": {
													"nativeSrc": "7796:391:12",
													"nodeType": "YulBlock",
													"src": "7796:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7842:83:12",
																"nodeType": "YulBlock",
																"src": "7842:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7844:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7844:77:12"
																			},
																			"nativeSrc": "7844:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7844:79:12"
																		},
																		"nativeSrc": "7844:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7844:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7817:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7817:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7826:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7826:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7813:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7813:3:12"
																		},
																		"nativeSrc": "7813:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7813:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7838:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7838:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7809:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7809:3:12"
																},
																"nativeSrc": "7809:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7809:32:12"
															},
															"nativeSrc": "7806:119:12",
															"nodeType": "YulIf",
															"src": "7806:119:12"
														},
														{
															"nativeSrc": "7935:117:12",
															"nodeType": "YulBlock",
															"src": "7935:117:12",
															"statements": [
																{
																	"nativeSrc": "7950:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7950:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7964:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7964:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7954:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7954:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7979:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7979:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8014:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8014:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8025:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8025:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8010:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8010:3:12"
																				},
																				"nativeSrc": "8010:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8010:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8034:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8034:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7989:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7989:20:12"
																		},
																		"nativeSrc": "7989:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7989:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7979:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7979:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8062:118:12",
															"nodeType": "YulBlock",
															"src": "8062:118:12",
															"statements": [
																{
																	"nativeSrc": "8077:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8077:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8091:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8091:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8081:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8081:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8107:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8107:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8142:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8142:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8153:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8153:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8138:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8138:3:12"
																				},
																				"nativeSrc": "8138:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8138:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8162:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8162:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8117:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8117:20:12"
																		},
																		"nativeSrc": "8117:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8117:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8107:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8107:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7713:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7758:9:12",
														"nodeType": "YulTypedName",
														"src": "7758:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7769:7:12",
														"nodeType": "YulTypedName",
														"src": "7769:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7781:6:12",
														"nodeType": "YulTypedName",
														"src": "7781:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7789:6:12",
														"nodeType": "YulTypedName",
														"src": "7789:6:12",
														"type": ""
													}
												],
												"src": "7713:474:12"
											},
											{
												"body": {
													"nativeSrc": "8221:152:12",
													"nodeType": "YulBlock",
													"src": "8221:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8238:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8238:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8241:77:12",
																		"nodeType": "YulLiteral",
																		"src": "8241:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8231:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8231:6:12"
																},
																"nativeSrc": "8231:88:12",
																"nodeType": "YulFunctionCall",
																"src": "8231:88:12"
															},
															"nativeSrc": "8231:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "8231:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8335:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8335:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8338:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8338:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8328:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8328:6:12"
																},
																"nativeSrc": "8328:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8328:15:12"
															},
															"nativeSrc": "8328:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8328:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8359:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8359:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8362:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8362:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8352:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8352:6:12"
																},
																"nativeSrc": "8352:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8352:15:12"
															},
															"nativeSrc": "8352:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8352:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8193:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8193:180:12"
											},
											{
												"body": {
													"nativeSrc": "8430:269:12",
													"nodeType": "YulBlock",
													"src": "8430:269:12",
													"statements": [
														{
															"nativeSrc": "8440:22:12",
															"nodeType": "YulAssignment",
															"src": "8440:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8454:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8454:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8460:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8460:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8450:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8450:3:12"
																},
																"nativeSrc": "8450:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8450:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8440:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8440:6:12"
																}
															]
														},
														{
															"nativeSrc": "8471:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8471:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8501:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8501:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8507:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8507:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8497:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8497:3:12"
																},
																"nativeSrc": "8497:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8497:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8475:18:12",
																	"nodeType": "YulTypedName",
																	"src": "8475:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8548:51:12",
																"nodeType": "YulBlock",
																"src": "8548:51:12",
																"statements": [
																	{
																		"nativeSrc": "8562:27:12",
																		"nodeType": "YulAssignment",
																		"src": "8562:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8576:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8576:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8584:4:12",
																					"nodeType": "YulLiteral",
																					"src": "8584:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8572:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8572:3:12"
																			},
																			"nativeSrc": "8572:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8572:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8562:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8562:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8528:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8528:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8521:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8521:6:12"
																},
																"nativeSrc": "8521:26:12",
																"nodeType": "YulFunctionCall",
																"src": "8521:26:12"
															},
															"nativeSrc": "8518:81:12",
															"nodeType": "YulIf",
															"src": "8518:81:12"
														},
														{
															"body": {
																"nativeSrc": "8651:42:12",
																"nodeType": "YulBlock",
																"src": "8651:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8665:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8665:16:12"
																			},
																			"nativeSrc": "8665:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8665:18:12"
																		},
																		"nativeSrc": "8665:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8665:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8615:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8615:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8638:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8638:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8646:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8646:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8635:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8635:2:12"
																		},
																		"nativeSrc": "8635:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8635:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8612:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8612:2:12"
																},
																"nativeSrc": "8612:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8612:38:12"
															},
															"nativeSrc": "8609:84:12",
															"nodeType": "YulIf",
															"src": "8609:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8379:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8414:4:12",
														"nodeType": "YulTypedName",
														"src": "8414:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8423:6:12",
														"nodeType": "YulTypedName",
														"src": "8423:6:12",
														"type": ""
													}
												],
												"src": "8379:320:12"
											},
											{
												"body": {
													"nativeSrc": "8811:68:12",
													"nodeType": "YulBlock",
													"src": "8811:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8833:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8833:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8841:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8841:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8829:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8829:3:12"
																		},
																		"nativeSrc": "8829:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8829:14:12"
																	},
																	{
																		"hexValue": "53656e646572206163636f756e742069732066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "8845:26:12",
																		"nodeType": "YulLiteral",
																		"src": "8845:26:12",
																		"type": "",
																		"value": "Sender account is frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8822:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8822:6:12"
																},
																"nativeSrc": "8822:50:12",
																"nodeType": "YulFunctionCall",
																"src": "8822:50:12"
															},
															"nativeSrc": "8822:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "8822:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6",
												"nativeSrc": "8705:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8803:6:12",
														"nodeType": "YulTypedName",
														"src": "8803:6:12",
														"type": ""
													}
												],
												"src": "8705:174:12"
											},
											{
												"body": {
													"nativeSrc": "9031:220:12",
													"nodeType": "YulBlock",
													"src": "9031:220:12",
													"statements": [
														{
															"nativeSrc": "9041:74:12",
															"nodeType": "YulAssignment",
															"src": "9041:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9107:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9107:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9112:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9112:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9048:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9048:58:12"
																},
																"nativeSrc": "9048:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9048:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9041:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9213:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9213:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6",
																	"nativeSrc": "9124:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9124:88:12"
																},
																"nativeSrc": "9124:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9124:93:12"
															},
															"nativeSrc": "9124:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9124:93:12"
														},
														{
															"nativeSrc": "9226:19:12",
															"nodeType": "YulAssignment",
															"src": "9226:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9237:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9237:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9242:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9242:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9233:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9233:3:12"
																},
																"nativeSrc": "9233:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9233:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9226:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9226:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8885:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9019:3:12",
														"nodeType": "YulTypedName",
														"src": "9019:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9027:3:12",
														"nodeType": "YulTypedName",
														"src": "9027:3:12",
														"type": ""
													}
												],
												"src": "8885:366:12"
											},
											{
												"body": {
													"nativeSrc": "9428:248:12",
													"nodeType": "YulBlock",
													"src": "9428:248:12",
													"statements": [
														{
															"nativeSrc": "9438:26:12",
															"nodeType": "YulAssignment",
															"src": "9438:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9450:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9450:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9461:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9461:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9446:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9446:3:12"
																},
																"nativeSrc": "9446:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9446:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9438:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9438:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9485:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9485:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9496:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9496:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9481:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9481:3:12"
																		},
																		"nativeSrc": "9481:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9481:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9504:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9504:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9510:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9510:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9500:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9500:3:12"
																		},
																		"nativeSrc": "9500:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9500:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9474:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9474:6:12"
																},
																"nativeSrc": "9474:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9474:47:12"
															},
															"nativeSrc": "9474:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9474:47:12"
														},
														{
															"nativeSrc": "9530:139:12",
															"nodeType": "YulAssignment",
															"src": "9530:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9664:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9664:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9538:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9538:124:12"
																},
																"nativeSrc": "9538:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9538:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9530:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9530:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9257:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9408:9:12",
														"nodeType": "YulTypedName",
														"src": "9408:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9423:4:12",
														"nodeType": "YulTypedName",
														"src": "9423:4:12",
														"type": ""
													}
												],
												"src": "9257:419:12"
											},
											{
												"body": {
													"nativeSrc": "9788:71:12",
													"nodeType": "YulBlock",
													"src": "9788:71:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9810:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9810:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9818:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9818:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9806:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9806:3:12"
																		},
																		"nativeSrc": "9806:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9806:14:12"
																	},
																	{
																		"hexValue": "526563697069656e74206163636f756e742069732066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "9822:29:12",
																		"nodeType": "YulLiteral",
																		"src": "9822:29:12",
																		"type": "",
																		"value": "Recipient account is frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9799:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9799:6:12"
																},
																"nativeSrc": "9799:53:12",
																"nodeType": "YulFunctionCall",
																"src": "9799:53:12"
															},
															"nativeSrc": "9799:53:12",
															"nodeType": "YulExpressionStatement",
															"src": "9799:53:12"
														}
													]
												},
												"name": "store_literal_in_memory_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc",
												"nativeSrc": "9682:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9780:6:12",
														"nodeType": "YulTypedName",
														"src": "9780:6:12",
														"type": ""
													}
												],
												"src": "9682:177:12"
											},
											{
												"body": {
													"nativeSrc": "10011:220:12",
													"nodeType": "YulBlock",
													"src": "10011:220:12",
													"statements": [
														{
															"nativeSrc": "10021:74:12",
															"nodeType": "YulAssignment",
															"src": "10021:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10087:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10087:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10092:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10092:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10028:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10028:58:12"
																},
																"nativeSrc": "10028:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10028:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10021:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10193:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10193:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc",
																	"nativeSrc": "10104:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10104:88:12"
																},
																"nativeSrc": "10104:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10104:93:12"
															},
															"nativeSrc": "10104:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10104:93:12"
														},
														{
															"nativeSrc": "10206:19:12",
															"nodeType": "YulAssignment",
															"src": "10206:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10217:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10217:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10222:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10222:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10213:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10213:3:12"
																},
																"nativeSrc": "10213:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10213:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10206:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10206:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9865:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9999:3:12",
														"nodeType": "YulTypedName",
														"src": "9999:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10007:3:12",
														"nodeType": "YulTypedName",
														"src": "10007:3:12",
														"type": ""
													}
												],
												"src": "9865:366:12"
											},
											{
												"body": {
													"nativeSrc": "10408:248:12",
													"nodeType": "YulBlock",
													"src": "10408:248:12",
													"statements": [
														{
															"nativeSrc": "10418:26:12",
															"nodeType": "YulAssignment",
															"src": "10418:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10430:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10430:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10441:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10441:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10426:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10426:3:12"
																},
																"nativeSrc": "10426:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10426:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10418:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10418:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10465:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10465:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10476:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10476:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10461:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10461:3:12"
																		},
																		"nativeSrc": "10461:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10461:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10484:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10484:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10490:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10490:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10480:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10480:3:12"
																		},
																		"nativeSrc": "10480:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10480:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10454:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10454:6:12"
																},
																"nativeSrc": "10454:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10454:47:12"
															},
															"nativeSrc": "10454:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10454:47:12"
														},
														{
															"nativeSrc": "10510:139:12",
															"nodeType": "YulAssignment",
															"src": "10510:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10644:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10644:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10518:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10518:124:12"
																},
																"nativeSrc": "10518:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10518:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10510:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10510:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10237:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10388:9:12",
														"nodeType": "YulTypedName",
														"src": "10388:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10403:4:12",
														"nodeType": "YulTypedName",
														"src": "10403:4:12",
														"type": ""
													}
												],
												"src": "10237:419:12"
											},
											{
												"body": {
													"nativeSrc": "10768:73:12",
													"nodeType": "YulBlock",
													"src": "10768:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10790:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10790:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10798:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10798:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10786:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10786:3:12"
																		},
																		"nativeSrc": "10786:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10786:14:12"
																	},
																	{
																		"hexValue": "53656e646572206163636f756e7420697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "10802:31:12",
																		"nodeType": "YulLiteral",
																		"src": "10802:31:12",
																		"type": "",
																		"value": "Sender account is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10779:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10779:6:12"
																},
																"nativeSrc": "10779:55:12",
																"nodeType": "YulFunctionCall",
																"src": "10779:55:12"
															},
															"nativeSrc": "10779:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "10779:55:12"
														}
													]
												},
												"name": "store_literal_in_memory_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c",
												"nativeSrc": "10662:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10760:6:12",
														"nodeType": "YulTypedName",
														"src": "10760:6:12",
														"type": ""
													}
												],
												"src": "10662:179:12"
											},
											{
												"body": {
													"nativeSrc": "10993:220:12",
													"nodeType": "YulBlock",
													"src": "10993:220:12",
													"statements": [
														{
															"nativeSrc": "11003:74:12",
															"nodeType": "YulAssignment",
															"src": "11003:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11069:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11069:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11074:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11074:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11010:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11010:58:12"
																},
																"nativeSrc": "11010:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11010:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11003:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11003:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11175:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11175:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c",
																	"nativeSrc": "11086:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11086:88:12"
																},
																"nativeSrc": "11086:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11086:93:12"
															},
															"nativeSrc": "11086:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11086:93:12"
														},
														{
															"nativeSrc": "11188:19:12",
															"nodeType": "YulAssignment",
															"src": "11188:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11199:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11199:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11204:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11204:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11195:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11195:3:12"
																},
																"nativeSrc": "11195:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11195:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11188:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11188:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10847:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10981:3:12",
														"nodeType": "YulTypedName",
														"src": "10981:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10989:3:12",
														"nodeType": "YulTypedName",
														"src": "10989:3:12",
														"type": ""
													}
												],
												"src": "10847:366:12"
											},
											{
												"body": {
													"nativeSrc": "11390:248:12",
													"nodeType": "YulBlock",
													"src": "11390:248:12",
													"statements": [
														{
															"nativeSrc": "11400:26:12",
															"nodeType": "YulAssignment",
															"src": "11400:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11412:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11412:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11423:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11423:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11408:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11408:3:12"
																},
																"nativeSrc": "11408:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11408:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11400:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11400:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11447:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11447:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11458:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11458:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11443:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11443:3:12"
																		},
																		"nativeSrc": "11443:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11443:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11466:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11466:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11472:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11472:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11462:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11462:3:12"
																		},
																		"nativeSrc": "11462:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11462:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11436:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11436:6:12"
																},
																"nativeSrc": "11436:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11436:47:12"
															},
															"nativeSrc": "11436:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11436:47:12"
														},
														{
															"nativeSrc": "11492:139:12",
															"nodeType": "YulAssignment",
															"src": "11492:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11626:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11626:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11500:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11500:124:12"
																},
																"nativeSrc": "11500:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11500:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11492:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11492:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11219:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11370:9:12",
														"nodeType": "YulTypedName",
														"src": "11370:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11385:4:12",
														"nodeType": "YulTypedName",
														"src": "11385:4:12",
														"type": ""
													}
												],
												"src": "11219:419:12"
											},
											{
												"body": {
													"nativeSrc": "11750:76:12",
													"nodeType": "YulBlock",
													"src": "11750:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11772:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11772:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11780:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11780:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11768:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11768:3:12"
																		},
																		"nativeSrc": "11768:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11768:14:12"
																	},
																	{
																		"hexValue": "526563697069656e74206163636f756e7420697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "11784:34:12",
																		"nodeType": "YulLiteral",
																		"src": "11784:34:12",
																		"type": "",
																		"value": "Recipient account is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11761:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11761:6:12"
																},
																"nativeSrc": "11761:58:12",
																"nodeType": "YulFunctionCall",
																"src": "11761:58:12"
															},
															"nativeSrc": "11761:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "11761:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab",
												"nativeSrc": "11644:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11742:6:12",
														"nodeType": "YulTypedName",
														"src": "11742:6:12",
														"type": ""
													}
												],
												"src": "11644:182:12"
											},
											{
												"body": {
													"nativeSrc": "11978:220:12",
													"nodeType": "YulBlock",
													"src": "11978:220:12",
													"statements": [
														{
															"nativeSrc": "11988:74:12",
															"nodeType": "YulAssignment",
															"src": "11988:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12054:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12054:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12059:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12059:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11995:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11995:58:12"
																},
																"nativeSrc": "11995:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11995:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11988:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11988:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12160:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12160:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab",
																	"nativeSrc": "12071:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12071:88:12"
																},
																"nativeSrc": "12071:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12071:93:12"
															},
															"nativeSrc": "12071:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12071:93:12"
														},
														{
															"nativeSrc": "12173:19:12",
															"nodeType": "YulAssignment",
															"src": "12173:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12184:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12184:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12189:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12189:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12180:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12180:3:12"
																},
																"nativeSrc": "12180:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12180:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12173:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12173:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11832:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11966:3:12",
														"nodeType": "YulTypedName",
														"src": "11966:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11974:3:12",
														"nodeType": "YulTypedName",
														"src": "11974:3:12",
														"type": ""
													}
												],
												"src": "11832:366:12"
											},
											{
												"body": {
													"nativeSrc": "12375:248:12",
													"nodeType": "YulBlock",
													"src": "12375:248:12",
													"statements": [
														{
															"nativeSrc": "12385:26:12",
															"nodeType": "YulAssignment",
															"src": "12385:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12397:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12397:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12408:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12408:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12393:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12393:3:12"
																},
																"nativeSrc": "12393:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12393:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12385:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12385:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12432:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12432:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12443:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12443:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12428:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12428:3:12"
																		},
																		"nativeSrc": "12428:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12428:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12451:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12451:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12457:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12457:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12447:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12447:3:12"
																		},
																		"nativeSrc": "12447:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12447:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12421:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12421:6:12"
																},
																"nativeSrc": "12421:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12421:47:12"
															},
															"nativeSrc": "12421:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12421:47:12"
														},
														{
															"nativeSrc": "12477:139:12",
															"nodeType": "YulAssignment",
															"src": "12477:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12611:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12611:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12485:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12485:124:12"
																},
																"nativeSrc": "12485:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12485:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12477:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12477:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12204:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12355:9:12",
														"nodeType": "YulTypedName",
														"src": "12355:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12370:4:12",
														"nodeType": "YulTypedName",
														"src": "12370:4:12",
														"type": ""
													}
												],
												"src": "12204:419:12"
											},
											{
												"body": {
													"nativeSrc": "12735:70:12",
													"nodeType": "YulBlock",
													"src": "12735:70:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12757:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12757:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12765:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12765:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12753:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12753:3:12"
																		},
																		"nativeSrc": "12753:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12753:14:12"
																	},
																	{
																		"hexValue": "4163636f756e74206973206e6f7420626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "12769:28:12",
																		"nodeType": "YulLiteral",
																		"src": "12769:28:12",
																		"type": "",
																		"value": "Account is not blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12746:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12746:6:12"
																},
																"nativeSrc": "12746:52:12",
																"nodeType": "YulFunctionCall",
																"src": "12746:52:12"
															},
															"nativeSrc": "12746:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "12746:52:12"
														}
													]
												},
												"name": "store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
												"nativeSrc": "12629:176:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12727:6:12",
														"nodeType": "YulTypedName",
														"src": "12727:6:12",
														"type": ""
													}
												],
												"src": "12629:176:12"
											},
											{
												"body": {
													"nativeSrc": "12957:220:12",
													"nodeType": "YulBlock",
													"src": "12957:220:12",
													"statements": [
														{
															"nativeSrc": "12967:74:12",
															"nodeType": "YulAssignment",
															"src": "12967:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13033:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13033:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13038:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13038:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12974:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12974:58:12"
																},
																"nativeSrc": "12974:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12974:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12967:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12967:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13139:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13139:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
																	"nativeSrc": "13050:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13050:88:12"
																},
																"nativeSrc": "13050:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13050:93:12"
															},
															"nativeSrc": "13050:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13050:93:12"
														},
														{
															"nativeSrc": "13152:19:12",
															"nodeType": "YulAssignment",
															"src": "13152:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13163:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13163:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13168:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13168:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13159:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13159:3:12"
																},
																"nativeSrc": "13159:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13159:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13152:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13152:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12811:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12945:3:12",
														"nodeType": "YulTypedName",
														"src": "12945:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12953:3:12",
														"nodeType": "YulTypedName",
														"src": "12953:3:12",
														"type": ""
													}
												],
												"src": "12811:366:12"
											},
											{
												"body": {
													"nativeSrc": "13354:248:12",
													"nodeType": "YulBlock",
													"src": "13354:248:12",
													"statements": [
														{
															"nativeSrc": "13364:26:12",
															"nodeType": "YulAssignment",
															"src": "13364:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13376:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13376:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13387:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13387:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13372:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13372:3:12"
																},
																"nativeSrc": "13372:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13372:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13364:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13364:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13411:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13411:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13422:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13422:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13407:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13407:3:12"
																		},
																		"nativeSrc": "13407:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13407:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13430:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13430:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13436:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13436:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13426:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13426:3:12"
																		},
																		"nativeSrc": "13426:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13426:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13400:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13400:6:12"
																},
																"nativeSrc": "13400:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13400:47:12"
															},
															"nativeSrc": "13400:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13400:47:12"
														},
														{
															"nativeSrc": "13456:139:12",
															"nodeType": "YulAssignment",
															"src": "13456:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13590:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13590:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13464:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13464:124:12"
																},
																"nativeSrc": "13464:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13464:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13456:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13456:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13183:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13334:9:12",
														"nodeType": "YulTypedName",
														"src": "13334:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13349:4:12",
														"nodeType": "YulTypedName",
														"src": "13349:4:12",
														"type": ""
													}
												],
												"src": "13183:419:12"
											},
											{
												"body": {
													"nativeSrc": "13714:65:12",
													"nodeType": "YulBlock",
													"src": "13714:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13736:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13736:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13744:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13744:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13732:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13732:3:12"
																		},
																		"nativeSrc": "13732:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13732:14:12"
																	},
																	{
																		"hexValue": "4163636f756e74206973206e6f742066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "13748:23:12",
																		"nodeType": "YulLiteral",
																		"src": "13748:23:12",
																		"type": "",
																		"value": "Account is not frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13725:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13725:6:12"
																},
																"nativeSrc": "13725:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13725:47:12"
															},
															"nativeSrc": "13725:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13725:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
												"nativeSrc": "13608:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13706:6:12",
														"nodeType": "YulTypedName",
														"src": "13706:6:12",
														"type": ""
													}
												],
												"src": "13608:171:12"
											},
											{
												"body": {
													"nativeSrc": "13931:220:12",
													"nodeType": "YulBlock",
													"src": "13931:220:12",
													"statements": [
														{
															"nativeSrc": "13941:74:12",
															"nodeType": "YulAssignment",
															"src": "13941:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14007:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14007:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14012:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14012:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13948:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13948:58:12"
																},
																"nativeSrc": "13948:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13948:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13941:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13941:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14113:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14113:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
																	"nativeSrc": "14024:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14024:88:12"
																},
																"nativeSrc": "14024:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14024:93:12"
															},
															"nativeSrc": "14024:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14024:93:12"
														},
														{
															"nativeSrc": "14126:19:12",
															"nodeType": "YulAssignment",
															"src": "14126:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14137:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14137:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14142:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14142:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14133:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14133:3:12"
																},
																"nativeSrc": "14133:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14133:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14126:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14126:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13785:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13919:3:12",
														"nodeType": "YulTypedName",
														"src": "13919:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13927:3:12",
														"nodeType": "YulTypedName",
														"src": "13927:3:12",
														"type": ""
													}
												],
												"src": "13785:366:12"
											},
											{
												"body": {
													"nativeSrc": "14328:248:12",
													"nodeType": "YulBlock",
													"src": "14328:248:12",
													"statements": [
														{
															"nativeSrc": "14338:26:12",
															"nodeType": "YulAssignment",
															"src": "14338:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14350:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14350:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14361:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14361:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14346:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14346:3:12"
																},
																"nativeSrc": "14346:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14346:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14338:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14338:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14385:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14385:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14396:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14396:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14381:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14381:3:12"
																		},
																		"nativeSrc": "14381:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14381:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14404:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14404:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14410:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14410:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14400:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14400:3:12"
																		},
																		"nativeSrc": "14400:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14400:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14374:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14374:6:12"
																},
																"nativeSrc": "14374:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14374:47:12"
															},
															"nativeSrc": "14374:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14374:47:12"
														},
														{
															"nativeSrc": "14430:139:12",
															"nodeType": "YulAssignment",
															"src": "14430:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14564:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14564:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14438:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14438:124:12"
																},
																"nativeSrc": "14438:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14438:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14430:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14430:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14157:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14308:9:12",
														"nodeType": "YulTypedName",
														"src": "14308:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14323:4:12",
														"nodeType": "YulTypedName",
														"src": "14323:4:12",
														"type": ""
													}
												],
												"src": "14157:419:12"
											},
											{
												"body": {
													"nativeSrc": "14688:74:12",
													"nodeType": "YulBlock",
													"src": "14688:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14710:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14710:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14718:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14718:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14706:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14706:3:12"
																		},
																		"nativeSrc": "14706:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14706:14:12"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c726561647920626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "14722:32:12",
																		"nodeType": "YulLiteral",
																		"src": "14722:32:12",
																		"type": "",
																		"value": "Account is already blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14699:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14699:6:12"
																},
																"nativeSrc": "14699:56:12",
																"nodeType": "YulFunctionCall",
																"src": "14699:56:12"
															},
															"nativeSrc": "14699:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "14699:56:12"
														}
													]
												},
												"name": "store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
												"nativeSrc": "14582:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14680:6:12",
														"nodeType": "YulTypedName",
														"src": "14680:6:12",
														"type": ""
													}
												],
												"src": "14582:180:12"
											},
											{
												"body": {
													"nativeSrc": "14914:220:12",
													"nodeType": "YulBlock",
													"src": "14914:220:12",
													"statements": [
														{
															"nativeSrc": "14924:74:12",
															"nodeType": "YulAssignment",
															"src": "14924:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14990:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14990:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14995:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14995:2:12",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14931:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14931:58:12"
																},
																"nativeSrc": "14931:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14931:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14924:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14924:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15096:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15096:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
																	"nativeSrc": "15007:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15007:88:12"
																},
																"nativeSrc": "15007:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15007:93:12"
															},
															"nativeSrc": "15007:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15007:93:12"
														},
														{
															"nativeSrc": "15109:19:12",
															"nodeType": "YulAssignment",
															"src": "15109:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15120:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15120:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15125:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15125:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15116:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15116:3:12"
																},
																"nativeSrc": "15116:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15116:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15109:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15109:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14768:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14902:3:12",
														"nodeType": "YulTypedName",
														"src": "14902:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14910:3:12",
														"nodeType": "YulTypedName",
														"src": "14910:3:12",
														"type": ""
													}
												],
												"src": "14768:366:12"
											},
											{
												"body": {
													"nativeSrc": "15311:248:12",
													"nodeType": "YulBlock",
													"src": "15311:248:12",
													"statements": [
														{
															"nativeSrc": "15321:26:12",
															"nodeType": "YulAssignment",
															"src": "15321:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15333:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15333:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15344:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15344:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15329:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15329:3:12"
																},
																"nativeSrc": "15329:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15329:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15321:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15321:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15368:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15368:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15379:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15379:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15364:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15364:3:12"
																		},
																		"nativeSrc": "15364:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15364:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15387:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15387:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15393:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15393:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15383:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15383:3:12"
																		},
																		"nativeSrc": "15383:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15383:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15357:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15357:6:12"
																},
																"nativeSrc": "15357:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15357:47:12"
															},
															"nativeSrc": "15357:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15357:47:12"
														},
														{
															"nativeSrc": "15413:139:12",
															"nodeType": "YulAssignment",
															"src": "15413:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15547:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15547:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15421:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15421:124:12"
																},
																"nativeSrc": "15421:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15421:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15413:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15413:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15140:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15291:9:12",
														"nodeType": "YulTypedName",
														"src": "15291:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15306:4:12",
														"nodeType": "YulTypedName",
														"src": "15306:4:12",
														"type": ""
													}
												],
												"src": "15140:419:12"
											},
											{
												"body": {
													"nativeSrc": "15671:69:12",
													"nodeType": "YulBlock",
													"src": "15671:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15693:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15693:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15701:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15701:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15689:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15689:3:12"
																		},
																		"nativeSrc": "15689:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15689:14:12"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c72656164792066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "15705:27:12",
																		"nodeType": "YulLiteral",
																		"src": "15705:27:12",
																		"type": "",
																		"value": "Account is already frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15682:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15682:6:12"
																},
																"nativeSrc": "15682:51:12",
																"nodeType": "YulFunctionCall",
																"src": "15682:51:12"
															},
															"nativeSrc": "15682:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "15682:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
												"nativeSrc": "15565:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15663:6:12",
														"nodeType": "YulTypedName",
														"src": "15663:6:12",
														"type": ""
													}
												],
												"src": "15565:175:12"
											},
											{
												"body": {
													"nativeSrc": "15892:220:12",
													"nodeType": "YulBlock",
													"src": "15892:220:12",
													"statements": [
														{
															"nativeSrc": "15902:74:12",
															"nodeType": "YulAssignment",
															"src": "15902:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15968:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15968:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15973:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15973:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15909:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15909:58:12"
																},
																"nativeSrc": "15909:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15909:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15902:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15902:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16074:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16074:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
																	"nativeSrc": "15985:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15985:88:12"
																},
																"nativeSrc": "15985:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15985:93:12"
															},
															"nativeSrc": "15985:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15985:93:12"
														},
														{
															"nativeSrc": "16087:19:12",
															"nodeType": "YulAssignment",
															"src": "16087:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16098:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16098:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16103:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16103:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16094:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16094:3:12"
																},
																"nativeSrc": "16094:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16094:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16087:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16087:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15746:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15880:3:12",
														"nodeType": "YulTypedName",
														"src": "15880:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15888:3:12",
														"nodeType": "YulTypedName",
														"src": "15888:3:12",
														"type": ""
													}
												],
												"src": "15746:366:12"
											},
											{
												"body": {
													"nativeSrc": "16289:248:12",
													"nodeType": "YulBlock",
													"src": "16289:248:12",
													"statements": [
														{
															"nativeSrc": "16299:26:12",
															"nodeType": "YulAssignment",
															"src": "16299:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16311:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16311:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16322:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16322:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16307:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16307:3:12"
																},
																"nativeSrc": "16307:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16307:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16299:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16299:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16346:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16346:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16357:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16357:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16342:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16342:3:12"
																		},
																		"nativeSrc": "16342:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16342:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16365:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16365:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16371:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16371:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16361:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16361:3:12"
																		},
																		"nativeSrc": "16361:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16361:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16335:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16335:6:12"
																},
																"nativeSrc": "16335:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16335:47:12"
															},
															"nativeSrc": "16335:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16335:47:12"
														},
														{
															"nativeSrc": "16391:139:12",
															"nodeType": "YulAssignment",
															"src": "16391:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16525:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16525:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16399:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16399:124:12"
																},
																"nativeSrc": "16399:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16399:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16391:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16391:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16118:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16269:9:12",
														"nodeType": "YulTypedName",
														"src": "16269:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16284:4:12",
														"nodeType": "YulTypedName",
														"src": "16284:4:12",
														"type": ""
													}
												],
												"src": "16118:419:12"
											},
											{
												"body": {
													"nativeSrc": "16669:206:12",
													"nodeType": "YulBlock",
													"src": "16669:206:12",
													"statements": [
														{
															"nativeSrc": "16679:26:12",
															"nodeType": "YulAssignment",
															"src": "16679:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16691:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16691:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16702:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16702:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16687:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16687:3:12"
																},
																"nativeSrc": "16687:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16687:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16679:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16679:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16759:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16759:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16772:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16772:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16783:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16783:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16768:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16768:3:12"
																		},
																		"nativeSrc": "16768:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16768:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16715:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16715:43:12"
																},
																"nativeSrc": "16715:71:12",
																"nodeType": "YulFunctionCall",
																"src": "16715:71:12"
															},
															"nativeSrc": "16715:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "16715:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16840:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16840:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16853:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16864:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16864:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16849:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16849:3:12"
																		},
																		"nativeSrc": "16849:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16849:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16796:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16796:43:12"
																},
																"nativeSrc": "16796:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16796:72:12"
															},
															"nativeSrc": "16796:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16796:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "16543:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16633:9:12",
														"nodeType": "YulTypedName",
														"src": "16633:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16645:6:12",
														"nodeType": "YulTypedName",
														"src": "16645:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16653:6:12",
														"nodeType": "YulTypedName",
														"src": "16653:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16664:4:12",
														"nodeType": "YulTypedName",
														"src": "16664:4:12",
														"type": ""
													}
												],
												"src": "16543:332:12"
											},
											{
												"body": {
													"nativeSrc": "16909:152:12",
													"nodeType": "YulBlock",
													"src": "16909:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16926:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16926:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16929:77:12",
																		"nodeType": "YulLiteral",
																		"src": "16929:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16919:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16919:6:12"
																},
																"nativeSrc": "16919:88:12",
																"nodeType": "YulFunctionCall",
																"src": "16919:88:12"
															},
															"nativeSrc": "16919:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "16919:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17023:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17023:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17026:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17026:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17016:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17016:6:12"
																},
																"nativeSrc": "17016:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17016:15:12"
															},
															"nativeSrc": "17016:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17016:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17047:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17047:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17050:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17050:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17040:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17040:6:12"
																},
																"nativeSrc": "17040:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17040:15:12"
															},
															"nativeSrc": "17040:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17040:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "16881:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "16881:180:12"
											},
											{
												"body": {
													"nativeSrc": "17111:147:12",
													"nodeType": "YulBlock",
													"src": "17111:147:12",
													"statements": [
														{
															"nativeSrc": "17121:25:12",
															"nodeType": "YulAssignment",
															"src": "17121:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17144:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17144:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17126:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17126:17:12"
																},
																"nativeSrc": "17126:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17126:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17121:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17121:1:12"
																}
															]
														},
														{
															"nativeSrc": "17155:25:12",
															"nodeType": "YulAssignment",
															"src": "17155:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17178:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17178:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17160:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17160:17:12"
																},
																"nativeSrc": "17160:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17160:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17155:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17155:1:12"
																}
															]
														},
														{
															"nativeSrc": "17189:16:12",
															"nodeType": "YulAssignment",
															"src": "17189:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17200:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17200:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17203:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17203:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17196:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17196:3:12"
																},
																"nativeSrc": "17196:9:12",
																"nodeType": "YulFunctionCall",
																"src": "17196:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17189:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17189:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17229:22:12",
																"nodeType": "YulBlock",
																"src": "17229:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17231:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17231:16:12"
																			},
																			"nativeSrc": "17231:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17231:18:12"
																		},
																		"nativeSrc": "17231:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17231:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17221:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17221:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17224:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17224:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17218:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17218:2:12"
																},
																"nativeSrc": "17218:10:12",
																"nodeType": "YulFunctionCall",
																"src": "17218:10:12"
															},
															"nativeSrc": "17215:36:12",
															"nodeType": "YulIf",
															"src": "17215:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17067:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17098:1:12",
														"nodeType": "YulTypedName",
														"src": "17098:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17101:1:12",
														"nodeType": "YulTypedName",
														"src": "17101:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17107:3:12",
														"nodeType": "YulTypedName",
														"src": "17107:3:12",
														"type": ""
													}
												],
												"src": "17067:191:12"
											},
											{
												"body": {
													"nativeSrc": "17418:288:12",
													"nodeType": "YulBlock",
													"src": "17418:288:12",
													"statements": [
														{
															"nativeSrc": "17428:26:12",
															"nodeType": "YulAssignment",
															"src": "17428:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17440:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17440:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17451:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17451:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17436:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17436:3:12"
																},
																"nativeSrc": "17436:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17436:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17428:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17428:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17508:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17508:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17521:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17521:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17532:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17532:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17517:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17517:3:12"
																		},
																		"nativeSrc": "17517:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17517:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17464:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17464:43:12"
																},
																"nativeSrc": "17464:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17464:71:12"
															},
															"nativeSrc": "17464:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17464:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17589:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17589:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17602:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17602:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17613:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17613:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17598:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17598:3:12"
																		},
																		"nativeSrc": "17598:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17598:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17545:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17545:43:12"
																},
																"nativeSrc": "17545:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17545:72:12"
															},
															"nativeSrc": "17545:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17545:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17671:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17671:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17684:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17684:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17695:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17695:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17680:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17680:3:12"
																		},
																		"nativeSrc": "17680:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17680:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17627:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17627:43:12"
																},
																"nativeSrc": "17627:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17627:72:12"
															},
															"nativeSrc": "17627:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17627:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17264:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17374:9:12",
														"nodeType": "YulTypedName",
														"src": "17374:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17386:6:12",
														"nodeType": "YulTypedName",
														"src": "17386:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17394:6:12",
														"nodeType": "YulTypedName",
														"src": "17394:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17402:6:12",
														"nodeType": "YulTypedName",
														"src": "17402:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17413:4:12",
														"nodeType": "YulTypedName",
														"src": "17413:4:12",
														"type": ""
													}
												],
												"src": "17264:442:12"
											},
											{
												"body": {
													"nativeSrc": "17757:149:12",
													"nodeType": "YulBlock",
													"src": "17757:149:12",
													"statements": [
														{
															"nativeSrc": "17767:25:12",
															"nodeType": "YulAssignment",
															"src": "17767:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17790:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17790:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17772:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17772:17:12"
																},
																"nativeSrc": "17772:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17772:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17767:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17767:1:12"
																}
															]
														},
														{
															"nativeSrc": "17801:25:12",
															"nodeType": "YulAssignment",
															"src": "17801:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17824:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17824:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17806:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17806:17:12"
																},
																"nativeSrc": "17806:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17806:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17801:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17801:1:12"
																}
															]
														},
														{
															"nativeSrc": "17835:17:12",
															"nodeType": "YulAssignment",
															"src": "17835:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17847:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17847:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17850:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17850:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17843:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17843:3:12"
																},
																"nativeSrc": "17843:9:12",
																"nodeType": "YulFunctionCall",
																"src": "17843:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "17835:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17835:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17877:22:12",
																"nodeType": "YulBlock",
																"src": "17877:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17879:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17879:16:12"
																			},
																			"nativeSrc": "17879:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17879:18:12"
																		},
																		"nativeSrc": "17879:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17879:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "17868:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17868:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "17874:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17874:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17865:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17865:2:12"
																},
																"nativeSrc": "17865:11:12",
																"nodeType": "YulFunctionCall",
																"src": "17865:11:12"
															},
															"nativeSrc": "17862:37:12",
															"nodeType": "YulIf",
															"src": "17862:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "17712:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17743:1:12",
														"nodeType": "YulTypedName",
														"src": "17743:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17746:1:12",
														"nodeType": "YulTypedName",
														"src": "17746:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "17752:4:12",
														"nodeType": "YulTypedName",
														"src": "17752:4:12",
														"type": ""
													}
												],
												"src": "17712:194:12"
											},
											{
												"body": {
													"nativeSrc": "17940:152:12",
													"nodeType": "YulBlock",
													"src": "17940:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17957:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17957:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17960:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17960:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17950:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17950:6:12"
																},
																"nativeSrc": "17950:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17950:88:12"
															},
															"nativeSrc": "17950:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17950:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18054:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18054:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18057:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18057:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18047:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18047:6:12"
																},
																"nativeSrc": "18047:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18047:15:12"
															},
															"nativeSrc": "18047:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18047:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18078:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18078:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18081:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18081:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18071:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18071:6:12"
																},
																"nativeSrc": "18071:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18071:15:12"
															},
															"nativeSrc": "18071:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18071:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17912:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17912:180:12"
											},
											{
												"body": {
													"nativeSrc": "18126:152:12",
													"nodeType": "YulBlock",
													"src": "18126:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18143:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18143:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18146:77:12",
																		"nodeType": "YulLiteral",
																		"src": "18146:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18136:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18136:6:12"
																},
																"nativeSrc": "18136:88:12",
																"nodeType": "YulFunctionCall",
																"src": "18136:88:12"
															},
															"nativeSrc": "18136:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "18136:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18240:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18240:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18243:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18243:4:12",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18233:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18233:6:12"
																},
																"nativeSrc": "18233:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18233:15:12"
															},
															"nativeSrc": "18233:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18233:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18264:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18264:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18267:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18267:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18257:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18257:6:12"
																},
																"nativeSrc": "18257:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18257:15:12"
															},
															"nativeSrc": "18257:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18257:15:12"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "18098:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "18098:180:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender account is frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Recipient account is frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender account is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Recipient account is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is not blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is not frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is already blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is already frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610251575f3560e01c806370a0823111610144578063a217fddf116100c1578063d539139311610085578063d5391393146106b7578063d547741f146106d5578063dd62ed3e146106f1578063f26c159f14610721578063f2fde38b1461073d578063f44637ba1461075957610251565b8063a217fddf14610615578063a9059cbb14610633578063c2134b2314610663578063d1c2de0a1461067f578063d37b34d71461069b57610251565b8063939bcbc911610108578063939bcbc91461058557806395d89b41146105a3578063974b368c146105c1578063983b2d56146105dd5780639dc29fac146105f957610251565b806370a08231146104e1578063715018a614610511578063788649ea1461051b5780638da5cb5b1461053757806391d148541461055557610251565b80632acd2000116101d257806340c10f191161019657806340c10f1914610451578063410b24241461046d578063526606c91461048b578063537df3b6146104a757806363f15649146104c357610251565b80632acd2000146103c35780632f2ff15d146103df5780633092afd5146103fb578063313ce5671461041757806336568abe1461043557610251565b806318160ddd1161021957806318160ddd1461030b5780631ec82cb81461032957806323b872dd14610345578063248a9ca314610375578063282c51f3146103a557610251565b806301ffc9a714610255578063028468581461028557806306fdde03146102a1578063095ea7b3146102bf5780630eff2afc146102ef575b5f80fd5b61026f600480360381019061026a91906121c2565b610775565b60405161027c9190612207565b60405180910390f35b61029f600480360381019061029a919061227a565b6107ee565b005b6102a9610823565b6040516102b69190612315565b60405180910390f35b6102d960048036038101906102d49190612368565b6108b3565b6040516102e69190612207565b60405180910390f35b6103096004803603810190610304919061227a565b6108d5565b005b61031361090a565b60405161032091906123b5565b60405180910390f35b610343600480360381019061033e91906123ce565b610913565b005b61035f600480360381019061035a91906123ce565b61094e565b60405161036c9190612207565b60405180910390f35b61038f600480360381019061038a9190612451565b610ab3565b60405161039c919061248b565b60405180910390f35b6103ad610ad0565b6040516103ba919061248b565b60405180910390f35b6103dd60048036038101906103d8919061227a565b610af4565b005b6103f960048036038101906103f491906124a4565b610b29565b005b6104156004803603810190610410919061227a565b610b4b565b005b61041f610b80565b60405161042c91906124fd565b60405180910390f35b61044f600480360381019061044a91906124a4565b610b88565b005b61046b60048036038101906104669190612368565b610c03565b005b610475610c3c565b604051610482919061248b565b60405180910390f35b6104a560048036038101906104a0919061227a565b610c60565b005b6104c160048036038101906104bc919061227a565b610c95565b005b6104cb610d2b565b6040516104d8919061248b565b60405180910390f35b6104fb60048036038101906104f6919061227a565b610d4f565b60405161050891906123b5565b60405180910390f35b610519610d94565b005b6105356004803603810190610530919061227a565b610da7565b005b61053f610e3d565b60405161054c9190612525565b60405180910390f35b61056f600480360381019061056a91906124a4565b610e65565b60405161057c9190612207565b60405180910390f35b61058d610ec9565b60405161059a919061248b565b60405180910390f35b6105ab610eed565b6040516105b89190612315565b60405180910390f35b6105db60048036038101906105d6919061227a565b610f7d565b005b6105f760048036038101906105f2919061227a565b610fb2565b005b610613600480360381019061060e9190612368565b610fe7565b005b61061d611020565b60405161062a919061248b565b60405180910390f35b61064d60048036038101906106489190612368565b611026565b60405161065a9190612207565b60405180910390f35b61067d6004803603810190610678919061227a565b611189565b005b6106996004803603810190610694919061227a565b6111be565b005b6106b560048036038101906106b0919061227a565b6111f3565b005b6106bf61128a565b6040516106cc919061248b565b60405180910390f35b6106ef60048036038101906106ea91906124a4565b6112ae565b005b61070b6004803603810190610706919061253e565b6112d0565b60405161071891906123b5565b60405180910390f35b61073b6004803603810190610736919061227a565b611352565b005b6107576004803603810190610752919061227a565b6113e9565b005b610773600480360381019061076e919061227a565b61146d565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107e757506107e6826114a2565b5b9050919050565b6107f661150b565b6108207f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848826112ae565b50565b606060038054610832906125a9565b80601f016020809104026020016040519081016040528092919081815260200182805461085e906125a9565b80156108a95780601f10610880576101008083540402835291602001916108a9565b820191905f5260205f20905b81548152906001019060200180831161088c57829003601f168201915b5050505050905090565b5f806108bd611592565b90506108ca818585611599565b600191505092915050565b6108dd61150b565b6109077ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee82610b29565b50565b5f600254905090565b7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e06661093d816115ab565b6109488484846115bf565b50505050565b5f6109638460076116af90919063ffffffff16565b156109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a90612623565b60405180910390fd5b6109b78360076116af90919063ffffffff16565b156109f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ee9061268b565b60405180910390fd5b610a0b8460096116af90919063ffffffff16565b15610a4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a42906126f3565b60405180910390fd5b610a5f8360096116af90919063ffffffff16565b15610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a969061275b565b60405180910390fd5b610aaa8484846116dc565b90509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b610afc61150b565b610b267f109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35826112ae565b50565b610b3282610ab3565b610b3b816115ab565b610b45838361170a565b50505050565b610b5361150b565b610b7d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826112ae565b50565b5f6012905090565b610b90611592565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bf4576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bfe82826117f4565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610c2d816115ab565b610c3783836118de565b505050565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee81565b610c6861150b565b610c927f109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b3582610b29565b50565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee610cbf816115ab565b610cd38260096116af90919063ffffffff16565b610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d09906127c3565b60405180910390fd5b610d2682600961195d90919063ffffffff16565b505050565b7f109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b3581565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610d9c61150b565b610da55f61198a565b565b7f109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35610dd1816115ab565b610de58260076116af90919063ffffffff16565b610e24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1b9061282b565b60405180910390fd5b610e3882600761195d90919063ffffffff16565b505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e06681565b606060048054610efc906125a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610f28906125a9565b8015610f735780601f10610f4a57610100808354040283529160200191610f73565b820191905f5260205f20905b815481529060010190602001808311610f5657829003601f168201915b5050505050905090565b610f8561150b565b610faf7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee826112ae565b50565b610fba61150b565b610fe47f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682610b29565b50565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848611011816115ab565b61101b8383611a4d565b505050565b5f801b81565b5f61103b3360076116af90919063ffffffff16565b1561107b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107290612623565b60405180910390fd5b61108f8360076116af90919063ffffffff16565b156110cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c69061268b565b60405180910390fd5b6110e33360096116af90919063ffffffff16565b15611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111a906126f3565b60405180910390fd5b6111378360096116af90919063ffffffff16565b15611177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116e9061275b565b60405180910390fd5b6111818383611acc565b905092915050565b61119161150b565b6111bb7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e06682610b29565b50565b6111c661150b565b6111f07f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066826112ae565b50565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee61121d816115ab565b6112318260096116af90919063ffffffff16565b15611271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126890612893565b60405180910390fd5b611285826009611aee90919063ffffffff16565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6112b782610ab3565b6112c0816115ab565b6112ca83836117f4565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b3561137c816115ab565b6113908260076116af90919063ffffffff16565b156113d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c7906128fb565b60405180910390fd5b6113e4826007611aee90919063ffffffff16565b505050565b6113f161150b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611461575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114589190612525565b60405180910390fd5b61146a8161198a565b50565b61147561150b565b61149f7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84882610b29565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611513611592565b73ffffffffffffffffffffffffffffffffffffffff16611531610e3d565b73ffffffffffffffffffffffffffffffffffffffff161461159057611554611592565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115879190612525565b60405180910390fd5b565b5f33905090565b6115a68383836001611b1b565b505050565b6115bc816115b7611592565b611cea565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361162f575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116269190612525565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361169f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116969190612525565b60405180910390fd5b6116aa838383611d3b565b505050565b5f6116d4835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611f54565b905092915050565b5f806116e6611592565b90506116f3858285611f74565b6116fe8585856115bf565b60019150509392505050565b5f6117158383610e65565b6117ea57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611787611592565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506117ee565b5f90505b92915050565b5f6117ff8383610e65565b156118d4575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611871611592565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506118d8565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361194e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119459190612525565b60405180910390fd5b6119595f8383611d3b565b5050565b5f611982835f018373ffffffffffffffffffffffffffffffffffffffff165f1b612006565b905092915050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611abd575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611ab49190612525565b60405180910390fd5b611ac8825f83611d3b565b5050565b5f80611ad6611592565b9050611ae38185856115bf565b600191505092915050565b5f611b13835f018373ffffffffffffffffffffffffffffffffffffffff165f1b612102565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b8b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611b829190612525565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bfb575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611bf29190612525565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611ce4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611cdb91906123b5565b60405180910390a35b50505050565b611cf48282610e65565b611d375780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611d2e929190612919565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d8b578060025f828254611d7f919061296d565b92505081905550611e59565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611e14578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611e0b939291906129a0565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ea0578060025f8282540392505081905550611eea565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f4791906123b5565b60405180910390a3505050565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f611f7f84846112d0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146120005781811015611ff1578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611fe8939291906129a0565b60405180910390fd5b611fff84848484035f611b1b565b5b50505050565b5f80836001015f8481526020019081526020015f205490505f81146120f7575f60018261203391906129d5565b90505f6001865f018054905061204991906129d5565b90508082146120af575f865f01828154811061206857612067612a08565b5b905f5260205f200154905080875f01848154811061208957612088612a08565b5b905f5260205f20018190555083876001015f8381526020019081526020015f2081905550505b855f018054806120c2576120c1612a35565b5b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f9055600193505050506120fc565b5f9150505b92915050565b5f61210d8383611f54565b61215f57825f0182908060018154018082558091505060019003905f5260205f20015f9091909190915055825f0180549050836001015f8481526020019081526020015f208190555060019050612163565b5f90505b92915050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6121a18161216d565b81146121ab575f80fd5b50565b5f813590506121bc81612198565b92915050565b5f602082840312156121d7576121d6612169565b5b5f6121e4848285016121ae565b91505092915050565b5f8115159050919050565b612201816121ed565b82525050565b5f60208201905061221a5f8301846121f8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61224982612220565b9050919050565b6122598161223f565b8114612263575f80fd5b50565b5f8135905061227481612250565b92915050565b5f6020828403121561228f5761228e612169565b5b5f61229c84828501612266565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6122e7826122a5565b6122f181856122af565b93506123018185602086016122bf565b61230a816122cd565b840191505092915050565b5f6020820190508181035f83015261232d81846122dd565b905092915050565b5f819050919050565b61234781612335565b8114612351575f80fd5b50565b5f813590506123628161233e565b92915050565b5f806040838503121561237e5761237d612169565b5b5f61238b85828601612266565b925050602061239c85828601612354565b9150509250929050565b6123af81612335565b82525050565b5f6020820190506123c85f8301846123a6565b92915050565b5f805f606084860312156123e5576123e4612169565b5b5f6123f286828701612266565b935050602061240386828701612266565b925050604061241486828701612354565b9150509250925092565b5f819050919050565b6124308161241e565b811461243a575f80fd5b50565b5f8135905061244b81612427565b92915050565b5f6020828403121561246657612465612169565b5b5f6124738482850161243d565b91505092915050565b6124858161241e565b82525050565b5f60208201905061249e5f83018461247c565b92915050565b5f80604083850312156124ba576124b9612169565b5b5f6124c78582860161243d565b92505060206124d885828601612266565b9150509250929050565b5f60ff82169050919050565b6124f7816124e2565b82525050565b5f6020820190506125105f8301846124ee565b92915050565b61251f8161223f565b82525050565b5f6020820190506125385f830184612516565b92915050565b5f806040838503121561255457612553612169565b5b5f61256185828601612266565b925050602061257285828601612266565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806125c057607f821691505b6020821081036125d3576125d261257c565b5b50919050565b7f53656e646572206163636f756e742069732066726f7a656e00000000000000005f82015250565b5f61260d6018836122af565b9150612618826125d9565b602082019050919050565b5f6020820190508181035f83015261263a81612601565b9050919050565b7f526563697069656e74206163636f756e742069732066726f7a656e00000000005f82015250565b5f612675601b836122af565b915061268082612641565b602082019050919050565b5f6020820190508181035f8301526126a281612669565b9050919050565b7f53656e646572206163636f756e7420697320626c61636b6c69737465640000005f82015250565b5f6126dd601d836122af565b91506126e8826126a9565b602082019050919050565b5f6020820190508181035f83015261270a816126d1565b9050919050565b7f526563697069656e74206163636f756e7420697320626c61636b6c69737465645f82015250565b5f6127456020836122af565b915061275082612711565b602082019050919050565b5f6020820190508181035f83015261277281612739565b9050919050565b7f4163636f756e74206973206e6f7420626c61636b6c69737465640000000000005f82015250565b5f6127ad601a836122af565b91506127b882612779565b602082019050919050565b5f6020820190508181035f8301526127da816127a1565b9050919050565b7f4163636f756e74206973206e6f742066726f7a656e00000000000000000000005f82015250565b5f6128156015836122af565b9150612820826127e1565b602082019050919050565b5f6020820190508181035f83015261284281612809565b9050919050565b7f4163636f756e7420697320616c726561647920626c61636b6c697374656400005f82015250565b5f61287d601e836122af565b915061288882612849565b602082019050919050565b5f6020820190508181035f8301526128aa81612871565b9050919050565b7f4163636f756e7420697320616c72656164792066726f7a656e000000000000005f82015250565b5f6128e56019836122af565b91506128f0826128b1565b602082019050919050565b5f6020820190508181035f830152612912816128d9565b9050919050565b5f60408201905061292c5f830185612516565b612939602083018461247c565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61297782612335565b915061298283612335565b925082820190508082111561299a57612999612940565b5b92915050565b5f6060820190506129b35f830186612516565b6129c060208301856123a6565b6129cd60408301846123a6565b949350505050565b5f6129df82612335565b91506129ea83612335565b9250828203905081811115612a0257612a01612940565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea26469706673582212209c26cc67ef99f195020f6087d9e61d1bb3d80c84a11a7f1c70f958753d6279a464736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x251 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xF26C159F EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0xF44637BA EQ PUSH2 0x759 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xC2134B23 EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0xD1C2DE0A EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xD37B34D7 EQ PUSH2 0x69B JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x939BCBC9 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x939BCBC9 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0x974B368C EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x5F9 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x788649EA EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x555 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x2ACD2000 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x410B2424 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x526606C9 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x63F15649 EQ PUSH2 0x4C3 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x2ACD2000 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x435 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x1EC82CB8 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x3A5 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x2846858 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xEFF2AFC EQ PUSH2 0x2EF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x8D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x313 PUSH2 0x90A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x23CE JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x23CE JUMP JUMPDEST PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x2451 JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0xB29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xB4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41F PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0xB88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x475 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xC95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CB PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x519 PUSH2 0xD94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x535 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x530 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xDA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x53F PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AB PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xF7D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0xFB2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x613 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH2 0xFE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61D PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x1189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x11BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x11F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6BF PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0x12AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x1352 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x757 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x13E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x773 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x146D JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x7E7 JUMPI POP PUSH2 0x7E6 DUP3 PUSH2 0x14A2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F6 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x820 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0x12AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x832 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x85E SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x880 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8BD PUSH2 0x1592 JUMP JUMPDEST SWAP1 POP PUSH2 0x8CA DUP2 DUP6 DUP6 PUSH2 0x1599 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8DD PUSH2 0x150B JUMP JUMPDEST PUSH2 0x907 PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP3 PUSH2 0xB29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 PUSH2 0x93D DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x948 DUP5 DUP5 DUP5 PUSH2 0x15BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x963 DUP5 PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B7 DUP4 PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EE SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0B DUP5 PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA42 SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5F DUP4 PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP1 PUSH2 0x275B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAAA DUP5 DUP5 DUP5 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0xAFC PUSH2 0x150B JUMP JUMPDEST PUSH2 0xB26 PUSH32 0x109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35 DUP3 PUSH2 0x12AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB32 DUP3 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xB3B DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0xB45 DUP4 DUP4 PUSH2 0x170A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB53 PUSH2 0x150B JUMP JUMPDEST PUSH2 0xB7D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x12AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB90 PUSH2 0x1592 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE DUP3 DUP3 PUSH2 0x17F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xC2D DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0xC37 DUP4 DUP4 PUSH2 0x18DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP2 JUMP JUMPDEST PUSH2 0xC68 PUSH2 0x150B JUMP JUMPDEST PUSH2 0xC92 PUSH32 0x109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35 DUP3 PUSH2 0xB29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE PUSH2 0xCBF DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0xCD3 DUP3 PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD09 SWAP1 PUSH2 0x27C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD26 DUP3 PUSH1 0x9 PUSH2 0x195D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9C PUSH2 0x150B JUMP JUMPDEST PUSH2 0xDA5 PUSH0 PUSH2 0x198A JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35 PUSH2 0xDD1 DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0xDE5 DUP3 PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1B SWAP1 PUSH2 0x282B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE38 DUP3 PUSH1 0x7 PUSH2 0x195D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xEFC SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF28 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF73 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF4A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF73 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF56 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF85 PUSH2 0x150B JUMP JUMPDEST PUSH2 0xFAF PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP3 PUSH2 0x12AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFBA PUSH2 0x150B JUMP JUMPDEST PUSH2 0xFE4 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0xB29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x1011 DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x101B DUP4 DUP4 PUSH2 0x1A4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x103B CALLER PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x107B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1072 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108F DUP4 PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x10CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E3 CALLER PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111A SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1137 DUP4 PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116E SWAP1 PUSH2 0x275B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1181 DUP4 DUP4 PUSH2 0x1ACC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1191 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x11BB PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP3 PUSH2 0xB29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x11C6 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x11F0 PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP3 PUSH2 0x12AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE PUSH2 0x121D DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x1231 DUP3 PUSH1 0x9 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1268 SWAP1 PUSH2 0x2893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1285 DUP3 PUSH1 0x9 PUSH2 0x1AEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x12B7 DUP3 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x12C0 DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x12CA DUP4 DUP4 PUSH2 0x17F4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35 PUSH2 0x137C DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x1390 DUP3 PUSH1 0x7 PUSH2 0x16AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C7 SWAP1 PUSH2 0x28FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E4 DUP3 PUSH1 0x7 PUSH2 0x1AEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13F1 PUSH2 0x150B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1461 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1458 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x146A DUP2 PUSH2 0x198A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1475 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x149F PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0xB29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1513 PUSH2 0x1592 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1531 PUSH2 0xE3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1590 JUMPI PUSH2 0x1554 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1587 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15A6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x15BC DUP2 PUSH2 0x15B7 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x1CEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x162F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1626 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x169F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1696 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16AA DUP4 DUP4 DUP4 PUSH2 0x1D3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16D4 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1F54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x16E6 PUSH2 0x1592 JUMP JUMPDEST SWAP1 POP PUSH2 0x16F3 DUP6 DUP3 DUP6 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0x16FE DUP6 DUP6 DUP6 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1715 DUP4 DUP4 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x17EA JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1787 PUSH2 0x1592 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x17EE JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17FF DUP4 DUP4 PUSH2 0xE65 JUMP JUMPDEST ISZERO PUSH2 0x18D4 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1871 PUSH2 0x1592 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x18D8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x194E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1945 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1959 PUSH0 DUP4 DUP4 PUSH2 0x1D3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1982 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x2006 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ABD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB4 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AC8 DUP3 PUSH0 DUP4 PUSH2 0x1D3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1AD6 PUSH2 0x1592 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE3 DUP2 DUP6 DUP6 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B13 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x2102 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B82 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BFB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF2 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1CE4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CDB SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1CF4 DUP3 DUP3 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x1D37 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2E SWAP3 SWAP2 SWAP1 PUSH2 0x2919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D8B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D7F SWAP2 SWAP1 PUSH2 0x296D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E59 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1E14 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EA0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EEA JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F47 SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7F DUP5 DUP5 PUSH2 0x12D0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x2000 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1FF1 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FFF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1B1B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x20F7 JUMPI PUSH0 PUSH1 0x1 DUP3 PUSH2 0x2033 SWAP2 SWAP1 PUSH2 0x29D5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP7 PUSH0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x2049 SWAP2 SWAP1 PUSH2 0x29D5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x20AF JUMPI PUSH0 DUP7 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2068 JUMPI PUSH2 0x2067 PUSH2 0x2A08 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2089 JUMPI PUSH2 0x2088 PUSH2 0x2A08 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH0 ADD DUP1 SLOAD DUP1 PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x2A35 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x20FC JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x210D DUP4 DUP4 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x215F JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2163 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A1 DUP2 PUSH2 0x216D JUMP JUMPDEST DUP2 EQ PUSH2 0x21AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21BC DUP2 PUSH2 0x2198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D7 JUMPI PUSH2 0x21D6 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E4 DUP5 DUP3 DUP6 ADD PUSH2 0x21AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2201 DUP2 PUSH2 0x21ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x221A PUSH0 DUP4 ADD DUP5 PUSH2 0x21F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2249 DUP3 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2259 DUP2 PUSH2 0x223F JUMP JUMPDEST DUP2 EQ PUSH2 0x2263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2274 DUP2 PUSH2 0x2250 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228F JUMPI PUSH2 0x228E PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x229C DUP5 DUP3 DUP6 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22E7 DUP3 PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x22F1 DUP2 DUP6 PUSH2 0x22AF JUMP JUMPDEST SWAP4 POP PUSH2 0x2301 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22BF JUMP JUMPDEST PUSH2 0x230A DUP2 PUSH2 0x22CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232D DUP2 DUP5 PUSH2 0x22DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2347 DUP2 PUSH2 0x2335 JUMP JUMPDEST DUP2 EQ PUSH2 0x2351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2362 DUP2 PUSH2 0x233E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x237E JUMPI PUSH2 0x237D PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x238B DUP6 DUP3 DUP7 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x239C DUP6 DUP3 DUP7 ADD PUSH2 0x2354 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x23AF DUP2 PUSH2 0x2335 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x23A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23E5 JUMPI PUSH2 0x23E4 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F2 DUP7 DUP3 DUP8 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2403 DUP7 DUP3 DUP8 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2414 DUP7 DUP3 DUP8 ADD PUSH2 0x2354 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2430 DUP2 PUSH2 0x241E JUMP JUMPDEST DUP2 EQ PUSH2 0x243A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x244B DUP2 PUSH2 0x2427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2466 JUMPI PUSH2 0x2465 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2473 DUP5 DUP3 DUP6 ADD PUSH2 0x243D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2485 DUP2 PUSH2 0x241E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x249E PUSH0 DUP4 ADD DUP5 PUSH2 0x247C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24BA JUMPI PUSH2 0x24B9 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24C7 DUP6 DUP3 DUP7 ADD PUSH2 0x243D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24D8 DUP6 DUP3 DUP7 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24F7 DUP2 PUSH2 0x24E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2510 PUSH0 DUP4 ADD DUP5 PUSH2 0x24EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x251F DUP2 PUSH2 0x223F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2538 PUSH0 DUP4 ADD DUP5 PUSH2 0x2516 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2554 JUMPI PUSH2 0x2553 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2561 DUP6 DUP3 DUP7 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2572 DUP6 DUP3 DUP7 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25D3 JUMPI PUSH2 0x25D2 PUSH2 0x257C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206163636F756E742069732066726F7A656E0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x260D PUSH1 0x18 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2618 DUP3 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x263A DUP2 PUSH2 0x2601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E74206163636F756E742069732066726F7A656E0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2675 PUSH1 0x1B DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2680 DUP3 PUSH2 0x2641 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26A2 DUP2 PUSH2 0x2669 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206163636F756E7420697320626C61636B6C6973746564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26DD PUSH1 0x1D DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x26E8 DUP3 PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x270A DUP2 PUSH2 0x26D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E74206163636F756E7420697320626C61636B6C6973746564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2745 PUSH1 0x20 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2750 DUP3 PUSH2 0x2711 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2772 DUP2 PUSH2 0x2739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F7420626C61636B6C6973746564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27AD PUSH1 0x1A DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x27B8 DUP3 PUSH2 0x2779 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27DA DUP2 PUSH2 0x27A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F742066726F7A656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2815 PUSH1 0x15 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2820 DUP3 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2842 DUP2 PUSH2 0x2809 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C726561647920626C61636B6C69737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x287D PUSH1 0x1E DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2888 DUP3 PUSH2 0x2849 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28AA DUP2 PUSH2 0x2871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C72656164792066726F7A656E00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28E5 PUSH1 0x19 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x28F0 DUP3 PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2912 DUP2 PUSH2 0x28D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x292C PUSH0 DUP4 ADD DUP6 PUSH2 0x2516 JUMP JUMPDEST PUSH2 0x2939 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x247C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2977 DUP3 PUSH2 0x2335 JUMP JUMPDEST SWAP2 POP PUSH2 0x2982 DUP4 PUSH2 0x2335 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x299A JUMPI PUSH2 0x2999 PUSH2 0x2940 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29B3 PUSH0 DUP4 ADD DUP7 PUSH2 0x2516 JUMP JUMPDEST PUSH2 0x29C0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x29CD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23A6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29DF DUP3 PUSH2 0x2335 JUMP JUMPDEST SWAP2 POP PUSH2 0x29EA DUP4 PUSH2 0x2335 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A02 JUMPI PUSH2 0x2A01 PUSH2 0x2940 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0x26 0xCC PUSH8 0xEF99F195020F6087 0xD9 0xE6 SAR SHL 0xB3 0xD8 0xC DUP5 LOG1 BYTE PUSH32 0x1C70F958753D6279A464736F6C63430008190033000000000000000000000000 ",
							"sourceMap": "314:6305:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5251:109:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5847:126:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3179:184:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4035:540;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;541:62:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5642:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4885:109:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1378:109:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;695:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5444:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2816:229;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;610:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;:::i;:::-;;2100:207:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;786:64:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6060:130:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4704:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1537:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3437:520:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6267:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6453:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2508:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;472:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1818:207:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5070:105:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;5251:109:11:-;1531:13:2;:11;:13::i;:::-;5320:32:11::1;579:24;5344:7;5320:10;:32::i;:::-;5251:109:::0;:::o;2074:89:4:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;5847:126:11:-;1531:13:2;:11;:13::i;:::-;5923:42:11::1;744:35;5957:7;5923:9;:42::i;:::-;5847:126:::0;:::o;3144:97:4:-;3196:7;3222:12;;3215:19;;3144:97;:::o;3179:184:11:-;825:25;2464:16:0;2475:4;2464:10;:16::i;:::-;3281:27:11::1;3291:4;3297:2;3301:6;3281:9;:27::i;:::-;3179:184:::0;;;;:::o;4035:540::-;4124:4;4150:29;4174:4;4150:14;:23;;:29;;;;:::i;:::-;4149:30;4141:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4228:27;4252:2;4228:14;:23;;:27;;;;:::i;:::-;4227:28;4219:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4307:34;4336:4;4307:19;:28;;:34;;;;:::i;:::-;4306:35;4298:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4395:32;4424:2;4395:19;:28;;:32;;;;:::i;:::-;4394:33;4386:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;4484:36;4503:4;4509:2;4513:6;4484:18;:36::i;:::-;4477:43;;4035:540;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;541:62:11:-;579:24;541:62;:::o;5642:118::-;1531:13:2;:11;:13::i;:::-;5712:40:11::1;656:32;5744:7;5712:10;:40::i;:::-;5642:118:::0;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;4885:109:11:-;1531:13:2;:11;:13::i;:::-;4954:32:11::1;510:24;4978:7;4954:10;:32::i;:::-;4885:109:::0;:::o;3002:82:4:-;3051:5;3075:2;3068:9;;3002:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1378:109:11:-;510:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1462:17:11::1;1468:2;1472:6;1462:5;:17::i;:::-;1378:109:::0;;;:::o;695:84::-;744:35;695:84;:::o;5444:114::-;1531:13:2;:11;:13::i;:::-;5511:39:11::1;656:32;5542:7;5511:9;:39::i;:::-;5444:114:::0;:::o;2816:229::-;744:35;2464:16:0;2475:4;2464:10;:16::i;:::-;2923:37:11::1;2952:7;2923:19;:28;;:37;;;;:::i;:::-;2915:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3002:35;3029:7;3002:19;:26;;:35;;;;:::i;:::-;;2816:229:::0;;:::o;610:78::-;656:32;610:78;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2100:207:11:-;656:32;2464:16:0;2475:4;2464:10;:16::i;:::-;2200:32:11::1;2224:7;2200:14;:23;;:32;;;;:::i;:::-;2192:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2269:30;2291:7;2269:14;:21;;:30;;;;:::i;:::-;;2100:207:::0;;:::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;786:64:11:-;825:25;786:64;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;6060:130:11:-;1531:13:2;:11;:13::i;:::-;6139:43:11::1;744:35;6174:7;6139:10;:43::i;:::-;6060:130:::0;:::o;4704:105::-;1531:13:2;:11;:13::i;:::-;4770:31:11::1;510:24;4793:7;4770:9;:31::i;:::-;4704:105:::0;:::o;1537:113::-;579:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1623:19:11::1;1629:4;1635:6;1623:5;:19::i;:::-;1537:113:::0;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3437:520:11:-;3508:4;3534:35;3558:10;3534:14;:23;;:35;;;;:::i;:::-;3533:36;3525:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3618:27;3642:2;3618:14;:23;;:27;;;;:::i;:::-;3617:28;3609:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3697:40;3726:10;3697:19;:28;;:40;;;;:::i;:::-;3696:41;3688:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3791:32;3820:2;3791:19;:28;;:32;;;;:::i;:::-;3790:33;3782:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3880:26;3895:2;3899:6;3880:14;:26::i;:::-;3873:33;;3437:520;;;;:::o;6267:109::-;1531:13:2;:11;:13::i;:::-;6336:32:11::1;825:25;6360:7;6336:9;:32::i;:::-;6267:109:::0;:::o;6453:113::-;1531:13:2;:11;:13::i;:::-;6525:33:11::1;825:25;6550:7;6525:10;:33::i;:::-;6453:113:::0;:::o;2508:228::-;744:35;2464:16:0;2475:4;2464:10;:16::i;:::-;2613:37:11::1;2642:7;2613:19;:28;;:37;;;;:::i;:::-;2612:38;2604:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2696:32;2720:7;2696:19;:23;;:32;;;;:::i;:::-;;2508:228:::0;;:::o;472:62::-;510:24;472:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1818:207:11:-;656:32;2464:16:0;2475:4;2464:10;:16::i;:::-;1917:32:11::1;1941:7;1917:14;:23;;:32;;;;:::i;:::-;1916:33;1908:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1990:27;2009:7;1990:14;:18;;:27;;;;:::i;:::-;;1818:207:::0;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;5070:105:11:-;1531:13:2;:11;:13::i;:::-;5136:31:11::1;579:24;5159:7;5136:9;:31::i;:::-;5070:105:::0;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;5656:300:4:-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;8871:165:10:-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;:55::i;:::-;8967:62;;8871:165;;;;:::o;5039:244:4:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8634:156:10:-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;2912:187:2:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8247:206:4:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;8316:150:10:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;9949:432:4:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;6271:1107:4:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4264:129:10:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;10663:477:4:-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;2815:1368:10:-;2881:4;2991:16;3010:3;:14;;:21;3025:5;3010:21;;;;;;;;;;;;2991:40;;3058:1;3046:8;:13;3042:1135;;3413:18;3445:1;3434:8;:12;;;;:::i;:::-;3413:33;;3460:17;3501:1;3480:3;:11;;:18;;;;:22;;;;:::i;:::-;3460:42;;3535:9;3521:10;:23;3517:378;;3564:17;3584:3;:11;;3596:9;3584:22;;;;;;;;:::i;:::-;;;;;;;;;;3564:42;;3731:9;3705:3;:11;;3717:10;3705:23;;;;;;;;:::i;:::-;;;;;;;;;:35;;;;3872:8;3844:3;:14;;:25;3859:9;3844:25;;;;;;;;;;;:36;;;;3546:349;3517:378;3973:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4076:3;:14;;:21;4091:5;4076:21;;;;;;;;;;;4069:28;;;4119:4;4112:11;;;;;;;3042:1135;4161:5;4154:12;;;2815:1368;;;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:99::-;2412:6;2446:5;2440:12;2430:22;;2360:99;;;:::o;2465:169::-;2549:11;2583:6;2578:3;2571:19;2623:4;2618:3;2614:14;2599:29;;2465:169;;;;:::o;2640:139::-;2729:6;2724:3;2719;2713:23;2770:1;2761:6;2756:3;2752:16;2745:27;2640:139;;;:::o;2785:102::-;2826:6;2877:2;2873:7;2868:2;2861:5;2857:14;2853:28;2843:38;;2785:102;;;:::o;2893:377::-;2981:3;3009:39;3042:5;3009:39;:::i;:::-;3064:71;3128:6;3123:3;3064:71;:::i;:::-;3057:78;;3144:65;3202:6;3197:3;3190:4;3183:5;3179:16;3144:65;:::i;:::-;3234:29;3256:6;3234:29;:::i;:::-;3229:3;3225:39;3218:46;;2985:285;2893:377;;;;:::o;3276:313::-;3389:4;3427:2;3416:9;3412:18;3404:26;;3476:9;3470:4;3466:20;3462:1;3451:9;3447:17;3440:47;3504:78;3577:4;3568:6;3504:78;:::i;:::-;3496:86;;3276:313;;;;:::o;3595:77::-;3632:7;3661:5;3650:16;;3595:77;;;:::o;3678:122::-;3751:24;3769:5;3751:24;:::i;:::-;3744:5;3741:35;3731:63;;3790:1;3787;3780:12;3731:63;3678:122;:::o;3806:139::-;3852:5;3890:6;3877:20;3868:29;;3906:33;3933:5;3906:33;:::i;:::-;3806:139;;;;:::o;3951:474::-;4019:6;4027;4076:2;4064:9;4055:7;4051:23;4047:32;4044:119;;;4082:79;;:::i;:::-;4044:119;4202:1;4227:53;4272:7;4263:6;4252:9;4248:22;4227:53;:::i;:::-;4217:63;;4173:117;4329:2;4355:53;4400:7;4391:6;4380:9;4376:22;4355:53;:::i;:::-;4345:63;;4300:118;3951:474;;;;;:::o;4431:118::-;4518:24;4536:5;4518:24;:::i;:::-;4513:3;4506:37;4431:118;;:::o;4555:222::-;4648:4;4686:2;4675:9;4671:18;4663:26;;4699:71;4767:1;4756:9;4752:17;4743:6;4699:71;:::i;:::-;4555:222;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:77::-;5445:7;5474:5;5463:16;;5408:77;;;:::o;5491:122::-;5564:24;5582:5;5564:24;:::i;:::-;5557:5;5554:35;5544:63;;5603:1;5600;5593:12;5544:63;5491:122;:::o;5619:139::-;5665:5;5703:6;5690:20;5681:29;;5719:33;5746:5;5719:33;:::i;:::-;5619:139;;;;:::o;5764:329::-;5823:6;5872:2;5860:9;5851:7;5847:23;5843:32;5840:119;;;5878:79;;:::i;:::-;5840:119;5998:1;6023:53;6068:7;6059:6;6048:9;6044:22;6023:53;:::i;:::-;6013:63;;5969:117;5764:329;;;;:::o;6099:118::-;6186:24;6204:5;6186:24;:::i;:::-;6181:3;6174:37;6099:118;;:::o;6223:222::-;6316:4;6354:2;6343:9;6339:18;6331:26;;6367:71;6435:1;6424:9;6420:17;6411:6;6367:71;:::i;:::-;6223:222;;;;:::o;6451:474::-;6519:6;6527;6576:2;6564:9;6555:7;6551:23;6547:32;6544:119;;;6582:79;;:::i;:::-;6544:119;6702:1;6727:53;6772:7;6763:6;6752:9;6748:22;6727:53;:::i;:::-;6717:63;;6673:117;6829:2;6855:53;6900:7;6891:6;6880:9;6876:22;6855:53;:::i;:::-;6845:63;;6800:118;6451:474;;;;;:::o;6931:86::-;6966:7;7006:4;6999:5;6995:16;6984:27;;6931:86;;;:::o;7023:112::-;7106:22;7122:5;7106:22;:::i;:::-;7101:3;7094:35;7023:112;;:::o;7141:214::-;7230:4;7268:2;7257:9;7253:18;7245:26;;7281:67;7345:1;7334:9;7330:17;7321:6;7281:67;:::i;:::-;7141:214;;;;:::o;7361:118::-;7448:24;7466:5;7448:24;:::i;:::-;7443:3;7436:37;7361:118;;:::o;7485:222::-;7578:4;7616:2;7605:9;7601:18;7593:26;;7629:71;7697:1;7686:9;7682:17;7673:6;7629:71;:::i;:::-;7485:222;;;;:::o;7713:474::-;7781:6;7789;7838:2;7826:9;7817:7;7813:23;7809:32;7806:119;;;7844:79;;:::i;:::-;7806:119;7964:1;7989:53;8034:7;8025:6;8014:9;8010:22;7989:53;:::i;:::-;7979:63;;7935:117;8091:2;8117:53;8162:7;8153:6;8142:9;8138:22;8117:53;:::i;:::-;8107:63;;8062:118;7713:474;;;;;:::o;8193:180::-;8241:77;8238:1;8231:88;8338:4;8335:1;8328:15;8362:4;8359:1;8352:15;8379:320;8423:6;8460:1;8454:4;8450:12;8440:22;;8507:1;8501:4;8497:12;8528:18;8518:81;;8584:4;8576:6;8572:17;8562:27;;8518:81;8646:2;8638:6;8635:14;8615:18;8612:38;8609:84;;8665:18;;:::i;:::-;8609:84;8430:269;8379:320;;;:::o;8705:174::-;8845:26;8841:1;8833:6;8829:14;8822:50;8705:174;:::o;8885:366::-;9027:3;9048:67;9112:2;9107:3;9048:67;:::i;:::-;9041:74;;9124:93;9213:3;9124:93;:::i;:::-;9242:2;9237:3;9233:12;9226:19;;8885:366;;;:::o;9257:419::-;9423:4;9461:2;9450:9;9446:18;9438:26;;9510:9;9504:4;9500:20;9496:1;9485:9;9481:17;9474:47;9538:131;9664:4;9538:131;:::i;:::-;9530:139;;9257:419;;;:::o;9682:177::-;9822:29;9818:1;9810:6;9806:14;9799:53;9682:177;:::o;9865:366::-;10007:3;10028:67;10092:2;10087:3;10028:67;:::i;:::-;10021:74;;10104:93;10193:3;10104:93;:::i;:::-;10222:2;10217:3;10213:12;10206:19;;9865:366;;;:::o;10237:419::-;10403:4;10441:2;10430:9;10426:18;10418:26;;10490:9;10484:4;10480:20;10476:1;10465:9;10461:17;10454:47;10518:131;10644:4;10518:131;:::i;:::-;10510:139;;10237:419;;;:::o;10662:179::-;10802:31;10798:1;10790:6;10786:14;10779:55;10662:179;:::o;10847:366::-;10989:3;11010:67;11074:2;11069:3;11010:67;:::i;:::-;11003:74;;11086:93;11175:3;11086:93;:::i;:::-;11204:2;11199:3;11195:12;11188:19;;10847:366;;;:::o;11219:419::-;11385:4;11423:2;11412:9;11408:18;11400:26;;11472:9;11466:4;11462:20;11458:1;11447:9;11443:17;11436:47;11500:131;11626:4;11500:131;:::i;:::-;11492:139;;11219:419;;;:::o;11644:182::-;11784:34;11780:1;11772:6;11768:14;11761:58;11644:182;:::o;11832:366::-;11974:3;11995:67;12059:2;12054:3;11995:67;:::i;:::-;11988:74;;12071:93;12160:3;12071:93;:::i;:::-;12189:2;12184:3;12180:12;12173:19;;11832:366;;;:::o;12204:419::-;12370:4;12408:2;12397:9;12393:18;12385:26;;12457:9;12451:4;12447:20;12443:1;12432:9;12428:17;12421:47;12485:131;12611:4;12485:131;:::i;:::-;12477:139;;12204:419;;;:::o;12629:176::-;12769:28;12765:1;12757:6;12753:14;12746:52;12629:176;:::o;12811:366::-;12953:3;12974:67;13038:2;13033:3;12974:67;:::i;:::-;12967:74;;13050:93;13139:3;13050:93;:::i;:::-;13168:2;13163:3;13159:12;13152:19;;12811:366;;;:::o;13183:419::-;13349:4;13387:2;13376:9;13372:18;13364:26;;13436:9;13430:4;13426:20;13422:1;13411:9;13407:17;13400:47;13464:131;13590:4;13464:131;:::i;:::-;13456:139;;13183:419;;;:::o;13608:171::-;13748:23;13744:1;13736:6;13732:14;13725:47;13608:171;:::o;13785:366::-;13927:3;13948:67;14012:2;14007:3;13948:67;:::i;:::-;13941:74;;14024:93;14113:3;14024:93;:::i;:::-;14142:2;14137:3;14133:12;14126:19;;13785:366;;;:::o;14157:419::-;14323:4;14361:2;14350:9;14346:18;14338:26;;14410:9;14404:4;14400:20;14396:1;14385:9;14381:17;14374:47;14438:131;14564:4;14438:131;:::i;:::-;14430:139;;14157:419;;;:::o;14582:180::-;14722:32;14718:1;14710:6;14706:14;14699:56;14582:180;:::o;14768:366::-;14910:3;14931:67;14995:2;14990:3;14931:67;:::i;:::-;14924:74;;15007:93;15096:3;15007:93;:::i;:::-;15125:2;15120:3;15116:12;15109:19;;14768:366;;;:::o;15140:419::-;15306:4;15344:2;15333:9;15329:18;15321:26;;15393:9;15387:4;15383:20;15379:1;15368:9;15364:17;15357:47;15421:131;15547:4;15421:131;:::i;:::-;15413:139;;15140:419;;;:::o;15565:175::-;15705:27;15701:1;15693:6;15689:14;15682:51;15565:175;:::o;15746:366::-;15888:3;15909:67;15973:2;15968:3;15909:67;:::i;:::-;15902:74;;15985:93;16074:3;15985:93;:::i;:::-;16103:2;16098:3;16094:12;16087:19;;15746:366;;;:::o;16118:419::-;16284:4;16322:2;16311:9;16307:18;16299:26;;16371:9;16365:4;16361:20;16357:1;16346:9;16342:17;16335:47;16399:131;16525:4;16399:131;:::i;:::-;16391:139;;16118:419;;;:::o;16543:332::-;16664:4;16702:2;16691:9;16687:18;16679:26;;16715:71;16783:1;16772:9;16768:17;16759:6;16715:71;:::i;:::-;16796:72;16864:2;16853:9;16849:18;16840:6;16796:72;:::i;:::-;16543:332;;;;;:::o;16881:180::-;16929:77;16926:1;16919:88;17026:4;17023:1;17016:15;17050:4;17047:1;17040:15;17067:191;17107:3;17126:20;17144:1;17126:20;:::i;:::-;17121:25;;17160:20;17178:1;17160:20;:::i;:::-;17155:25;;17203:1;17200;17196:9;17189:16;;17224:3;17221:1;17218:10;17215:36;;;17231:18;;:::i;:::-;17215:36;17067:191;;;;:::o;17264:442::-;17413:4;17451:2;17440:9;17436:18;17428:26;;17464:71;17532:1;17521:9;17517:17;17508:6;17464:71;:::i;:::-;17545:72;17613:2;17602:9;17598:18;17589:6;17545:72;:::i;:::-;17627;17695:2;17684:9;17680:18;17671:6;17627:72;:::i;:::-;17264:442;;;;;;:::o;17712:194::-;17752:4;17772:20;17790:1;17772:20;:::i;:::-;17767:25;;17806:20;17824:1;17806:20;:::i;:::-;17801:25;;17850:1;17847;17843:9;17835:17;;17874:1;17868:4;17865:11;17862:37;;;17879:18;;:::i;:::-;17862:37;17712:194;;;;:::o;17912:180::-;17960:77;17957:1;17950:88;18057:4;18054:1;18047:15;18081:4;18078:1;18071:15;18098:180;18146:77;18143:1;18136:88;18243:4;18240:1;18233:15;18267:4;18264:1;18257:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2180800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BLACKLIST_MANAGER_ROLE()": "392",
								"BURNER_ROLE()": "459",
								"DEFAULT_ADMIN_ROLE()": "375",
								"FREEZE_MANAGER_ROLE()": "458",
								"MINTER_ROLE()": "369",
								"RECOVER_ROLE()": "370",
								"addBlacklistManager(address)": "infinite",
								"addBurner(address)": "infinite",
								"addFreezer(address)": "infinite",
								"addMinter(address)": "infinite",
								"addRecoverer(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2875",
								"blacklistAccount(address)": "infinite",
								"burn(address,uint256)": "infinite",
								"decimals()": "450",
								"freezeAccount(address)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3256",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2627",
								"recover(address,address,uint256)": "infinite",
								"removeBlacklistManager(address)": "infinite",
								"removeBurner(address)": "infinite",
								"removeFreezer(address)": "infinite",
								"removeFromBlacklist(address)": "infinite",
								"removeMinter(address)": "infinite",
								"removeRecoverer(address)": "infinite",
								"renounceOwnership()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreezeAccount(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 314,
									"end": 6619,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1145,
									"end": 1325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1247,
									"end": 1257,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1215,
									"end": 1219,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1221,
									"end": 1227,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1275,
									"end": 1317,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1286,
									"end": 1304,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1286,
									"end": 1304,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1306,
									"end": 1316,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1275,
									"end": 1285,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1275,
									"end": 1285,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1275,
									"end": 1285,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1275,
									"end": 1317,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1275,
									"end": 1317,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1275,
									"end": 1317,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1275,
									"end": 1317,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1275,
									"end": 1317,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1275,
									"end": 1317,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1325,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 12
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 12,
									"value": "160"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "160"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "164"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 12,
									"value": "164"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8470,
									"end": 8596,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 8470,
									"end": 8596,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8507,
									"end": 8514,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8547,
									"end": 8589,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8536,
									"end": 8590,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8525,
									"end": 8590,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8525,
									"end": 8590,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8470,
									"end": 8596,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8470,
									"end": 8596,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8470,
									"end": 8596,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8470,
									"end": 8596,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8602,
									"end": 8698,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 8602,
									"end": 8698,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8639,
									"end": 8646,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8668,
									"end": 8692,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 8686,
									"end": 8691,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8668,
									"end": 8692,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 8668,
									"end": 8692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8668,
									"end": 8692,
									"name": "tag",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 8668,
									"end": 8692,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8657,
									"end": 8692,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8657,
									"end": 8692,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8602,
									"end": 8698,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8602,
									"end": 8698,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8602,
									"end": 8698,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8602,
									"end": 8698,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8704,
									"end": 8822,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 8704,
									"end": 8822,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8791,
									"end": 8815,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 8809,
									"end": 8814,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8791,
									"end": 8815,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 8791,
									"end": 8815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8791,
									"end": 8815,
									"name": "tag",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 8791,
									"end": 8815,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8786,
									"end": 8789,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8779,
									"end": 8816,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 8704,
									"end": 8822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8704,
									"end": 8822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8704,
									"end": 8822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8921,
									"end": 8925,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8959,
									"end": 8961,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8948,
									"end": 8957,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8944,
									"end": 8962,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8936,
									"end": 8962,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8936,
									"end": 8962,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8972,
									"end": 9043,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 9040,
									"end": 9041,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9029,
									"end": 9038,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9025,
									"end": 9042,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9016,
									"end": 9022,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8972,
									"end": 9043,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 8972,
									"end": 9043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8972,
									"end": 9043,
									"name": "tag",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 8972,
									"end": 9043,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8828,
									"end": 9050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 6619,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c26cc67ef99f195020f6087d9e61d1bb3d80c84a11a7f1c70f958753d6279a464736f6c63430008190033",
									".code": [
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "F26C159F"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "F44637BA"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "C2134B23"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "D1C2DE0A"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "D37B34D7"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "939BCBC9"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "939BCBC9"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "974B368C"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "983B2D56"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "9DC29FAC"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "788649EA"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "2ACD2000"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "410B2424"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "526606C9"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "537DF3B6"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "63F15649"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "2ACD2000"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "3092AFD5"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "1EC82CB8"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "282C51F3"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "2846858"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "EFF2AFC"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6619,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 5251,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5251,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 5847,
											"end": 5973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 5847,
											"end": 5973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 3179,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3179,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 4035,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4035,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4035,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 541,
											"end": 603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 541,
											"end": 603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 5642,
											"end": 5760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 5642,
											"end": 5760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 4885,
											"end": 4994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4885,
											"end": 4994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1378,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1378,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 695,
											"end": 779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 695,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 695,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 695,
											"end": 779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 779,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 695,
											"end": 779,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 695,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 695,
											"end": 779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 779,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 5444,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 5444,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2816,
											"end": 3045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 2816,
											"end": 3045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 610,
											"end": 688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 610,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 610,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 610,
											"end": 688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 688,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 610,
											"end": 688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 610,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 610,
											"end": 688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 688,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2100,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2100,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 786,
											"end": 850,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 786,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 786,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 6060,
											"end": 6190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 6060,
											"end": 6190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 4704,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 4704,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1537,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1537,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3437,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3437,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 3437,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 6267,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 6267,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 6453,
											"end": 6566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6453,
											"end": 6566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2508,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 2508,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 472,
											"end": 534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 472,
											"end": 534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1818,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 1818,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 5070,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 5070,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5320,
											"end": 5352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 579,
											"end": 603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 5344,
											"end": 5351,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5320,
											"end": 5330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5320,
											"end": 5352,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5320,
											"end": 5352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 5320,
											"end": 5352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5923,
											"end": 5965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 744,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
										},
										{
											"begin": 5957,
											"end": 5964,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5923,
											"end": 5932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5923,
											"end": 5965,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5923,
											"end": 5965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5923,
											"end": 5965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 825,
											"end": 850,
											"name": "PUSH",
											"source": 11,
											"value": "62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3281,
											"end": 3308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3291,
											"end": 3295,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3299,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3301,
											"end": 3307,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 3281,
											"end": 3308,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3281,
											"end": 3308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3179,
											"end": 3363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4124,
											"end": 4128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 4174,
											"end": 4178,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4164,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4150,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4150,
											"end": 4173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4179,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4179,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4150,
											"end": 4179,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4179,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 4150,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4149,
											"end": 4179,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 4141,
											"end": 4208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 4141,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 4252,
											"end": 4254,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4242,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 4219,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 4219,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 4336,
											"end": 4340,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4326,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4307,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4307,
											"end": 4335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4341,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4307,
											"end": 4341,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4341,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 4307,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4306,
											"end": 4341,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4298,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4298,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4394,
											"end": 4427,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4386,
											"end": 4464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4386,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4503,
											"end": 4507,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4484,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4477,
											"end": 4520,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4477,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 579,
											"end": 603,
											"name": "PUSH",
											"source": 11,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5712,
											"end": 5752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 656,
											"end": 688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35"
										},
										{
											"begin": 5744,
											"end": 5751,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5712,
											"end": 5722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5712,
											"end": 5752,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5712,
											"end": 5752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 5712,
											"end": 5752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4954,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 4978,
											"end": 4985,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4954,
											"end": 4964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 4954,
											"end": 4986,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4954,
											"end": 4986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 4954,
											"end": 4986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1468,
											"end": 1470,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1472,
											"end": 1478,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1462,
											"end": 1467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1462,
											"end": 1479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1462,
											"end": 1479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1462,
											"end": 1479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 695,
											"end": 779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 744,
											"end": 779,
											"name": "PUSH",
											"source": 11,
											"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
										},
										{
											"begin": 695,
											"end": 779,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 695,
											"end": 779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5511,
											"end": 5550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 656,
											"end": 688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35"
										},
										{
											"begin": 5542,
											"end": 5549,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5511,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5511,
											"end": 5550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5511,
											"end": 5550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 5511,
											"end": 5550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 744,
											"end": 779,
											"name": "PUSH",
											"source": 11,
											"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2952,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2923,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2923,
											"end": 2951,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2923,
											"end": 2960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2923,
											"end": 2960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 2915,
											"end": 2991,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 2915,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3029,
											"end": 3036,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3002,
											"end": 3028,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3002,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 610,
											"end": 688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 656,
											"end": 688,
											"name": "PUSH",
											"source": 11,
											"value": "109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35"
										},
										{
											"begin": 610,
											"end": 688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 610,
											"end": 688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 656,
											"end": 688,
											"name": "PUSH",
											"source": 11,
											"value": "109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 2224,
											"end": 2231,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2200,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2200,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2232,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2232,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2232,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 2200,
											"end": 2232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2192,
											"end": 2258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2192,
											"end": 2258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2291,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2269,
											"end": 2283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2269,
											"end": 2290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 2269,
											"end": 2290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2269,
											"end": 2299,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 786,
											"end": 850,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 825,
											"end": 850,
											"name": "PUSH",
											"source": 11,
											"value": "62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 786,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6139,
											"end": 6182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 744,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
										},
										{
											"begin": 6174,
											"end": 6181,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6139,
											"end": 6149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 6139,
											"end": 6182,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6139,
											"end": 6182,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 6139,
											"end": 6182,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 4793,
											"end": 4800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4770,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4770,
											"end": 4801,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4770,
											"end": 4801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 4770,
											"end": 4801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 579,
											"end": 603,
											"name": "PUSH",
											"source": 11,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 1629,
											"end": 1633,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1641,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 1623,
											"end": 1642,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 1623,
											"end": 1642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3512,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3558,
											"end": 3568,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3548,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3534,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3534,
											"end": 3557,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3569,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3525,
											"end": 3598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3525,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3642,
											"end": 3644,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3632,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3618,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3618,
											"end": 3641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3645,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3645,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3618,
											"end": 3645,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3645,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3618,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3609,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 3609,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3726,
											"end": 3736,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3716,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3697,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3697,
											"end": 3725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3737,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3737,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3697,
											"end": 3737,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3737,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3697,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3696,
											"end": 3737,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 3688,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3688,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 3820,
											"end": 3822,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3810,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3791,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3791,
											"end": 3819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3823,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3823,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3823,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3791,
											"end": 3823,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3823,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 3791,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3790,
											"end": 3823,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 3782,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3880,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3899,
											"end": 3905,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 3880,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3880,
											"end": 3906,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 3880,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3873,
											"end": 3906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3873,
											"end": 3906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 825,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066"
										},
										{
											"begin": 6360,
											"end": 6367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6336,
											"end": 6345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6336,
											"end": 6368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6336,
											"end": 6368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 6336,
											"end": 6368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6267,
											"end": 6376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6525,
											"end": 6558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 825,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066"
										},
										{
											"begin": 6550,
											"end": 6557,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6525,
											"end": 6535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 6525,
											"end": 6558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6525,
											"end": 6558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 6525,
											"end": 6558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 744,
											"end": 779,
											"name": "PUSH",
											"source": 11,
											"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2642,
											"end": 2649,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2613,
											"end": 2641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2613,
											"end": 2641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2650,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2650,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2613,
											"end": 2650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2612,
											"end": 2650,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 2604,
											"end": 2685,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 2604,
											"end": 2685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 2720,
											"end": 2727,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2696,
											"end": 2719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 2696,
											"end": 2719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2728,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2696,
											"end": 2728,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2728,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2728,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 2696,
											"end": 2728,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2508,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 656,
											"end": 688,
											"name": "PUSH",
											"source": 11,
											"value": "109B88C1C8D528799CA6F455418979DD2A552493F14553CE44443B23F7DF8B35"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1941,
											"end": 1948,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1917,
											"end": 1940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 1917,
											"end": 1940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1917,
											"end": 1949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1917,
											"end": 1949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1916,
											"end": 1949,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 1908,
											"end": 1979,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 1908,
											"end": 1979,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 2009,
											"end": 2016,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1990,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 1990,
											"end": 2008,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2017,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 1990,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5136,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 579,
											"end": 603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 5159,
											"end": 5166,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5136,
											"end": 5145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5136,
											"end": 5167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5136,
											"end": 5167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 5136,
											"end": 5167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8951,
											"end": 8955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 8984,
											"end": 8987,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8984,
											"end": 8994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8984,
											"end": 8994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9020,
											"end": 9025,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9004,
											"end": 9027,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9004,
											"end": 9027,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8996,
											"end": 9028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8974,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 8974,
											"end": 9029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8707,
											"end": 8711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 8738,
											"end": 8741,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8748,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8774,
											"end": 8779,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8758,
											"end": 8781,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8750,
											"end": 8782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8750,
											"end": 8782,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 8730,
											"end": 8783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8783,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 8730,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8723,
											"end": 8783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8723,
											"end": 8783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8386,
											"end": 8390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 8414,
											"end": 8417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8414,
											"end": 8424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8424,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8450,
											"end": 8455,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8434,
											"end": 8457,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8434,
											"end": 8457,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8426,
											"end": 8458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8458,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8409,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 8409,
											"end": 8459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3013,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3434,
											"end": 3442,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 3434,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3483,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 3480,
											"end": 3502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3544,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3544,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3581,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3587,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 3584,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3708,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3727,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 3705,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3847,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3858,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3844,
											"end": 3858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3546,
											"end": 3895,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3976,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 3973,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4079,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4096,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4097,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4166,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 2335,
											"end": 2338,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 2325,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2365,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2384,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2547,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2523,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2459,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 2360,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2412,
											"end": 2418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2451,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2459,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2634,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 2465,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2549,
											"end": 2560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2589,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2578,
											"end": 2581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2590,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2623,
											"end": 2627,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2618,
											"end": 2621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2599,
											"end": 2628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2599,
											"end": 2628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2634,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2634,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2779,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 2640,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2729,
											"end": 2735,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 2736,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2767,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2756,
											"end": 2759,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2752,
											"end": 2768,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2745,
											"end": 2772,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2887,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 2785,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2879,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2873,
											"end": 2880,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2868,
											"end": 2870,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2853,
											"end": 2881,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2881,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 3270,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 2893,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 2984,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 3042,
											"end": 3047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 3009,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3048,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 3009,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3126,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3064,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3135,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 3064,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3057,
											"end": 3135,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3057,
											"end": 3135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 3202,
											"end": 3208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3200,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3190,
											"end": 3194,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3183,
											"end": 3188,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3179,
											"end": 3195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3144,
											"end": 3209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3209,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 3144,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3234,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3234,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 3234,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3234,
											"end": 3263,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 3234,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3232,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3225,
											"end": 3264,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3218,
											"end": 3264,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3218,
											"end": 3264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 3270,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 3270,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 3270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 3270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 3270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3276,
											"end": 3589,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3276,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3476,
											"end": 3485,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3466,
											"end": 3486,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3440,
											"end": 3487,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3504,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 3577,
											"end": 3581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3574,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3504,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 3504,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3504,
											"end": 3582,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 3504,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3582,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3276,
											"end": 3589,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3276,
											"end": 3589,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3276,
											"end": 3589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3276,
											"end": 3589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3276,
											"end": 3589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3672,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 3595,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3672,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3800,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 3678,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 3769,
											"end": 3774,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 3751,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3744,
											"end": 3749,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3741,
											"end": 3776,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 3731,
											"end": 3794,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3790,
											"end": 3791,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3787,
											"end": 3788,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3780,
											"end": 3792,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3794,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 3731,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3806,
											"end": 3945,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 3806,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3896,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3877,
											"end": 3897,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3897,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 3933,
											"end": 3938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 3906,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 3939,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 3906,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3806,
											"end": 3945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3806,
											"end": 3945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3806,
											"end": 3945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3806,
											"end": 3945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3806,
											"end": 3945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4425,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 3951,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4019,
											"end": 4025,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4033,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4064,
											"end": 4073,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4062,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4051,
											"end": 4074,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4163,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 4044,
											"end": 4163,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 4082,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 4082,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4161,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 4082,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4163,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 4044,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 4272,
											"end": 4279,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4252,
											"end": 4261,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4248,
											"end": 4270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 4227,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4280,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 4227,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4280,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4173,
											"end": 4290,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4329,
											"end": 4331,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 4400,
											"end": 4407,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4380,
											"end": 4389,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 4355,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4345,
											"end": 4408,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4345,
											"end": 4408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4425,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4425,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4425,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 4536,
											"end": 4541,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 4518,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4513,
											"end": 4516,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4431,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4648,
											"end": 4652,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4684,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 4767,
											"end": 4768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4765,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4752,
											"end": 4769,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 4699,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 5582,
											"end": 5587,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 5564,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "tag",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5601,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5593,
											"end": 5605,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 5719,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5619,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5860,
											"end": 5869,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5858,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5847,
											"end": 5870,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 5878,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 6068,
											"end": 6075,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6057,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6066,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 6023,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5969,
											"end": 6086,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 6093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 6204,
											"end": 6209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 6186,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6181,
											"end": 6184,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6099,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6356,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6420,
											"end": 6437,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 6367,
											"end": 6438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6525,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6578,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6555,
											"end": 6562,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6551,
											"end": 6574,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6547,
											"end": 6579,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 6582,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6752,
											"end": 6761,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 6727,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6673,
											"end": 6790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6876,
											"end": 6898,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 6855,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6800,
											"end": 6918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 7122,
											"end": 7127,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 7106,
											"end": 7128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "tag",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7094,
											"end": 7129,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7268,
											"end": 7270,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7253,
											"end": 7271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 7281,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 7448,
											"end": 7472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7443,
											"end": 7446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7436,
											"end": 7473,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7578,
											"end": 7582,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7618,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7605,
											"end": 7614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7619,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 7697,
											"end": 7698,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7695,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 7629,
											"end": 7700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "tag",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7781,
											"end": 7787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7795,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7826,
											"end": 7835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7817,
											"end": 7824,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7813,
											"end": 7836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7809,
											"end": 7841,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7806,
											"end": 7925,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7806,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 7806,
											"end": 7925,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 7844,
											"end": 7923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "tag",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7806,
											"end": 7925,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 7806,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7964,
											"end": 7965,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 8034,
											"end": 8041,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8014,
											"end": 8023,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8010,
											"end": 8032,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7989,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 7989,
											"end": 8042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7989,
											"end": 8042,
											"name": "tag",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 7989,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8042,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 8052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8091,
											"end": 8093,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 8162,
											"end": 8169,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8153,
											"end": 8159,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8142,
											"end": 8151,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8117,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 8117,
											"end": 8170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8117,
											"end": 8170,
											"name": "tag",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 8117,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8107,
											"end": 8170,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8107,
											"end": 8170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8062,
											"end": 8180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8373,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 8193,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8241,
											"end": 8318,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8238,
											"end": 8239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 8319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8342,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 8335,
											"end": 8336,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8328,
											"end": 8343,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8362,
											"end": 8366,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8359,
											"end": 8360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8367,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8699,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 8379,
											"end": 8699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8423,
											"end": 8429,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8461,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8454,
											"end": 8458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8462,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8508,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8501,
											"end": 8505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8497,
											"end": 8509,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8518,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 8518,
											"end": 8599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 8588,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8572,
											"end": 8589,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8562,
											"end": 8589,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8562,
											"end": 8589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8518,
											"end": 8599,
											"name": "tag",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 8518,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8646,
											"end": 8648,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8638,
											"end": 8644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8635,
											"end": 8649,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8615,
											"end": 8633,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8612,
											"end": 8650,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8609,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 8609,
											"end": 8693,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "633"
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 8665,
											"end": 8683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "tag",
											"source": 12,
											"value": "633"
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8609,
											"end": 8693,
											"name": "tag",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 8609,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8430,
											"end": 8699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8699,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8879,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 8705,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 8871,
											"name": "PUSH",
											"source": 12,
											"value": "53656E646572206163636F756E742069732066726F7A656E0000000000000000"
										},
										{
											"begin": 8841,
											"end": 8842,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 8839,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 8843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8822,
											"end": 8872,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8885,
											"end": 9251,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 8885,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9027,
											"end": 9030,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 9112,
											"end": 9114,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 9107,
											"end": 9110,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9048,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 9048,
											"end": 9115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9048,
											"end": 9115,
											"name": "tag",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 9048,
											"end": 9115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9041,
											"end": 9115,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9041,
											"end": 9115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9124,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "637"
										},
										{
											"begin": 9213,
											"end": 9216,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9124,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 9124,
											"end": 9217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9124,
											"end": 9217,
											"name": "tag",
											"source": 12,
											"value": "637"
										},
										{
											"begin": 9124,
											"end": 9217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9242,
											"end": 9244,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9237,
											"end": 9240,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9233,
											"end": 9245,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9245,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8885,
											"end": 9251,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8885,
											"end": 9251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8885,
											"end": 9251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8885,
											"end": 9251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9676,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 9257,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9423,
											"end": 9427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9463,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9459,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9446,
											"end": 9464,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9438,
											"end": 9464,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9438,
											"end": 9464,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9510,
											"end": 9519,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9504,
											"end": 9508,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9500,
											"end": 9520,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9494,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9481,
											"end": 9498,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9474,
											"end": 9521,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 9664,
											"end": 9668,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 9538,
											"end": 9669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9669,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 9538,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9530,
											"end": 9669,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9530,
											"end": 9669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9676,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9676,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9682,
											"end": 9859,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 9682,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "PUSH",
											"source": 12,
											"value": "526563697069656E74206163636F756E742069732066726F7A656E0000000000"
										},
										{
											"begin": 9818,
											"end": 9819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9816,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9806,
											"end": 9820,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9799,
											"end": 9852,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9682,
											"end": 9859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9682,
											"end": 9859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 10231,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 9865,
											"end": 10231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10007,
											"end": 10010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 10092,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 10087,
											"end": 10090,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10028,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 10028,
											"end": 10095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10028,
											"end": 10095,
											"name": "tag",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 10028,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10095,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10104,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 10193,
											"end": 10196,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10104,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 10104,
											"end": 10197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10104,
											"end": 10197,
											"name": "tag",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 10104,
											"end": 10197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10222,
											"end": 10224,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10217,
											"end": 10220,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10225,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10206,
											"end": 10225,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10206,
											"end": 10225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 10231,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 10231,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 10231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 10231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10237,
											"end": 10656,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 10237,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10403,
											"end": 10407,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10441,
											"end": 10443,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10430,
											"end": 10439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10418,
											"end": 10444,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10418,
											"end": 10444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10490,
											"end": 10499,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10484,
											"end": 10488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10480,
											"end": 10500,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10476,
											"end": 10477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10478,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10454,
											"end": 10501,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 10644,
											"end": 10648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 10518,
											"end": 10649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10649,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 10518,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10510,
											"end": 10649,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10510,
											"end": 10649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10237,
											"end": 10656,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10237,
											"end": 10656,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10237,
											"end": 10656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10237,
											"end": 10656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10841,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 10662,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10802,
											"end": 10833,
											"name": "PUSH",
											"source": 12,
											"value": "53656E646572206163636F756E7420697320626C61636B6C6973746564000000"
										},
										{
											"begin": 10798,
											"end": 10799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10790,
											"end": 10796,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10786,
											"end": 10800,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10779,
											"end": 10834,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10841,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10847,
											"end": 11213,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 10847,
											"end": 11213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10989,
											"end": 10992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11010,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 11074,
											"end": 11076,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 11069,
											"end": 11072,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11010,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 11010,
											"end": 11077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11010,
											"end": 11077,
											"name": "tag",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 11010,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11003,
											"end": 11077,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11003,
											"end": 11077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11086,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 11175,
											"end": 11178,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11086,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 11086,
											"end": 11179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11086,
											"end": 11179,
											"name": "tag",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 11086,
											"end": 11179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11204,
											"end": 11206,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11199,
											"end": 11202,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11195,
											"end": 11207,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11188,
											"end": 11207,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11188,
											"end": 11207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10847,
											"end": 11213,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10847,
											"end": 11213,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10847,
											"end": 11213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10847,
											"end": 11213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11638,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 11219,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11385,
											"end": 11389,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11423,
											"end": 11425,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11412,
											"end": 11421,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11408,
											"end": 11426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11400,
											"end": 11426,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11400,
											"end": 11426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11472,
											"end": 11481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11466,
											"end": 11470,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11462,
											"end": 11482,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11458,
											"end": 11459,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11447,
											"end": 11456,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11443,
											"end": 11460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11436,
											"end": 11483,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11500,
											"end": 11631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 11626,
											"end": 11630,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11500,
											"end": 11631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 11500,
											"end": 11631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11500,
											"end": 11631,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 11500,
											"end": 11631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11492,
											"end": 11631,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11492,
											"end": 11631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11638,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11644,
											"end": 11826,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 11644,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "PUSH",
											"source": 12,
											"value": "526563697069656E74206163636F756E7420697320626C61636B6C6973746564"
										},
										{
											"begin": 11780,
											"end": 11781,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11772,
											"end": 11778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11768,
											"end": 11782,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11761,
											"end": 11819,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11644,
											"end": 11826,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11644,
											"end": 11826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11832,
											"end": 12198,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 11832,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 11977,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11995,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 12059,
											"end": 12061,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12054,
											"end": 12057,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11995,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 11995,
											"end": 12062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11995,
											"end": 12062,
											"name": "tag",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 11995,
											"end": 12062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11988,
											"end": 12062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11988,
											"end": 12062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12071,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 12160,
											"end": 12163,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12071,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 12071,
											"end": 12164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12071,
											"end": 12164,
											"name": "tag",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 12071,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12189,
											"end": 12191,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12184,
											"end": 12187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12180,
											"end": 12192,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11832,
											"end": 12198,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11832,
											"end": 12198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11832,
											"end": 12198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11832,
											"end": 12198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12623,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 12204,
											"end": 12623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12370,
											"end": 12374,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12408,
											"end": 12410,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12397,
											"end": 12406,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12385,
											"end": 12411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12385,
											"end": 12411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12457,
											"end": 12466,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12451,
											"end": 12455,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12447,
											"end": 12467,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12443,
											"end": 12444,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12432,
											"end": 12441,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12428,
											"end": 12445,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12421,
											"end": 12468,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12485,
											"end": 12616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 12611,
											"end": 12615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12485,
											"end": 12616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 12485,
											"end": 12616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12485,
											"end": 12616,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 12485,
											"end": 12616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12477,
											"end": 12616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12477,
											"end": 12616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12623,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12623,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12629,
											"end": 12805,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 12629,
											"end": 12805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12769,
											"end": 12797,
											"name": "PUSH",
											"source": 12,
											"value": "4163636F756E74206973206E6F7420626C61636B6C6973746564000000000000"
										},
										{
											"begin": 12765,
											"end": 12766,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12757,
											"end": 12763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12753,
											"end": 12767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12746,
											"end": 12798,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12629,
											"end": 12805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12629,
											"end": 12805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12811,
											"end": 13177,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 12811,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12953,
											"end": 12956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12974,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 13038,
											"end": 13040,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 13033,
											"end": 13036,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12974,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 12974,
											"end": 13041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12974,
											"end": 13041,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 12974,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12967,
											"end": 13041,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12967,
											"end": 13041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13050,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 13139,
											"end": 13142,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13050,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 13050,
											"end": 13143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13050,
											"end": 13143,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 13050,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13168,
											"end": 13170,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13163,
											"end": 13166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13159,
											"end": 13171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13152,
											"end": 13171,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13152,
											"end": 13171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12811,
											"end": 13177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12811,
											"end": 13177,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12811,
											"end": 13177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12811,
											"end": 13177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13602,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 13183,
											"end": 13602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13349,
											"end": 13353,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13387,
											"end": 13389,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13376,
											"end": 13385,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13372,
											"end": 13390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13390,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13436,
											"end": 13445,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13430,
											"end": 13434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13426,
											"end": 13446,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13422,
											"end": 13423,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13411,
											"end": 13420,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13407,
											"end": 13424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13400,
											"end": 13447,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13464,
											"end": 13595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 13590,
											"end": 13594,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13464,
											"end": 13595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 13464,
											"end": 13595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13464,
											"end": 13595,
											"name": "tag",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 13464,
											"end": 13595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13602,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13602,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13608,
											"end": 13779,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 13608,
											"end": 13779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13748,
											"end": 13771,
											"name": "PUSH",
											"source": 12,
											"value": "4163636F756E74206973206E6F742066726F7A656E0000000000000000000000"
										},
										{
											"begin": 13744,
											"end": 13745,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13736,
											"end": 13742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13732,
											"end": 13746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13725,
											"end": 13772,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13608,
											"end": 13779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13608,
											"end": 13779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13785,
											"end": 14151,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 13785,
											"end": 14151,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13927,
											"end": 13930,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13948,
											"end": 14015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 14012,
											"end": 14014,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 14007,
											"end": 14010,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 13948,
											"end": 14015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14015,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 13948,
											"end": 14015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13941,
											"end": 14015,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13941,
											"end": 14015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14024,
											"end": 14117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 14113,
											"end": 14116,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14024,
											"end": 14117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 14024,
											"end": 14117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14024,
											"end": 14117,
											"name": "tag",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 14024,
											"end": 14117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14142,
											"end": 14144,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14137,
											"end": 14140,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14133,
											"end": 14145,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14126,
											"end": 14145,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14126,
											"end": 14145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13785,
											"end": 14151,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13785,
											"end": 14151,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13785,
											"end": 14151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13785,
											"end": 14151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14576,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 14157,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14323,
											"end": 14327,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14361,
											"end": 14363,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14350,
											"end": 14359,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14346,
											"end": 14364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14338,
											"end": 14364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14338,
											"end": 14364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14410,
											"end": 14419,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14404,
											"end": 14408,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14420,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14396,
											"end": 14397,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14394,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14381,
											"end": 14398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14374,
											"end": 14421,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 14564,
											"end": 14568,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 14438,
											"end": 14569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14569,
											"name": "tag",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 14438,
											"end": 14569,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14430,
											"end": 14569,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14430,
											"end": 14569,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14576,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14576,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14582,
											"end": 14762,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 14582,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "PUSH",
											"source": 12,
											"value": "4163636F756E7420697320616C726561647920626C61636B6C69737465640000"
										},
										{
											"begin": 14718,
											"end": 14719,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14706,
											"end": 14720,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14699,
											"end": 14755,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14582,
											"end": 14762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14582,
											"end": 14762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14768,
											"end": 15134,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 14768,
											"end": 15134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14910,
											"end": 14913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14931,
											"end": 14998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 14995,
											"end": 14997,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 14990,
											"end": 14993,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14931,
											"end": 14998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 14931,
											"end": 14998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14931,
											"end": 14998,
											"name": "tag",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 14931,
											"end": 14998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14924,
											"end": 14998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14924,
											"end": 14998,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 15096,
											"end": 15099,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 15007,
											"end": 15100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15100,
											"name": "tag",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 15007,
											"end": 15100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15125,
											"end": 15127,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15120,
											"end": 15123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15116,
											"end": 15128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15109,
											"end": 15128,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15109,
											"end": 15128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14768,
											"end": 15134,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14768,
											"end": 15134,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14768,
											"end": 15134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14768,
											"end": 15134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15559,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 15140,
											"end": 15559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15306,
											"end": 15310,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15344,
											"end": 15346,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15333,
											"end": 15342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15329,
											"end": 15347,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15347,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15393,
											"end": 15402,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15387,
											"end": 15391,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15383,
											"end": 15403,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15379,
											"end": 15380,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15368,
											"end": 15377,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15364,
											"end": 15381,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15357,
											"end": 15404,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15421,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 15547,
											"end": 15551,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15421,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 15421,
											"end": 15552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15421,
											"end": 15552,
											"name": "tag",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 15421,
											"end": 15552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15413,
											"end": 15552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15413,
											"end": 15552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15559,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15559,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15740,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 15565,
											"end": 15740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15705,
											"end": 15732,
											"name": "PUSH",
											"source": 12,
											"value": "4163636F756E7420697320616C72656164792066726F7A656E00000000000000"
										},
										{
											"begin": 15701,
											"end": 15702,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15693,
											"end": 15699,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15689,
											"end": 15703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15682,
											"end": 15733,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15746,
											"end": 16112,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 15746,
											"end": 16112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15888,
											"end": 15891,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15909,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 15973,
											"end": 15975,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 15968,
											"end": 15971,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15909,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 15909,
											"end": 15976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15909,
											"end": 15976,
											"name": "tag",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 15909,
											"end": 15976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15902,
											"end": 15976,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15902,
											"end": 15976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15985,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 16074,
											"end": 16077,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15985,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 15985,
											"end": 16078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15985,
											"end": 16078,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 15985,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16103,
											"end": 16105,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16098,
											"end": 16101,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16087,
											"end": 16106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16087,
											"end": 16106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15746,
											"end": 16112,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15746,
											"end": 16112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15746,
											"end": 16112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15746,
											"end": 16112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16537,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 16118,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16284,
											"end": 16288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16322,
											"end": 16324,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16311,
											"end": 16320,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16307,
											"end": 16325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16325,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16371,
											"end": 16380,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16365,
											"end": 16369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16361,
											"end": 16381,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16357,
											"end": 16358,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16346,
											"end": 16355,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16342,
											"end": 16359,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16335,
											"end": 16382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16399,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 16525,
											"end": 16529,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16399,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 16399,
											"end": 16530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16399,
											"end": 16530,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 16399,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16391,
											"end": 16530,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16391,
											"end": 16530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16537,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16537,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16537,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16543,
											"end": 16875,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 16543,
											"end": 16875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16664,
											"end": 16668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16702,
											"end": 16704,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16691,
											"end": 16700,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16687,
											"end": 16705,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16679,
											"end": 16705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16679,
											"end": 16705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16715,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 16783,
											"end": 16784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16772,
											"end": 16781,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16768,
											"end": 16785,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16759,
											"end": 16765,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16715,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 16715,
											"end": 16786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16715,
											"end": 16786,
											"name": "tag",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 16715,
											"end": 16786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16796,
											"end": 16868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 16864,
											"end": 16866,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16853,
											"end": 16862,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16849,
											"end": 16867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16840,
											"end": 16846,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16796,
											"end": 16868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 16796,
											"end": 16868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16796,
											"end": 16868,
											"name": "tag",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 16796,
											"end": 16868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16543,
											"end": 16875,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16543,
											"end": 16875,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16543,
											"end": 16875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16543,
											"end": 16875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16543,
											"end": 16875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16543,
											"end": 16875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16881,
											"end": 17061,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16881,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16929,
											"end": 17006,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16926,
											"end": 16927,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16919,
											"end": 17007,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17026,
											"end": 17030,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 17023,
											"end": 17024,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17016,
											"end": 17031,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17050,
											"end": 17054,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17047,
											"end": 17048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17040,
											"end": 17055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17067,
											"end": 17258,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 17067,
											"end": 17258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17107,
											"end": 17110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17126,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 17144,
											"end": 17145,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17126,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 17126,
											"end": 17146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17126,
											"end": 17146,
											"name": "tag",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 17126,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17121,
											"end": 17146,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17121,
											"end": 17146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17160,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 17178,
											"end": 17179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17160,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 17160,
											"end": 17180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17160,
											"end": 17180,
											"name": "tag",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 17160,
											"end": 17180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17155,
											"end": 17180,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17155,
											"end": 17180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17203,
											"end": 17204,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17200,
											"end": 17201,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17196,
											"end": 17205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17189,
											"end": 17205,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17189,
											"end": 17205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17224,
											"end": 17227,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17221,
											"end": 17222,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17218,
											"end": 17228,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17215,
											"end": 17251,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17215,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 17215,
											"end": 17251,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17231,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "690"
										},
										{
											"begin": 17231,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 17231,
											"end": 17249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17231,
											"end": 17249,
											"name": "tag",
											"source": 12,
											"value": "690"
										},
										{
											"begin": 17231,
											"end": 17249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17215,
											"end": 17251,
											"name": "tag",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 17215,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17067,
											"end": 17258,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17067,
											"end": 17258,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17067,
											"end": 17258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17067,
											"end": 17258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17067,
											"end": 17258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17706,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 17264,
											"end": 17706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17413,
											"end": 17417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17451,
											"end": 17453,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 17440,
											"end": 17449,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17436,
											"end": 17454,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17428,
											"end": 17454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17428,
											"end": 17454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17464,
											"end": 17535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 17532,
											"end": 17533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17521,
											"end": 17530,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17517,
											"end": 17534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17508,
											"end": 17514,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17464,
											"end": 17535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 17464,
											"end": 17535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17464,
											"end": 17535,
											"name": "tag",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 17464,
											"end": 17535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17545,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 17613,
											"end": 17615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17602,
											"end": 17611,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17598,
											"end": 17616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17589,
											"end": 17595,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17545,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 17545,
											"end": 17617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17545,
											"end": 17617,
											"name": "tag",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 17545,
											"end": 17617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17627,
											"end": 17699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 17695,
											"end": 17697,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17684,
											"end": 17693,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17680,
											"end": 17698,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17671,
											"end": 17677,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17627,
											"end": 17699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 17627,
											"end": 17699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17627,
											"end": 17699,
											"name": "tag",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 17627,
											"end": 17699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17706,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17706,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17712,
											"end": 17906,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 17712,
											"end": 17906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17752,
											"end": 17756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17772,
											"end": 17792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "696"
										},
										{
											"begin": 17790,
											"end": 17791,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17772,
											"end": 17792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 17772,
											"end": 17792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17772,
											"end": 17792,
											"name": "tag",
											"source": 12,
											"value": "696"
										},
										{
											"begin": 17772,
											"end": 17792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17767,
											"end": 17792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17767,
											"end": 17792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17806,
											"end": 17826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 17824,
											"end": 17825,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17806,
											"end": 17826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 17806,
											"end": 17826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17806,
											"end": 17826,
											"name": "tag",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 17806,
											"end": 17826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17801,
											"end": 17826,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17801,
											"end": 17826,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 17851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17847,
											"end": 17848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17843,
											"end": 17852,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17835,
											"end": 17852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17835,
											"end": 17852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17874,
											"end": 17875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17868,
											"end": 17872,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17865,
											"end": 17876,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17862,
											"end": 17899,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17862,
											"end": 17899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 17862,
											"end": 17899,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17879,
											"end": 17897,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 17879,
											"end": 17897,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 17879,
											"end": 17897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17879,
											"end": 17897,
											"name": "tag",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 17879,
											"end": 17897,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17862,
											"end": 17899,
											"name": "tag",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 17862,
											"end": 17899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17712,
											"end": 17906,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17712,
											"end": 17906,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17712,
											"end": 17906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17712,
											"end": 17906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17712,
											"end": 17906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17912,
											"end": 18092,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 17912,
											"end": 18092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17960,
											"end": 18037,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17957,
											"end": 17958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17950,
											"end": 18038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18057,
											"end": 18061,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 18054,
											"end": 18055,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18047,
											"end": 18062,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18081,
											"end": 18085,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18078,
											"end": 18079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18071,
											"end": 18086,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18098,
											"end": 18278,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 18098,
											"end": 18278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18146,
											"end": 18223,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18143,
											"end": 18144,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18136,
											"end": 18224,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18243,
											"end": 18247,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 18240,
											"end": 18241,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18233,
											"end": 18248,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18267,
											"end": 18271,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18264,
											"end": 18265,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18257,
											"end": 18272,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"samples/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BLACKLIST_MANAGER_ROLE()": "410b2424",
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"FREEZE_MANAGER_ROLE()": "63f15649",
							"MINTER_ROLE()": "d5391393",
							"RECOVER_ROLE()": "939bcbc9",
							"addBlacklistManager(address)": "0eff2afc",
							"addBurner(address)": "f44637ba",
							"addFreezer(address)": "526606c9",
							"addMinter(address)": "983b2d56",
							"addRecoverer(address)": "c2134b23",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blacklistAccount(address)": "d37b34d7",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"freezeAccount(address)": "f26c159f",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"recover(address,address,uint256)": "1ec82cb8",
							"removeBlacklistManager(address)": "974b368c",
							"removeBurner(address)": "02846858",
							"removeFreezer(address)": "2acd2000",
							"removeFromBlacklist(address)": "537df3b6",
							"removeMinter(address)": "3092afd5",
							"removeRecoverer(address)": "d1c2de0a",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unfreezeAccount(address)": "788649ea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLACKLIST_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FREEZE_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RECOVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBlacklistManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addFreezer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addRecoverer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"blacklistAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBlacklistManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFreezer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeRecoverer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unfreezeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"samples/ERC20.sol\":\"ERC20PermissionsControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"samples/ERC20.sol\":{\"keccak256\":\"0x90ec9f121e60e81335f450d2931a4d24dd91ac11bd457eb265d49e32fb2a0ed2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://284b02c9de8efab0bf73771089bdf0108f8073ec975b5d8f36d6f575dded684f\",\"dweb:/ipfs/QmQDH67usioiiCqQXp4AMbnfMdCzcRbCvBYuDptA2n9qTS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 686,
								"contract": "samples/ERC20.sol:ERC20PermissionsControl",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 692,
								"contract": "samples/ERC20.sol:ERC20PermissionsControl",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 694,
								"contract": "samples/ERC20.sol:ERC20PermissionsControl",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 696,
								"contract": "samples/ERC20.sol:ERC20PermissionsControl",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 698,
								"contract": "samples/ERC20.sol:ERC20PermissionsControl",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "samples/ERC20.sol:ERC20PermissionsControl",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 387,
								"contract": "samples/ERC20.sol:ERC20PermissionsControl",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2005,
								"contract": "samples/ERC20.sol:ERC20PermissionsControl",
								"label": "frozenAccounts",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(AddressSet)1674_storage"
							},
							{
								"astId": 2008,
								"contract": "samples/ERC20.sol:ERC20PermissionsControl",
								"label": "blacklistedAccounts",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(AddressSet)1674_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)1674_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1673,
										"contract": "samples/ERC20.sol:ERC20PermissionsControl",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1359_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "samples/ERC20.sol:ERC20PermissionsControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "samples/ERC20.sol:ERC20PermissionsControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1359_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1354,
										"contract": "samples/ERC20.sol:ERC20PermissionsControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1358,
										"contract": "samples/ERC20.sol:ERC20PermissionsControl",
										"label": "_positions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1312
						],
						"ERC165": [
							1336
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1313,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1337,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1336,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1336,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1336,
								1348,
								378,
								1312
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1335,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1312
						],
						"Ownable": [
							526
						]
					},
					"id": 527,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 1313,
							"src": "128:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "136:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 384,
										"name": "Context",
										"nameLocations": [
											"692:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "692:7:2"
									},
									"id": 385,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 383,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 526,
							"linearizedBaseContracts": [
								526,
								1312
							],
							"name": "Ownable",
							"nameLocation": "681:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 387,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "706:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 386,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 392,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "858:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:2"
									},
									"src": "825:50:2"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 397,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "994:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:2"
									},
									"src": "968:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 403,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1042:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1073:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:2"
									},
									"src": "1015:84:2"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "1259:153:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "1273:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 410,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 423,
												"nodeType": "IfStatement",
												"src": "1269:95:2",
												"trueBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "1301:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 416,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 415,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "1322:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 421,
															"nodeType": "RevertStatement",
															"src": "1315:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1392:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 424,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "1373:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:2"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 429,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "1237:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:2"
									},
									"scope": 526,
									"src": "1225:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1521:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "1531:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:2"
											},
											{
												"id": 435,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:2"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 437,
									"name": "onlyOwner",
									"nameLocation": "1509:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:2"
									},
									"src": "1500:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1693:30:2",
										"statements": [
											{
												"expression": {
													"id": 443,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "1710:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 442,
												"id": 444,
												"nodeType": "Return",
												"src": "1703:13:2"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1684:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:2"
									},
									"scope": 526,
									"src": "1638:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "1841:117:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 450,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1855:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 452,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "1866:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "1851:101:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "1880:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 456,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "1928:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "1901:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 459,
															"nodeType": "RevertStatement",
															"src": "1894:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:2"
									},
									"scope": 526,
									"src": "1796:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2347:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 469,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2357:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:2"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 466,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "2337:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:2"
									},
									"scope": 526,
									"src": "2293:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "2613:145:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 485,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2627:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 486,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "2623:91:2",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "2651:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "2672:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "2665:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2742:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 500,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2723:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:2"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 482,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "2603:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2570:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:2"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:2"
									},
									"scope": 526,
									"src": "2543:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "2975:124:2",
										"statements": [
											{
												"assignments": [
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "2985:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 511,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 514,
												"initialValue": {
													"id": 513,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "3004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:2"
											},
											{
												"expression": {
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 515,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3020:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 516,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "3029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 520,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3073:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3083:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 519,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3052:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "EmitStatement",
												"src": "3047:45:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2940:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:2"
									},
									"scope": 526,
									"src": "2912:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 527,
							"src": "663:2438:2",
							"usedErrors": [
								392,
								397
							],
							"usedEvents": [
								403
							]
						}
					],
					"src": "102:3000:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							663
						],
						"IERC20Errors": [
							568
						],
						"IERC721Errors": [
							616
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 528,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 529,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 538,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 543,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 548,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 557,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 562,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 567,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 664,
							"src": "278:1764:3",
							"usedErrors": [
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 569,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 574,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 579,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 588,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 593,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 598,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 605,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 610,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 615,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 664,
							"src": "2186:2092:3",
							"usedErrors": [
								574,
								579,
								588,
								593,
								598,
								605,
								610,
								615
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 617,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 628,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 633,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 638,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 645,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 650,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 655,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 662,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 664,
							"src": "4424:2107:3",
							"usedErrors": [
								628,
								633,
								638,
								645,
								650,
								655,
								662
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1312
						],
						"ERC20": [
							1178
						],
						"IERC20": [
							1256
						],
						"IERC20Errors": [
							568
						],
						"IERC20Metadata": [
							1282
						]
					},
					"id": 1179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1257,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 666,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1256,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1283,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 668,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1282,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1313,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 670,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 664,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 672,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 568,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 675,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "1428:7:4"
									},
									"id": 676,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 677,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1256,
										"src": "1437:6:4"
									},
									"id": 678,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 679,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1282,
										"src": "1445:14:4"
									},
									"id": 680,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 681,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 568,
										"src": "1461:12:4"
									},
									"id": 682,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 674,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1178,
							"linearizedBaseContracts": [
								1178,
								568,
								1282,
								1256,
								1312
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 686,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 685,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 683,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 684,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 692,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 691,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 687,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 690,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 688,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 689,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 694,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 693,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 696,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 695,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 698,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 697,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 706,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 707,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 710,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 711,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 715,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 702,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 1178,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 721,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 696,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 720,
												"id": 722,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 1178,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 730,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 698,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 729,
												"id": 731,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 727,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 1178,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1281
									],
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 738,
												"id": 740,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 736,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 1178,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1205
									],
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 748,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 694,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 747,
												"id": 749,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 1178,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 759,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 761,
													"indexExpression": {
														"id": 760,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 758,
												"id": 762,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 1178,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 774,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 773,
												"id": 786,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 1178,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1233
									],
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 798,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 800,
														"indexExpression": {
															"id": 799,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 802,
													"indexExpression": {
														"id": 801,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 797,
												"id": 803,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 1178,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													816
												],
												"declarations": [
													{
														"constant": false,
														"id": 816,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 815,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 819,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 817,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 820,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1069,
															1129
														],
														"referencedDeclaration": 1069,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 814,
												"id": 827,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 1178,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1255
									],
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													842
												],
												"declarations": [
													{
														"constant": false,
														"id": 842,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 841,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 843,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 840,
												"id": 859,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 1178,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 871,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 872,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 878,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 877,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 883,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 893,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 892,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 898,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 1178,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 918,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 919,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																930
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 930,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 955,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 929,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 934,
															"initialValue": {
																"baseExpression": {
																	"id": 931,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 933,
																"indexExpression": {
																	"id": 932,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 935,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 936,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 945,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 944,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 939,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 911,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 940,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 941,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 915,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 938,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 943,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 954,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 946,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 948,
																			"indexExpression": {
																				"id": 947,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 949,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 930,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 950,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 915,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 953,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 924,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 925,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 927,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 957,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 958,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 976,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 975,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 969,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 971,
																			"indexExpression": {
																				"id": 970,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 913,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 974,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 977,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 963,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 964,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 979,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 978,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 1178,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1000,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 999,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1008,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 1178,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1026,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1027,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1033,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1032,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1038,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1042,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1043,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 1178,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1062,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1061,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1069,
															1129
														],
														"referencedDeclaration": 1129,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 1178,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1081,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1082,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1088,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1087,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1093,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1096,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1097,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1103,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1102,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1108,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1111,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1114,
															"indexExpression": {
																"id": 1112,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1115,
														"indexExpression": {
															"id": 1113,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1116,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 1119,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1121,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1122,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1123,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1120,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1077,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 1178,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"arguments": [
														{
															"id": 1142,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1141,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1147,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1153,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1154,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1163,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 1162,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1157,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1158,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1159,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1156,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 557,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1161,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 1173,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1167,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1168,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1164,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1069,
																				1129
																			],
																			"referencedDeclaration": 1129,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1172,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 1178,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1179,
							"src": "1401:9741:4",
							"usedErrors": [
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1256
						]
					},
					"id": 1257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1181,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1256,
							"linearizedBaseContracts": [
								1256
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1190,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1199,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1256,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 1256,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 1256,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 1256,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 1256,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 1256,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1257,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1256
						],
						"IERC20Metadata": [
							1282
						]
					},
					"id": 1283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1258,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1283,
							"sourceUnit": 1257,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1259,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1256,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1262,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1256,
										"src": "305:6:6"
									},
									"id": 1263,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1261,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1282,
							"linearizedBaseContracts": [
								1282,
								1256
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1282,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1282,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1278,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1282,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1283,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1312
						]
					},
					"id": 1313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1312,
							"linearizedBaseContracts": [
								1312
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1290,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1292,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1312,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1299,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1298,
												"id": 1301,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1312,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1307,
												"id": 1309,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1312,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1313,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1336
						],
						"IERC165": [
							1348
						]
					},
					"id": 1337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1349,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1315,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1348,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1318,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1348,
										"src": "687:7:8"
									},
									"id": 1319,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1317,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1336,
							"linearizedBaseContracts": [
								1336,
								1348
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1347
									],
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1329,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1348_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1348_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1328,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1348",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1333,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1336,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1337,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1348
						]
					},
					"id": 1349,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1339,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1348,
							"linearizedBaseContracts": [
								1348
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1348,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1349,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1961
						]
					},
					"id": 1962,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1350,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1351,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:10",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1961,
							"linearizedBaseContracts": [
								1961
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1359,
									"members": [
										{
											"constant": false,
											"id": 1354,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1359,
											"src": "1852:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1352,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1353,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1358,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1359,
											"src": "2020:44:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1357,
												"keyName": "value",
												"keyNameLocation": "2036:5:10",
												"keyType": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:10",
									"nodeType": "StructDefinition",
									"scope": 1961,
									"src": "1798:273:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "2310:337:10",
										"statements": [
											{
												"condition": {
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:10",
													"subExpression": {
														"arguments": [
															{
																"id": 1371,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "2335:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1372,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "2340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1370,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "2325:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1398,
													"nodeType": "Block",
													"src": "2604:37:10",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1369,
															"id": 1397,
															"nodeType": "Return",
															"src": "2618:12:10"
														}
													]
												},
												"id": 1399,
												"nodeType": "IfStatement",
												"src": "2320:321:10",
												"trueBody": {
													"id": 1395,
													"nodeType": "Block",
													"src": "2348:250:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1380,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "2379:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1375,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "2362:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:10",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "2362:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:10",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1382,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:10"
														},
														{
															"expression": {
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1383,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "2520:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:10",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1358,
																		"src": "2520:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1387,
																	"indexExpression": {
																		"id": 1385,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "2535:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1388,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "2544:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:10",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "2544:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1392,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:10"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1369,
															"id": 1394,
															"nodeType": "Return",
															"src": "2576:11:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2255:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1361,
														"name": "Set",
														"nameLocations": [
															"2255:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "2255:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "2255:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2272:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:10"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2304:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:10"
									},
									"scope": 1961,
									"src": "2241:406:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "2887:1296:10",
										"statements": [
											{
												"assignments": [
													1413
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "2991:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1418,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1414,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "3010:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1415,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:10",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1358,
														"src": "3010:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1417,
													"indexExpression": {
														"id": 1416,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "3025:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1419,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "3046:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1482,
													"nodeType": "Block",
													"src": "4140:37:10",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1411,
															"id": 1481,
															"nodeType": "Return",
															"src": "4154:12:10"
														}
													]
												},
												"id": 1483,
												"nodeType": "IfStatement",
												"src": "3042:1135:10",
												"trueBody": {
													"id": 1479,
													"nodeType": "Block",
													"src": "3061:1073:10",
													"statements": [
														{
															"assignments": [
																1423
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1423,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1479,
																	"src": "3413:18:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1422,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1427,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1424,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "3434:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:10"
														},
														{
															"assignments": [
																1429
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1429,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1479,
																	"src": "3460:17:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1428,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1435,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1430,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "3480:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:10",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "3480:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1436,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "3521:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1437,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "3535:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1463,
															"nodeType": "IfStatement",
															"src": "3517:378:10",
															"trueBody": {
																"id": 1462,
																"nodeType": "Block",
																"src": "3546:349:10",
																"statements": [
																	{
																		"assignments": [
																			1440
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1440,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1462,
																				"src": "3564:17:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1439,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1445,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1441,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1405,
																					"src": "3584:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1442,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:10",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1354,
																				"src": "3584:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1444,
																			"indexExpression": {
																				"id": 1443,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1429,
																				"src": "3596:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:10"
																	},
																	{
																		"expression": {
																			"id": 1452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1446,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1405,
																						"src": "3705:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1449,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:10",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1354,
																					"src": "3705:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1450,
																				"indexExpression": {
																					"id": 1448,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "3717:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1451,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1440,
																				"src": "3731:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1453,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:10"
																	},
																	{
																		"expression": {
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1454,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1405,
																						"src": "3844:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1457,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:10",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1358,
																					"src": "3844:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1458,
																				"indexExpression": {
																					"id": 1456,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1440,
																					"src": "3859:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1459,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1413,
																				"src": "3872:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1461,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:10"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1464,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "3973:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:10",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "3973:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:10",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1470,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:10"
														},
														{
															"expression": {
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:10",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1471,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "4076:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:10",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1358,
																		"src": "4076:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1474,
																	"indexExpression": {
																		"id": 1473,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "4091:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1476,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:10"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1411,
															"id": 1478,
															"nodeType": "Return",
															"src": "4112:11:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "2832:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1403,
														"name": "Set",
														"nameLocations": [
															"2832:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "2832:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "2832:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "2849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1406,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:10"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "2881:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:10"
									},
									"scope": 1961,
									"src": "2815:1368:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "4343:50:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1496,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "4360:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:10",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1358,
															"src": "4360:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1499,
														"indexExpression": {
															"id": 1498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "4375:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1502,
												"nodeType": "Return",
												"src": "4353:33:10"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "4283:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1487,
														"name": "Set",
														"nameLocations": [
															"4283:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "4283:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "4283:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "4300:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:10"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "4337:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:10"
									},
									"scope": 1961,
									"src": "4264:129:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "4539:42:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1513,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "4556:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:10",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1354,
														"src": "4556:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:10",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1516,
												"nodeType": "Return",
												"src": "4549:25:10"
											}
										]
									},
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:10",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "4491:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1507,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1506,
														"name": "Set",
														"nameLocations": [
															"4491:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "4491:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "4491:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:10"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "4530:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:10"
									},
									"scope": 1961,
									"src": "4474:107:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "4999:42:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1529,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "5016:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:10",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1354,
														"src": "5016:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1532,
													"indexExpression": {
														"id": 1531,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "5028:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1528,
												"id": 1533,
												"nodeType": "Return",
												"src": "5009:25:10"
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "4936:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1520,
														"name": "Set",
														"nameLocations": [
															"4936:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "4936:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "4936:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "4953:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:10"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "4990:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:10"
									},
									"scope": 1961,
									"src": "4923:118:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "5655:35:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1545,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "5672:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:10",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1354,
													"src": "5672:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1544,
												"id": 1547,
												"nodeType": "Return",
												"src": "5665:18:10"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:10",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "5598:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1537,
														"name": "Set",
														"nameLocations": [
															"5598:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "5598:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "5598:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:10"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "5637:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1541,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1542,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:10"
									},
									"scope": 1961,
									"src": "5581:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1553,
									"members": [
										{
											"constant": false,
											"id": 1552,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "5743:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1551,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1550,
													"name": "Set",
													"nameLocations": [
														"5743:3:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1359,
													"src": "5743:3:10"
												},
												"referencedDeclaration": 1359,
												"src": "5743:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:10",
									"nodeType": "StructDefinition",
									"scope": 1961,
									"src": "5715:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "6006:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1565,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "6028:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "6028:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1567,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "6040:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1564,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "6023:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1569,
												"nodeType": "Return",
												"src": "6016:30:10"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5943:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1556,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1555,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "5943:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "5943:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5967:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:10"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "6000:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:10"
									},
									"scope": 1961,
									"src": "5930:123:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "6300:50:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1583,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "6325:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "6325:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1585,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "6337:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1582,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "6317:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1587,
												"nodeType": "Return",
												"src": "6310:33:10"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "6237:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1573,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "6237:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "6237:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "6261:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1576,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:10"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "6294:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:10"
									},
									"scope": 1961,
									"src": "6221:129:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "6517:52:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1601,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "6544:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "6544:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1603,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "6556:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1600,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "6534:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1599,
												"id": 1605,
												"nodeType": "Return",
												"src": "6527:35:10"
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "6449:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1591,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "6449:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "6449:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "6473:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1594,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:10"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "6511:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:10"
									},
									"scope": 1961,
									"src": "6431:138:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "6722:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1617,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "6747:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "6747:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1616,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "6739:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1615,
												"id": 1620,
												"nodeType": "Return",
												"src": "6732:26:10"
											}
										]
									},
									"documentation": {
										"id": 1608,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:10",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "6666:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1609,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "6666:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "6666:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:10"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "6713:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:10"
									},
									"scope": 1961,
									"src": "6650:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "7190:46:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1634,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "7211:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "7211:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1636,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "7223:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1633,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "7207:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1632,
												"id": 1638,
												"nodeType": "Return",
												"src": "7200:29:10"
											}
										]
									},
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "7119:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1624,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "7119:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "7119:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "7143:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:10"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "7181:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:10"
									},
									"scope": 1961,
									"src": "7107:129:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "7857:219:10",
										"statements": [
											{
												"assignments": [
													1654
												],
												"declarations": [
													{
														"constant": false,
														"id": 1654,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "7867:22:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1652,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1653,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1656,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "7900:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "7900:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1655,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "7892:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:10"
											},
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "7921:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1662,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1663,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:10"
											},
											{
												"AST": {
													"nativeSrc": "8007:39:10",
													"nodeType": "YulBlock",
													"src": "8007:39:10",
													"statements": [
														{
															"nativeSrc": "8021:15:10",
															"nodeType": "YulAssignment",
															"src": "8021:15:10",
															"value": {
																"name": "store",
																"nativeSrc": "8031:5:10",
																"nodeType": "YulIdentifier",
																"src": "8031:5:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8021:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1664,
														"isOffset": false,
														"isSlot": false,
														"src": "8021:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1654,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:5:10",
														"valueSize": 1
													}
												],
												"id": 1666,
												"nodeType": "InlineAssembly",
												"src": "7998:48:10"
											},
											{
												"expression": {
													"id": 1667,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1664,
													"src": "8063:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1649,
												"id": 1668,
												"nodeType": "Return",
												"src": "8056:13:10"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:10",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "7792:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1642,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "7792:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "7792:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:10"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "7839:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1646,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1647,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:10"
									},
									"scope": 1961,
									"src": "7776:300:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1674,
									"members": [
										{
											"constant": false,
											"id": 1673,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8133:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1674,
											"src": "8129:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1672,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1671,
													"name": "Set",
													"nameLocations": [
														"8129:3:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1359,
													"src": "8129:3:10"
												},
												"referencedDeclaration": 1359,
												"src": "8129:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8108:10:10",
									"nodeType": "StructDefinition",
									"scope": 1961,
									"src": "8101:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "8392:74:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1686,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1678,
																"src": "8414:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8418:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "8414:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1694,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1680,
																					"src": "8450:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8442:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1692,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8442:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8442:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8434:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1690,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8434:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8434:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8426:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1688,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8426:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8426:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1685,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "8409:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1684,
												"id": 1699,
												"nodeType": "Return",
												"src": "8402:57:10"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "8152:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8325:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8348:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "8329:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1676,
														"name": "AddressSet",
														"nameLocations": [
															"8329:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "8329:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "8329:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8361:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "8353:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:39:10"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "8386:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8386:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8385:6:10"
									},
									"scope": 1961,
									"src": "8316:150:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "8713:77:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1713,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "8738:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8742:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "8738:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1721,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1707,
																					"src": "8774:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8766:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1719,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8766:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8766:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8758:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1717,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8758:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8758:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8750:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1715,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8750:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8750:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1712,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "8730:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8730:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1726,
												"nodeType": "Return",
												"src": "8723:60:10"
											}
										]
									},
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "8472:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8643:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8669:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "8650:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1703,
														"name": "AddressSet",
														"nameLocations": [
															"8650:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "8650:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "8650:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8682:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "8674:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:39:10"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "8707:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1709,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8707:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8706:6:10"
									},
									"scope": 1961,
									"src": "8634:156:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "8957:79:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1740,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "8984:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8988:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "8984:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1748,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1734,
																					"src": "9020:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9012:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1746,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9012:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9012:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9004:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1744,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9004:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9004:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8996:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1742,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8996:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8996:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1739,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "8974:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1738,
												"id": 1753,
												"nodeType": "Return",
												"src": "8967:62:10"
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "8796:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8880:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8908:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "8889:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1731,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1730,
														"name": "AddressSet",
														"nameLocations": [
															"8889:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "8889:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "8889:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8921:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "8913:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8913:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:39:10"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "8951:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:10"
									},
									"scope": 1961,
									"src": "8871:165:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "9189:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1765,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "9214:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9218:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "9214:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1764,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "9206:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1763,
												"id": 1768,
												"nodeType": "Return",
												"src": "9199:26:10"
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "9042:70:10",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9126:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9152:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "9133:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1758,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1757,
														"name": "AddressSet",
														"nameLocations": [
															"9133:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "9133:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "9133:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:24:10"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "9180:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:9:10"
									},
									"scope": 1961,
									"src": "9117:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "9657:73:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1788,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1774,
																						"src": "9702:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1789,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9706:6:10",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1673,
																					"src": "9702:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1359_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1790,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1776,
																					"src": "9714:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1359_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1787,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1535,
																				"src": "9698:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:22:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9690:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1785,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9690:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:31:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1783,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9682:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:40:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9674:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1781,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9674:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9674:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1780,
												"id": 1795,
												"nodeType": "Return",
												"src": "9667:56:10"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "9238:331:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9583:2:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9605:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "9586:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1772,
														"name": "AddressSet",
														"nameLocations": [
															"9586:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "9586:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "9586:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9618:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "9610:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9585:39:10"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "9648:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:9:10"
									},
									"scope": 1961,
									"src": "9574:156:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "10351:219:10",
										"statements": [
											{
												"assignments": [
													1811
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10378:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1826,
														"src": "10361:22:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1809,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10361:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1810,
															"nodeType": "ArrayTypeName",
															"src": "10361:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1816,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1813,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "10394:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10398:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "10394:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1812,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "10386:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10386:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10361:44:10"
											},
											{
												"assignments": [
													1821
												],
												"declarations": [
													{
														"constant": false,
														"id": 1821,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10432:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1826,
														"src": "10415:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1819,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10415:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1820,
															"nodeType": "ArrayTypeName",
															"src": "10415:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1822,
												"nodeType": "VariableDeclarationStatement",
												"src": "10415:23:10"
											},
											{
												"AST": {
													"nativeSrc": "10501:39:10",
													"nodeType": "YulBlock",
													"src": "10501:39:10",
													"statements": [
														{
															"nativeSrc": "10515:15:10",
															"nodeType": "YulAssignment",
															"src": "10515:15:10",
															"value": {
																"name": "store",
																"nativeSrc": "10525:5:10",
																"nodeType": "YulIdentifier",
																"src": "10525:5:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10515:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "10515:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1811,
														"isOffset": false,
														"isSlot": false,
														"src": "10525:5:10",
														"valueSize": 1
													}
												],
												"id": 1823,
												"nodeType": "InlineAssembly",
												"src": "10492:48:10"
											},
											{
												"expression": {
													"id": 1824,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1821,
													"src": "10557:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1806,
												"id": 1825,
												"nodeType": "Return",
												"src": "10550:13:10"
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "9736:529:10",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10279:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10305:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "10286:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1799,
														"name": "AddressSet",
														"nameLocations": [
															"10286:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "10286:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "10286:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10285:24:10"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "10333:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1803,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10333:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1804,
													"nodeType": "ArrayTypeName",
													"src": "10333:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:18:10"
									},
									"scope": 1961,
									"src": "10270:300:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1831,
									"members": [
										{
											"constant": false,
											"id": 1830,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10621:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1831,
											"src": "10617:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1829,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1828,
													"name": "Set",
													"nameLocations": [
														"10617:3:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1359,
													"src": "10617:3:10"
												},
												"referencedDeclaration": 1359,
												"src": "10617:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10599:7:10",
									"nodeType": "StructDefinition",
									"scope": 1961,
									"src": "10592:42:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "10877:56:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1843,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "10899:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10903:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "10899:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1847,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "10919:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10911:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1845,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10911:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10911:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1842,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "10894:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10894:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1841,
												"id": 1850,
												"nodeType": "Return",
												"src": "10887:39:10"
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "10640:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10813:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10833:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "10817:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1833,
														"name": "UintSet",
														"nameLocations": [
															"10817:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "10817:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "10817:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10846:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "10838:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:36:10"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "10871:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10871:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10870:6:10"
									},
									"scope": 1961,
									"src": "10804:129:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "11177:59:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1864,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "11202:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11206:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "11202:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1868,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1858,
																	"src": "11222:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11214:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1866,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11214:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1863,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "11194:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1862,
												"id": 1871,
												"nodeType": "Return",
												"src": "11187:42:10"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "10939:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11110:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11133:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "11117:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1854,
														"name": "UintSet",
														"nameLocations": [
															"11117:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "11117:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "11117:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11146:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "11138:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:36:10"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "11171:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:6:10"
									},
									"scope": 1961,
									"src": "11101:135:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "11400:61:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1885,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1877,
																"src": "11427:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11431:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "11427:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "11447:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11439:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1887,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11439:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11439:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1884,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "11417:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1883,
												"id": 1892,
												"nodeType": "Return",
												"src": "11410:44:10"
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "11242:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11326:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11351:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "11335:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1875,
														"name": "UintSet",
														"nameLocations": [
															"11335:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "11335:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "11335:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11364:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "11356:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:36:10"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "11394:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:6:10"
									},
									"scope": 1961,
									"src": "11317:144:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "11611:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1904,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "11636:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11640:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "11636:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1903,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "11628:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1902,
												"id": 1907,
												"nodeType": "Return",
												"src": "11621:26:10"
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "11467:70:10",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11551:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11574:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "11558:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1896,
														"name": "UintSet",
														"nameLocations": [
															"11558:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "11558:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "11558:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:21:10"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "11602:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:9:10"
									},
									"scope": 1961,
									"src": "11542:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "12076:55:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1923,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "12105:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1924,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12109:6:10",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1830,
																	"src": "12105:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1359_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1925,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "12117:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1359_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1922,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "12101:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12101:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12093:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12093:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1919,
												"id": 1928,
												"nodeType": "Return",
												"src": "12086:38:10"
											}
										]
									},
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "11660:331:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12005:2:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12024:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "12008:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1911,
														"name": "UintSet",
														"nameLocations": [
															"12008:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "12008:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "12008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12037:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "12029:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:36:10"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "12067:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12066:9:10"
									},
									"scope": 1961,
									"src": "11996:135:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "12749:219:10",
										"statements": [
											{
												"assignments": [
													1944
												],
												"declarations": [
													{
														"constant": false,
														"id": 1944,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12776:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "12759:22:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1942,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1943,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1949,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1946,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "12792:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12796:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "12792:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1945,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "12784:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12784:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:44:10"
											},
											{
												"assignments": [
													1954
												],
												"declarations": [
													{
														"constant": false,
														"id": 1954,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12830:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "12813:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1952,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12813:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1953,
															"nodeType": "ArrayTypeName",
															"src": "12813:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1955,
												"nodeType": "VariableDeclarationStatement",
												"src": "12813:23:10"
											},
											{
												"AST": {
													"nativeSrc": "12899:39:10",
													"nodeType": "YulBlock",
													"src": "12899:39:10",
													"statements": [
														{
															"nativeSrc": "12913:15:10",
															"nodeType": "YulAssignment",
															"src": "12913:15:10",
															"value": {
																"name": "store",
																"nativeSrc": "12923:5:10",
																"nodeType": "YulIdentifier",
																"src": "12923:5:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12913:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1954,
														"isOffset": false,
														"isSlot": false,
														"src": "12913:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1944,
														"isOffset": false,
														"isSlot": false,
														"src": "12923:5:10",
														"valueSize": 1
													}
												],
												"id": 1956,
												"nodeType": "InlineAssembly",
												"src": "12890:48:10"
											},
											{
												"expression": {
													"id": 1957,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1954,
													"src": "12955:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1939,
												"id": 1958,
												"nodeType": "Return",
												"src": "12948:13:10"
											}
										]
									},
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "12137:529:10",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12680:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12703:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "12687:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1933,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1932,
														"name": "UintSet",
														"nameLocations": [
															"12687:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "12687:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "12687:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12686:21:10"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "12731:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1936,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12731:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1937,
													"nodeType": "ArrayTypeName",
													"src": "12731:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:18:10"
									},
									"scope": 1961,
									"src": "12671:297:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1962,
							"src": "1330:11640:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12766:10"
				},
				"id": 10
			},
			"samples/ERC20.sol": {
				"ast": {
					"absolutePath": "samples/ERC20.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1312
						],
						"ERC165": [
							1336
						],
						"ERC20": [
							1178
						],
						"ERC20PermissionsControl": [
							2417
						],
						"EnumerableSet": [
							1961
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1256
						],
						"IERC20Errors": [
							568
						],
						"IERC20Metadata": [
							1282
						],
						"Ownable": [
							526
						]
					},
					"id": 2418,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1963,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1964,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2418,
							"sourceUnit": 1179,
							"src": "74:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1965,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2418,
							"sourceUnit": 296,
							"src": "131:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 1966,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2418,
							"sourceUnit": 1962,
							"src": "191:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1967,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2418,
							"sourceUnit": 527,
							"src": "258:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1968,
										"name": "ERC20",
										"nameLocations": [
											"350:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "350:5:11"
									},
									"id": 1969,
									"nodeType": "InheritanceSpecifier",
									"src": "350:5:11"
								},
								{
									"baseName": {
										"id": 1970,
										"name": "AccessControl",
										"nameLocations": [
											"357:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "357:13:11"
									},
									"id": 1971,
									"nodeType": "InheritanceSpecifier",
									"src": "357:13:11"
								},
								{
									"baseName": {
										"id": 1972,
										"name": "Ownable",
										"nameLocations": [
											"372:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 526,
										"src": "372:7:11"
									},
									"id": 1973,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:11"
								}
							],
							"canonicalName": "ERC20PermissionsControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2417,
							"linearizedBaseContracts": [
								2417,
								526,
								295,
								1336,
								1348,
								378,
								1178,
								568,
								1282,
								1256,
								1312
							],
							"name": "ERC20PermissionsControl",
							"nameLocation": "323:23:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1977,
									"libraryName": {
										"id": 1974,
										"name": "EnumerableSet",
										"nameLocations": [
											"393:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1961,
										"src": "393:13:11"
									},
									"nodeType": "UsingForDirective",
									"src": "387:49:11",
									"typeName": {
										"id": 1976,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1975,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"411:13:11",
												"425:10:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1674,
											"src": "411:24:11"
										},
										"referencedDeclaration": 1674,
										"src": "411:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1982,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "496:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2417,
									"src": "472:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1978,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "472:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1980,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "520:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1979,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "510:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1981,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "510:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1987,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "565:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2417,
									"src": "541:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1983,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "541:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1985,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "589:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1984,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "579:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1986,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "579:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "63f15649",
									"id": 1992,
									"mutability": "constant",
									"name": "FREEZE_MANAGER_ROLE",
									"nameLocation": "634:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 2417,
									"src": "610:78:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1988,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "610:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "465245455a455f4d414e414745525f524f4c45",
												"id": 1990,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "666:21:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35",
													"typeString": "literal_string \"FREEZE_MANAGER_ROLE\""
												},
												"value": "FREEZE_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_109b88c1c8d528799ca6f455418979dd2a552493f14553ce44443b23f7df8b35",
													"typeString": "literal_string \"FREEZE_MANAGER_ROLE\""
												}
											],
											"id": 1989,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "656:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1991,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "656:32:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "410b2424",
									"id": 1997,
									"mutability": "constant",
									"name": "BLACKLIST_MANAGER_ROLE",
									"nameLocation": "719:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 2417,
									"src": "695:84:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1993,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "424c41434b4c4953545f4d414e414745525f524f4c45",
												"id": 1995,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "754:24:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee",
													"typeString": "literal_string \"BLACKLIST_MANAGER_ROLE\""
												},
												"value": "BLACKLIST_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee",
													"typeString": "literal_string \"BLACKLIST_MANAGER_ROLE\""
												}
											],
											"id": 1994,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "744:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1996,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "744:35:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "939bcbc9",
									"id": 2002,
									"mutability": "constant",
									"name": "RECOVER_ROLE",
									"nameLocation": "810:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2417,
									"src": "786:64:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1998,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "786:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5245434f5645525f524f4c45",
												"id": 2000,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "835:14:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066",
													"typeString": "literal_string \"RECOVER_ROLE\""
												},
												"value": "RECOVER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066",
													"typeString": "literal_string \"RECOVER_ROLE\""
												}
											],
											"id": 1999,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "825:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2001,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "825:25:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2005,
									"mutability": "mutable",
									"name": "frozenAccounts",
									"nameLocation": "914:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2417,
									"src": "881:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 2004,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2003,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"881:13:11",
												"895:10:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1674,
											"src": "881:24:11"
										},
										"referencedDeclaration": 1674,
										"src": "881:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2008,
									"mutability": "mutable",
									"name": "blacklistedAccounts",
									"nameLocation": "968:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 2417,
									"src": "935:52:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 2007,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2006,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"935:13:11",
												"949:10:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1674,
											"src": "935:24:11"
										},
										"referencedDeclaration": 1674,
										"src": "935:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "1264:61:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2024,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1286:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2025,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1306:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1310:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1306:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2023,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1275:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "1275:42:11"
											}
										]
									},
									"id": 2030,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2015,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2010,
													"src": "1215:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2016,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2012,
													"src": "1221:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2017,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2014,
												"name": "ERC20",
												"nameLocations": [
													"1209:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1178,
												"src": "1209:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1209:19:11"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 2019,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1247:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1251:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1247:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2021,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2018,
												"name": "Ownable",
												"nameLocations": [
													"1239:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 526,
												"src": "1239:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1239:19:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1171:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "1157:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1157:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1191:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "1177:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2011,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1177:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:42:11"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1264:0:11"
									},
									"scope": 2417,
									"src": "1145:180:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2045,
										"nodeType": "Block",
										"src": "1451:36:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2041,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "1468:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2042,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "1472:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2040,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1462:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2044,
												"nodeType": "ExpressionStatement",
												"src": "1462:17:11"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2046,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2037,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1982,
													"src": "1438:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2038,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2036,
												"name": "onlyRole",
												"nameLocations": [
													"1429:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1429:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1429:21:11"
										}
									],
									"name": "mint",
									"nameLocation": "1387:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1400:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "1392:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1412:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "1404:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:28:11"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:0:11"
									},
									"scope": 2417,
									"src": "1378:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "1612:38:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2057,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "1629:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2058,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "1635:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2056,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "1623:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2060,
												"nodeType": "ExpressionStatement",
												"src": "1623:19:11"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 2062,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2053,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1987,
													"src": "1599:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2054,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2052,
												"name": "onlyRole",
												"nameLocations": [
													"1590:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1590:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1590:21:11"
										}
									],
									"name": "burn",
									"nameLocation": "1546:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1559:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "1551:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1573:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "1565:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:30:11"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1612:0:11"
									},
									"scope": 2417,
									"src": "1537:113:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "1897:128:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1916:33:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2073,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2064,
																		"src": "1941:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2071,
																		"name": "frozenAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "1917:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1932:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "1917:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1917:32:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c72656164792066726f7a656e",
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1951:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
																"typeString": "literal_string \"Account is already frozen\""
															},
															"value": "Account is already frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
																"typeString": "literal_string \"Account is already frozen\""
															}
														],
														"id": 2070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1908:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1908:71:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "1908:71:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2082,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "2009:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2079,
															"name": "frozenAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "1990:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2005:3:11",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "1990:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2084,
												"nodeType": "ExpressionStatement",
												"src": "1990:27:11"
											}
										]
									},
									"functionSelector": "f26c159f",
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2067,
													"name": "FREEZE_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1992,
													"src": "1876:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2068,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2066,
												"name": "onlyRole",
												"nameLocations": [
													"1867:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1867:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1867:29:11"
										}
									],
									"name": "freezeAccount",
									"nameLocation": "1827:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1849:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "1841:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:17:11"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:0:11"
									},
									"scope": 2417,
									"src": "1818:207:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "2181:126:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2097,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "2224:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2095,
																	"name": "frozenAccounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "2200:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2215:8:11",
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1755,
																"src": "2200:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																}
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2200:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74206973206e6f742066726f7a656e",
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2234:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
																"typeString": "literal_string \"Account is not frozen\""
															},
															"value": "Account is not frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
																"typeString": "literal_string \"Account is not frozen\""
															}
														],
														"id": 2094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2192:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2101,
												"nodeType": "ExpressionStatement",
												"src": "2192:66:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2105,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "2291:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2102,
															"name": "frozenAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "2269:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2284:6:11",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1728,
														"src": "2269:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2269:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2107,
												"nodeType": "ExpressionStatement",
												"src": "2269:30:11"
											}
										]
									},
									"functionSelector": "788649ea",
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2091,
													"name": "FREEZE_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1992,
													"src": "2160:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2090,
												"name": "onlyRole",
												"nameLocations": [
													"2151:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2151:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2151:29:11"
										}
									],
									"name": "unfreezeAccount",
									"nameLocation": "2109:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2133:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "2125:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:17:11"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:0:11"
									},
									"scope": 2417,
									"src": "2100:207:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "2593:143:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2612:38:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2120,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2111,
																		"src": "2642:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2118,
																		"name": "blacklistedAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "2613:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2633:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "2613:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2613:37:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c726561647920626c61636b6c6973746564",
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2652:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
																"typeString": "literal_string \"Account is already blacklisted\""
															},
															"value": "Account is already blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
																"typeString": "literal_string \"Account is already blacklisted\""
															}
														],
														"id": 2117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2604:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2604:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2125,
												"nodeType": "ExpressionStatement",
												"src": "2604:81:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2129,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "2720:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2126,
															"name": "blacklistedAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "2696:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2128,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2716:3:11",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "2696:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2696:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "2696:32:11"
											}
										]
									},
									"functionSelector": "d37b34d7",
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2114,
													"name": "BLACKLIST_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1997,
													"src": "2569:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2113,
												"name": "onlyRole",
												"nameLocations": [
													"2560:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2560:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2560:32:11"
										}
									],
									"name": "blacklistAccount",
									"nameLocation": "2517:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2542:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "2534:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2534:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2533:17:11"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2593:0:11"
									},
									"scope": 2417,
									"src": "2508:228:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2155,
										"nodeType": "Block",
										"src": "2904:141:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2144,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "2952:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2142,
																	"name": "blacklistedAccounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "2923:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2943:8:11",
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1755,
																"src": "2923:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																}
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2923:37:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74206973206e6f7420626c61636b6c6973746564",
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2962:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
																"typeString": "literal_string \"Account is not blacklisted\""
															},
															"value": "Account is not blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
																"typeString": "literal_string \"Account is not blacklisted\""
															}
														],
														"id": 2141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2915:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2915:76:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2148,
												"nodeType": "ExpressionStatement",
												"src": "2915:76:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2152,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "3029:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2149,
															"name": "blacklistedAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3002:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3022:6:11",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1728,
														"src": "3002:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3002:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2154,
												"nodeType": "ExpressionStatement",
												"src": "3002:35:11"
											}
										]
									},
									"functionSelector": "537df3b6",
									"id": 2156,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2138,
													"name": "BLACKLIST_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1997,
													"src": "2880:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2137,
												"name": "onlyRole",
												"nameLocations": [
													"2871:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2871:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2871:32:11"
										}
									],
									"name": "removeFromBlacklist",
									"nameLocation": "2825:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2853:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "2845:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2845:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:17:11"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2904:0:11"
									},
									"scope": 2417,
									"src": "2816:229:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "3270:93:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2169,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "3291:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2170,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "3297:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2171,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "3301:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2168,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "3281:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3281:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2173,
												"nodeType": "ExpressionStatement",
												"src": "3281:27:11"
											}
										]
									},
									"functionSelector": "1ec82cb8",
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2165,
													"name": "RECOVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2002,
													"src": "3256:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2164,
												"name": "onlyRole",
												"nameLocations": [
													"3247:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3247:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3247:22:11"
										}
									],
									"name": "recover",
									"nameLocation": "3188:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3204:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3196:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3218:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3210:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3230:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3222:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3222:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:42:11"
									},
									"returnParameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3270:0:11"
									},
									"scope": 2417,
									"src": "3179:184:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										788
									],
									"body": {
										"id": 2229,
										"nodeType": "Block",
										"src": "3514:443:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3533:36:11",
															"subExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2188,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3558:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3562:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3558:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2186,
																		"name": "frozenAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "3534:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3549:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "3534:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206163636f756e742069732066726f7a656e",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3571:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6",
																"typeString": "literal_string \"Sender account is frozen\""
															},
															"value": "Sender account is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6",
																"typeString": "literal_string \"Sender account is frozen\""
															}
														],
														"id": 2185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3525:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3525:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "ExpressionStatement",
												"src": "3525:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3617:28:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2198,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2177,
																		"src": "3642:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2196,
																		"name": "frozenAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "3618:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2197,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3633:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "3618:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3618:27:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e74206163636f756e742069732066726f7a656e",
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3647:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc",
																"typeString": "literal_string \"Recipient account is frozen\""
															},
															"value": "Recipient account is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc",
																"typeString": "literal_string \"Recipient account is frozen\""
															}
														],
														"id": 2195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3609:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3609:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2203,
												"nodeType": "ExpressionStatement",
												"src": "3609:68:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3696:41:11",
															"subExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2207,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3726:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3730:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3726:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2205,
																		"name": "blacklistedAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "3697:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3717:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "3697:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3697:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206163636f756e7420697320626c61636b6c6973746564",
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3739:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c",
																"typeString": "literal_string \"Sender account is blacklisted\""
															},
															"value": "Sender account is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c",
																"typeString": "literal_string \"Sender account is blacklisted\""
															}
														],
														"id": 2204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3688:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3688:83:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2213,
												"nodeType": "ExpressionStatement",
												"src": "3688:83:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3790:33:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2217,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2177,
																		"src": "3820:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2215,
																		"name": "blacklistedAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "3791:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3811:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "3791:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3791:32:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e74206163636f756e7420697320626c61636b6c6973746564",
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3825:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab",
																"typeString": "literal_string \"Recipient account is blacklisted\""
															},
															"value": "Recipient account is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab",
																"typeString": "literal_string \"Recipient account is blacklisted\""
															}
														],
														"id": 2214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3782:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3782:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2222,
												"nodeType": "ExpressionStatement",
												"src": "3782:78:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2225,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "3895:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2226,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2179,
															"src": "3899:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2223,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3880:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20PermissionsControl_$2417_$",
																"typeString": "type(contract super ERC20PermissionsControl)"
															}
														},
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3886:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 788,
														"src": "3880:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3880:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2184,
												"id": 2228,
												"nodeType": "Return",
												"src": "3873:33:11"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3446:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3490:8:11"
									},
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3463:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "3455:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3475:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "3467:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:28:11"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "3508:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3508:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:6:11"
									},
									"scope": 2417,
									"src": "3437:520:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										861
									],
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "4130:445:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4149:30:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2245,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2232,
																		"src": "4174:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2243,
																		"name": "frozenAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "4150:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4165:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "4150:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4150:29:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206163636f756e742069732066726f7a656e",
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4181:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6",
																"typeString": "literal_string \"Sender account is frozen\""
															},
															"value": "Sender account is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6",
																"typeString": "literal_string \"Sender account is frozen\""
															}
														],
														"id": 2242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4141:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4141:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "4141:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4227:28:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2254,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "4252:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2252,
																		"name": "frozenAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "4228:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4243:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "4228:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4228:27:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e74206163636f756e742069732066726f7a656e",
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4257:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc",
																"typeString": "literal_string \"Recipient account is frozen\""
															},
															"value": "Recipient account is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35632bfb1f76bb2d87c011edebf502401cf80df0336353247f28176a3ecf89cc",
																"typeString": "literal_string \"Recipient account is frozen\""
															}
														],
														"id": 2251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4219:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4219:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2259,
												"nodeType": "ExpressionStatement",
												"src": "4219:68:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4306:35:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2263,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2232,
																		"src": "4336:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2261,
																		"name": "blacklistedAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "4307:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2262,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4327:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "4307:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4307:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206163636f756e7420697320626c61636b6c6973746564",
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4343:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c",
																"typeString": "literal_string \"Sender account is blacklisted\""
															},
															"value": "Sender account is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c",
																"typeString": "literal_string \"Sender account is blacklisted\""
															}
														],
														"id": 2260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4298:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4298:77:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2268,
												"nodeType": "ExpressionStatement",
												"src": "4298:77:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4394:33:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2272,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "4424:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2270,
																		"name": "blacklistedAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "4395:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4415:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "4395:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4395:32:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e74206163636f756e7420697320626c61636b6c6973746564",
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4429:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab",
																"typeString": "literal_string \"Recipient account is blacklisted\""
															},
															"value": "Recipient account is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab",
																"typeString": "literal_string \"Recipient account is blacklisted\""
															}
														],
														"id": 2269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4386:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4386:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2277,
												"nodeType": "ExpressionStatement",
												"src": "4386:78:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2280,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "4503:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2281,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "4509:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2282,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "4513:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2278,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4484:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20PermissionsControl_$2417_$",
																"typeString": "type(contract super ERC20PermissionsControl)"
															}
														},
														"id": 2279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4490:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "4484:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4484:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2241,
												"id": 2284,
												"nodeType": "Return",
												"src": "4477:43:11"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4044:12:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2238,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4106:8:11"
									},
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4065:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4057:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4057:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4079:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4071:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4071:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4091:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4083:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4056:42:11"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4124:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4124:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4123:6:11"
									},
									"scope": 2417,
									"src": "4035:540:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "4759:50:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2294,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "4780:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2295,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2288,
															"src": "4793:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2293,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "4770:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4770:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "4770:31:11"
											}
										]
									},
									"functionSelector": "983b2d56",
									"id": 2299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2291,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2290,
												"name": "onlyOwner",
												"nameLocations": [
													"4749:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "4749:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4749:9:11"
										}
									],
									"name": "addMinter",
									"nameLocation": "4713:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4731:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "4723:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4722:17:11"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4759:0:11"
									},
									"scope": 2417,
									"src": "4704:105:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "4943:51:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2307,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "4965:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2308,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2301,
															"src": "4978:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2306,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "4954:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4954:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2310,
												"nodeType": "ExpressionStatement",
												"src": "4954:32:11"
											}
										]
									},
									"functionSelector": "3092afd5",
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2303,
												"name": "onlyOwner",
												"nameLocations": [
													"4933:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "4933:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4933:9:11"
										}
									],
									"name": "removeMinter",
									"nameLocation": "4894:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4915:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "4907:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4907:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4906:17:11"
									},
									"returnParameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4943:0:11"
									},
									"scope": 2417,
									"src": "4885:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2324,
										"nodeType": "Block",
										"src": "5125:50:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2320,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "5146:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2321,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "5159:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2319,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "5136:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5136:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2323,
												"nodeType": "ExpressionStatement",
												"src": "5136:31:11"
											}
										]
									},
									"functionSelector": "f44637ba",
									"id": 2325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2316,
												"name": "onlyOwner",
												"nameLocations": [
													"5115:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "5115:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5115:9:11"
										}
									],
									"name": "addBurner",
									"nameLocation": "5079:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5097:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "5089:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5089:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5088:17:11"
									},
									"returnParameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5125:0:11"
									},
									"scope": 2417,
									"src": "5070:105:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "5309:51:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2333,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "5331:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2334,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2327,
															"src": "5344:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2332,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "5320:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "5320:32:11"
											}
										]
									},
									"functionSelector": "02846858",
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2330,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2329,
												"name": "onlyOwner",
												"nameLocations": [
													"5299:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "5299:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5299:9:11"
										}
									],
									"name": "removeBurner",
									"nameLocation": "5260:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5281:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "5273:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5273:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5272:17:11"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5309:0:11"
									},
									"scope": 2417,
									"src": "5251:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "5500:58:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2346,
															"name": "FREEZE_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "5521:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2347,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2340,
															"src": "5542:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2345,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "5511:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5511:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2349,
												"nodeType": "ExpressionStatement",
												"src": "5511:39:11"
											}
										]
									},
									"functionSelector": "526606c9",
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2343,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2342,
												"name": "onlyOwner",
												"nameLocations": [
													"5490:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "5490:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5490:9:11"
										}
									],
									"name": "addFreezer",
									"nameLocation": "5453:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5472:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "5464:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5464:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5463:17:11"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5500:0:11"
									},
									"scope": 2417,
									"src": "5444:114:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2363,
										"nodeType": "Block",
										"src": "5701:59:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2359,
															"name": "FREEZE_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "5723:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2360,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "5744:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2358,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "5712:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5712:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2362,
												"nodeType": "ExpressionStatement",
												"src": "5712:40:11"
											}
										]
									},
									"functionSelector": "2acd2000",
									"id": 2364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2355,
												"name": "onlyOwner",
												"nameLocations": [
													"5691:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "5691:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5691:9:11"
										}
									],
									"name": "removeFreezer",
									"nameLocation": "5651:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5673:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "5665:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5665:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5664:17:11"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5701:0:11"
									},
									"scope": 2417,
									"src": "5642:118:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2376,
										"nodeType": "Block",
										"src": "5912:61:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2372,
															"name": "BLACKLIST_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "5933:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2373,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "5957:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2371,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "5923:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5923:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2375,
												"nodeType": "ExpressionStatement",
												"src": "5923:42:11"
											}
										]
									},
									"functionSelector": "0eff2afc",
									"id": 2377,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2368,
												"name": "onlyOwner",
												"nameLocations": [
													"5902:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "5902:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5902:9:11"
										}
									],
									"name": "addBlacklistManager",
									"nameLocation": "5856:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5884:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "5876:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:17:11"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5912:0:11"
									},
									"scope": 2417,
									"src": "5847:126:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "6128:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2385,
															"name": "BLACKLIST_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "6150:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2386,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2379,
															"src": "6174:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2384,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "6139:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6139:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2388,
												"nodeType": "ExpressionStatement",
												"src": "6139:43:11"
											}
										]
									},
									"functionSelector": "974b368c",
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2382,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2381,
												"name": "onlyOwner",
												"nameLocations": [
													"6118:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "6118:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6118:9:11"
										}
									],
									"name": "removeBlacklistManager",
									"nameLocation": "6069:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6100:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "6092:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6092:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6091:17:11"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6128:0:11"
									},
									"scope": 2417,
									"src": "6060:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2402,
										"nodeType": "Block",
										"src": "6325:51:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2398,
															"name": "RECOVER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "6346:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2399,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "6360:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2397,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "6336:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6336:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2401,
												"nodeType": "ExpressionStatement",
												"src": "6336:32:11"
											}
										]
									},
									"functionSelector": "c2134b23",
									"id": 2403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2395,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2394,
												"name": "onlyOwner",
												"nameLocations": [
													"6315:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "6315:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6315:9:11"
										}
									],
									"name": "addRecoverer",
									"nameLocation": "6276:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6297:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "6289:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6288:17:11"
									},
									"returnParameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6325:0:11"
									},
									"scope": 2417,
									"src": "6267:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2415,
										"nodeType": "Block",
										"src": "6514:52:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2411,
															"name": "RECOVER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "6536:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2412,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "6550:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2410,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "6525:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6525:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2414,
												"nodeType": "ExpressionStatement",
												"src": "6525:33:11"
											}
										]
									},
									"functionSelector": "d1c2de0a",
									"id": 2416,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2408,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2407,
												"name": "onlyOwner",
												"nameLocations": [
													"6504:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "6504:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6504:9:11"
										}
									],
									"name": "removeRecoverer",
									"nameLocation": "6462:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6486:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "6478:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6478:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6477:17:11"
									},
									"returnParameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6514:0:11"
									},
									"scope": 2417,
									"src": "6453:113:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2418,
							"src": "314:6305:11",
							"usedErrors": [
								305,
								308,
								392,
								397,
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": [
								317,
								326,
								335,
								403,
								1190,
								1199
							]
						}
					],
					"src": "39:6582:11"
				},
				"id": 11
			}
		}
	}
}