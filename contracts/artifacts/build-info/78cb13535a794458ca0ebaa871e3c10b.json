{
	"id": "78cb13535a794458ca0ebaa871e3c10b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"Permissions2.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.8.2 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract ERC20PermissionsControl is ERC20, AccessControl, Ownable {\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    // 역할 정의하기\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\r\n    bytes32 public constant FREEZER_ROLE = keccak256(\"FREEZER_ROLE\");\r\n    bytes32 public constant BLACKLIST_MANAGER_ROLE = keccak256(\"BLACKLIST_MANAGER_ROLE\");\r\n    bytes32 public constant RECOVER_ROLE = keccak256(\"RECOVER_ROLE\");\r\n\r\n    // 상태 변수\r\n    EnumerableSet.AddressSet private frozenAccounts;\r\n    EnumerableSet.AddressSet private blacklistedAccounts;\r\n\r\n    // 생성자: 이름, 심볼, 기본 관리자= msg.sender\r\n    // 기본적으로 토큰을 만든 계정은 모든 권한을 가지고 있음\r\n    constructor(string memory name, string memory symbol, uint amout) \r\n        ERC20(name, symbol) \r\n        Ownable(msg.sender)\r\n    {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _mint(msg.sender, amout);\r\n        addMinter(msg.sender);\r\n        addBurner(msg.sender);\r\n        addFreezer(msg.sender);\r\n        addBlacklistManager(msg.sender);\r\n        addRecoverer(msg.sender);\r\n    }\r\n\r\n    // 민트 함수: MINTER_ROLE만 가능\r\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    // 번 함수: BURNER_ROLE만 가능\r\n    function burn(address from, uint256 amount) public onlyRole(BURNER_ROLE) {\r\n        _burn(from, amount);\r\n    }\r\n\r\n    // 계정 동결 함수: FREEZER_ROLE만 가능\r\n    // frozenAccounts 상태변수에 계정 추가\r\n    // 동결 시 전송 기능 사용 불가\r\n    // 받는 것은 가능\r\n    function freezeAccount(address account) public onlyRole(FREEZER_ROLE) {\r\n        require(!frozenAccounts.contains(account), \"Account is already frozen\");\r\n        frozenAccounts.add(account);\r\n    }\r\n\r\n    // 계정 동결 해제 함수: FREEZER_ROLE만 가능\r\n    function unfreezeAccount(address account) public onlyRole(FREEZER_ROLE) {\r\n        require(frozenAccounts.contains(account), \"Account is not frozen\");\r\n        frozenAccounts.remove(account);\r\n    }\r\n\r\n    // 계정 동결 확인 함수 : 누구나 가능\r\n    function isFrozen(address account) public view returns (bool) {\r\n    return frozenAccounts.contains(account);\r\n    }\r\n\r\n    // 블랙리스트 추가 함수: BLACKLIST_MANAGER_ROLE만 가능\r\n    // blacklistedAccounts 상태변수에 계정 추가\r\n    // 블랙리스트 등록 시 토큰 전송, 수신 불가\r\n    function addToBlacklist(address account) public onlyRole(BLACKLIST_MANAGER_ROLE) {\r\n        require(!blacklistedAccounts.contains(account), \"Account is already blacklisted\");\r\n        blacklistedAccounts.add(account);\r\n    }\r\n\r\n    // 블랙리스트 제거 함수: BLACKLIST_MANAGER_ROLE만 가능\r\n    function removeFromBlacklist(address account) public onlyRole(BLACKLIST_MANAGER_ROLE) {\r\n        require(blacklistedAccounts.contains(account), \"Account is not blacklisted\");\r\n        blacklistedAccounts.remove(account);\r\n    }\r\n\r\n    // 블랙리스트 확인 함수 : 누구나 가능\r\n    function isBlacklisted(address account) public view returns (bool) {\r\n    return blacklistedAccounts.contains(account);\r\n    }\r\n\r\n\r\n    // 토큰 복구 함수: RECOVER_ROLE만 가능\r\n    // 원하는 계정에서 다른 계정으로 토큰 전송 가능!\r\n    function recover(address from, address to, uint256 amount) public onlyRole(RECOVER_ROLE) {\r\n        _transfer(from, to, amount);\r\n    }\r\n\r\n    // 토큰 전송 전에 동결 및 블랙리스트 상태를 확인하는 함수\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        require(!frozenAccounts.contains(owner), \"Sender account is frozen\");\r\n        require(!blacklistedAccounts.contains(owner), \"Sender account is blacklisted\");\r\n        require(!blacklistedAccounts.contains(to), \"Recipient account is blacklisted\");\r\n\r\n        return super.transfer(to, amount); // super은 부모 컨트랙트의 함수를 쓰겠다는 뜻임\r\n    }\r\n\r\n    // MINTER_ROLE을 추가하는 함수: 오너만 호출 가능\r\n    function addMinter(address account) public onlyOwner {\r\n        grantRole(MINTER_ROLE, account);\r\n    }\r\n\r\n    // MINTER_ROLE을 제거하는 함수: 오너만 호출 가능\r\n    function removeMinter(address account) public onlyOwner {\r\n        revokeRole(MINTER_ROLE, account);\r\n    }\r\n\r\n    // BURNER_ROLE을 추가하는 함수: 오너만 호출 가능\r\n    function addBurner(address account) public onlyOwner {\r\n        grantRole(BURNER_ROLE, account);\r\n    }\r\n\r\n    // BURNER_ROLE을 제거하는 함수: 오너만 호출 가능\r\n    function removeBurner(address account) public onlyOwner {\r\n        revokeRole(BURNER_ROLE, account);\r\n    }\r\n\r\n    // FREEZER_ROLE을 추가하는 함수: 오너만 호출 가능\r\n    function addFreezer(address account) public onlyOwner {\r\n        grantRole(FREEZER_ROLE, account);\r\n    }\r\n\r\n    // FREEZER_ROLE을 제거하는 함수: 오너만 호출 가능\r\n    function removeFreezer(address account) public onlyOwner {\r\n        revokeRole(FREEZER_ROLE, account);\r\n    }\r\n\r\n    // BLACKLIST_MANAGER_ROLE을 추가하는 함수: 오너만 호출 가능\r\n    function addBlacklistManager(address account) public onlyOwner {\r\n        grantRole(BLACKLIST_MANAGER_ROLE, account);\r\n    }\r\n\r\n    // BLACKLIST_MANAGER_ROLE을 제거하는 함수: 오너만 호출 가능\r\n    function removeBlacklistManager(address account) public onlyOwner {\r\n        revokeRole(BLACKLIST_MANAGER_ROLE, account);\r\n    }\r\n\r\n    // RECOVER_ROLE을 추가하는 함수: 오너만 호출 가능\r\n    function addRecoverer(address account) public onlyOwner {\r\n        grantRole(RECOVER_ROLE, account);\r\n    }\r\n\r\n    // RECOVER_ROLE을 제거하는 함수: 오너만 호출 가능\r\n    function removeRecoverer(address account) public onlyOwner {\r\n        revokeRole(RECOVER_ROLE, account);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 387,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 686,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 692,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 694,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 696,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 698,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x79505182C37A 0xDB DUP5 PUSH24 0x2E725371F9A03A86506A0A0211CE544FFE6A865E7C226473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1330:11640:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x79505182C37A 0xDB DUP5 PUSH24 0x2E725371F9A03A86506A0A0211CE544FFE6A865E7C226473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1330:11640:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033",
									".code": [
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"Permissions2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Permissions2.sol": {
				"ERC20PermissionsControl": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BLACKLIST_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FREEZER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RECOVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addBlacklistManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addBurner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addFreezer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addRecoverer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "freezeAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recover",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeBlacklistManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeBurner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFreezer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeRecoverer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "unfreezeAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Permissions2.sol\":314:6368  contract ERC20PermissionsControl is ERC20, AccessControl, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Permissions2.sol\":1131:1532  constructor(string memory name, string memory symbol, uint amout) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Permissions2.sol\":1245:1255  msg.sender */\n  caller\n    /* \"Permissions2.sol\":1213:1217  name */\n  dup4\n    /* \"Permissions2.sol\":1219:1225  symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"Permissions2.sol\":1273:1315  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"Permissions2.sol\":1284:1302  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"Permissions2.sol\":1304:1314  msg.sender */\n  caller\n    /* \"Permissions2.sol\":1273:1283  _grantRole */\n  shl(0x20, tag_19)\n    /* \"Permissions2.sol\":1273:1315  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n  pop\n    /* \"Permissions2.sol\":1326:1350  _mint(msg.sender, amout) */\n  tag_20\n    /* \"Permissions2.sol\":1332:1342  msg.sender */\n  caller\n    /* \"Permissions2.sol\":1344:1349  amout */\n  dup3\n    /* \"Permissions2.sol\":1326:1331  _mint */\n  shl(0x20, tag_21)\n    /* \"Permissions2.sol\":1326:1350  _mint(msg.sender, amout) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"Permissions2.sol\":1361:1382  addMinter(msg.sender) */\n  tag_22\n    /* \"Permissions2.sol\":1371:1381  msg.sender */\n  caller\n    /* \"Permissions2.sol\":1361:1370  addMinter */\n  shl(0x20, tag_23)\n    /* \"Permissions2.sol\":1361:1382  addMinter(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"Permissions2.sol\":1393:1414  addBurner(msg.sender) */\n  tag_24\n    /* \"Permissions2.sol\":1403:1413  msg.sender */\n  caller\n    /* \"Permissions2.sol\":1393:1402  addBurner */\n  shl(0x20, tag_25)\n    /* \"Permissions2.sol\":1393:1414  addBurner(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"Permissions2.sol\":1425:1447  addFreezer(msg.sender) */\n  tag_26\n    /* \"Permissions2.sol\":1436:1446  msg.sender */\n  caller\n    /* \"Permissions2.sol\":1425:1435  addFreezer */\n  shl(0x20, tag_27)\n    /* \"Permissions2.sol\":1425:1447  addFreezer(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"Permissions2.sol\":1458:1489  addBlacklistManager(msg.sender) */\n  tag_28\n    /* \"Permissions2.sol\":1478:1488  msg.sender */\n  caller\n    /* \"Permissions2.sol\":1458:1477  addBlacklistManager */\n  shl(0x20, tag_29)\n    /* \"Permissions2.sol\":1458:1489  addBlacklistManager(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"Permissions2.sol\":1500:1524  addRecoverer(msg.sender) */\n  tag_30\n    /* \"Permissions2.sol\":1513:1523  msg.sender */\n  caller\n    /* \"Permissions2.sol\":1500:1512  addRecoverer */\n  shl(0x20, tag_31)\n    /* \"Permissions2.sol\":1500:1524  addRecoverer(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"Permissions2.sol\":1131:1532  constructor(string memory name, string memory symbol, uint amout) ... */\n  pop\n  pop\n  pop\n    /* \"Permissions2.sol\":314:6368  contract ERC20PermissionsControl is ERC20, AccessControl, Ownable {... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_35\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_36)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_38\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_39)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_34)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_34:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_45)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Permissions2.sol\":4551:4654  function addMinter(address account) public onlyOwner {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_47\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"Permissions2.sol\":4615:4646  grantRole(MINTER_ROLE, account) */\n  tag_50\n    /* \"Permissions2.sol\":510:534  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"Permissions2.sol\":4638:4645  account */\n  dup3\n    /* \"Permissions2.sol\":4615:4624  grantRole */\n  shl(0x20, tag_51)\n    /* \"Permissions2.sol\":4615:4646  grantRole(MINTER_ROLE, account) */\n  0x20\n  shr\n  jump\t// in\ntag_50:\n    /* \"Permissions2.sol\":4551:4654  function addMinter(address account) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"Permissions2.sol\":4913:5016  function addBurner(address account) public onlyOwner {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_53\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_53:\n    /* \"Permissions2.sol\":4977:5008  grantRole(BURNER_ROLE, account) */\n  tag_55\n    /* \"Permissions2.sol\":579:603  keccak256(\"BURNER_ROLE\") */\n  0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n    /* \"Permissions2.sol\":5000:5007  account */\n  dup3\n    /* \"Permissions2.sol\":4977:4986  grantRole */\n  shl(0x20, tag_51)\n    /* \"Permissions2.sol\":4977:5008  grantRole(BURNER_ROLE, account) */\n  0x20\n  shr\n  jump\t// in\ntag_55:\n    /* \"Permissions2.sol\":4913:5016  function addBurner(address account) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"Permissions2.sol\":5276:5381  function addFreezer(address account) public onlyOwner {... */\ntag_27:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_57\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_57:\n    /* \"Permissions2.sol\":5341:5373  grantRole(FREEZER_ROLE, account) */\n  tag_59\n    /* \"Permissions2.sol\":649:674  keccak256(\"FREEZER_ROLE\") */\n  0x92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363\n    /* \"Permissions2.sol\":5365:5372  account */\n  dup3\n    /* \"Permissions2.sol\":5341:5350  grantRole */\n  shl(0x20, tag_51)\n    /* \"Permissions2.sol\":5341:5373  grantRole(FREEZER_ROLE, account) */\n  0x20\n  shr\n  jump\t// in\ntag_59:\n    /* \"Permissions2.sol\":5276:5381  function addFreezer(address account) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"Permissions2.sol\":5654:5778  function addBlacklistManager(address account) public onlyOwner {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_61\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_61:\n    /* \"Permissions2.sol\":5728:5770  grantRole(BLACKLIST_MANAGER_ROLE, account) */\n  tag_63\n    /* \"Permissions2.sol\":730:765  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n  0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n    /* \"Permissions2.sol\":5762:5769  account */\n  dup3\n    /* \"Permissions2.sol\":5728:5737  grantRole */\n  shl(0x20, tag_51)\n    /* \"Permissions2.sol\":5728:5770  grantRole(BLACKLIST_MANAGER_ROLE, account) */\n  0x20\n  shr\n  jump\t// in\ntag_63:\n    /* \"Permissions2.sol\":5654:5778  function addBlacklistManager(address account) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"Permissions2.sol\":6070:6177  function addRecoverer(address account) public onlyOwner {... */\ntag_31:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_65\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_65:\n    /* \"Permissions2.sol\":6137:6169  grantRole(RECOVER_ROLE, account) */\n  tag_67\n    /* \"Permissions2.sol\":811:836  keccak256(\"RECOVER_ROLE\") */\n  0x62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066\n    /* \"Permissions2.sol\":6161:6168  account */\n  dup3\n    /* \"Permissions2.sol\":6137:6146  grantRole */\n  shl(0x20, tag_51)\n    /* \"Permissions2.sol\":6137:6169  grantRole(RECOVER_ROLE, account) */\n  0x20\n  shr\n  jump\t// in\ntag_67:\n    /* \"Permissions2.sol\":6070:6177  function addRecoverer(address account) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_71\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_72\n  swap2\n  swap1\n  tag_73\n  jump\t// in\ntag_72:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_74)\ntag_71:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_75\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_76\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_77\n  jump\t// in\ntag_76:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_75:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_74:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_78\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_79)\ntag_78:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_79:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_80\n  swap2\n  swap1\n  tag_81\n  jump\t// in\ntag_80:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_48:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  tag_83\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n  shl(0x20, tag_39)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_83:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  tag_84\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n  shl(0x20, tag_85)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_84:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_86\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  tag_87\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n  shl(0x20, tag_39)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_87:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  0x118cdaa700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_88\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_88:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_86:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n  tag_89\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n  shl(0x20, tag_90)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n  0x20\n  shr\n  jump\t// in\ntag_89:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n  tag_92\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n  shl(0x20, tag_93)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n  0x20\n  shr\n  jump\t// in\ntag_92:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n  tag_95\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_95:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_85:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\ntag_90:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0x01\n  add\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\ntag_93:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n  tag_99\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n  tag_100\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n  shl(0x20, tag_39)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_100:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n  shl(0x20, tag_101)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_99:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\ntag_101:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n  tag_103\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n  shl(0x20, tag_36)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_103:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n  tag_104\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n  mload(0x40)\n  0xe2517d3f00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_105\n  swap3\n  swap2\n  swap1\n  tag_106\n  jump\t// in\ntag_105:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\ntag_104:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_107:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_108:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_109:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_110:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_111:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_112:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_113:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_114:\n    /* \"#utility.yul\":957:984   */\n  tag_157\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_112\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_159\n  tag_113\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":1030:1118   */\ntag_158:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_115:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_161\n  tag_107\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_162\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_114\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_116:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_165\n  tag_113\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":1434:1490   */\ntag_164:\n    /* \"#utility.yul\":1508:1537   */\n  tag_166\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_112\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_117:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_118:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_169\n    /* \"#utility.yul\":1885:1934   */\n  tag_170\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_116\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":1869:1935   */\n  tag_115\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_172\n  tag_111\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":2010:2122   */\ntag_171:\n    /* \"#utility.yul\":2131:2183   */\n  tag_173\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_117\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_119:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_175\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_176\n  tag_110\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":2292:2414   */\ntag_175:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_177\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_118\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_120:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_121:\n    /* \"#utility.yul\":2726:2750   */\n  tag_180\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_120\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_181\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  dup1\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_181:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_122:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_183\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_121\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:3939   */\ntag_3:\n    /* \"#utility.yul\":3038:3044   */\n  0x00\n    /* \"#utility.yul\":3046:3052   */\n  dup1\n    /* \"#utility.yul\":3054:3060   */\n  0x00\n    /* \"#utility.yul\":3103:3105   */\n  0x60\n    /* \"#utility.yul\":3091:3100   */\n  dup5\n    /* \"#utility.yul\":3082:3089   */\n  dup7\n    /* \"#utility.yul\":3078:3101   */\n  sub\n    /* \"#utility.yul\":3074:3106   */\n  slt\n    /* \"#utility.yul\":3071:3190   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":3109:3188   */\n  tag_186\n  tag_108\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":3071:3190   */\ntag_185:\n    /* \"#utility.yul\":3250:3251   */\n  0x00\n    /* \"#utility.yul\":3239:3248   */\n  dup5\n    /* \"#utility.yul\":3235:3252   */\n  add\n    /* \"#utility.yul\":3229:3253   */\n  mload\n    /* \"#utility.yul\":3280:3298   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3272:3278   */\n  dup2\n    /* \"#utility.yul\":3269:3299   */\n  gt\n    /* \"#utility.yul\":3266:3383   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":3302:3381   */\n  tag_188\n  tag_109\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":3266:3383   */\ntag_187:\n    /* \"#utility.yul\":3407:3481   */\n  tag_189\n    /* \"#utility.yul\":3473:3480   */\n  dup7\n    /* \"#utility.yul\":3464:3470   */\n  dup3\n    /* \"#utility.yul\":3453:3462   */\n  dup8\n    /* \"#utility.yul\":3449:3471   */\n  add\n    /* \"#utility.yul\":3407:3481   */\n  tag_119\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":3397:3481   */\n  swap4\n  pop\n    /* \"#utility.yul\":3200:3491   */\n  pop\n    /* \"#utility.yul\":3551:3553   */\n  0x20\n    /* \"#utility.yul\":3540:3549   */\n  dup5\n    /* \"#utility.yul\":3536:3554   */\n  add\n    /* \"#utility.yul\":3530:3555   */\n  mload\n    /* \"#utility.yul\":3582:3600   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3574:3580   */\n  dup2\n    /* \"#utility.yul\":3571:3601   */\n  gt\n    /* \"#utility.yul\":3568:3685   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":3604:3683   */\n  tag_191\n  tag_109\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":3568:3685   */\ntag_190:\n    /* \"#utility.yul\":3709:3783   */\n  tag_192\n    /* \"#utility.yul\":3775:3782   */\n  dup7\n    /* \"#utility.yul\":3766:3772   */\n  dup3\n    /* \"#utility.yul\":3755:3764   */\n  dup8\n    /* \"#utility.yul\":3751:3773   */\n  add\n    /* \"#utility.yul\":3709:3783   */\n  tag_119\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":3699:3783   */\n  swap3\n  pop\n    /* \"#utility.yul\":3501:3793   */\n  pop\n    /* \"#utility.yul\":3832:3834   */\n  0x40\n    /* \"#utility.yul\":3858:3922   */\n  tag_193\n    /* \"#utility.yul\":3914:3921   */\n  dup7\n    /* \"#utility.yul\":3905:3911   */\n  dup3\n    /* \"#utility.yul\":3894:3903   */\n  dup8\n    /* \"#utility.yul\":3890:3912   */\n  add\n    /* \"#utility.yul\":3858:3922   */\n  tag_122\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":3848:3922   */\n  swap2\n  pop\n    /* \"#utility.yul\":3803:3932   */\n  pop\n    /* \"#utility.yul\":2930:3939   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":3945:4044   */\ntag_123:\n    /* \"#utility.yul\":3997:4003   */\n  0x00\n    /* \"#utility.yul\":4031:4036   */\n  dup2\n    /* \"#utility.yul\":4025:4037   */\n  mload\n    /* \"#utility.yul\":4015:4037   */\n  swap1\n  pop\n    /* \"#utility.yul\":3945:4044   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4050:4230   */\ntag_124:\n    /* \"#utility.yul\":4098:4175   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4095:4096   */\n  0x00\n    /* \"#utility.yul\":4088:4176   */\n  mstore\n    /* \"#utility.yul\":4195:4199   */\n  0x22\n    /* \"#utility.yul\":4192:4193   */\n  0x04\n    /* \"#utility.yul\":4185:4200   */\n  mstore\n    /* \"#utility.yul\":4219:4223   */\n  0x24\n    /* \"#utility.yul\":4216:4217   */\n  0x00\n    /* \"#utility.yul\":4209:4224   */\n  revert\n    /* \"#utility.yul\":4236:4556   */\ntag_125:\n    /* \"#utility.yul\":4280:4286   */\n  0x00\n    /* \"#utility.yul\":4317:4318   */\n  0x02\n    /* \"#utility.yul\":4311:4315   */\n  dup3\n    /* \"#utility.yul\":4307:4319   */\n  div\n    /* \"#utility.yul\":4297:4319   */\n  swap1\n  pop\n    /* \"#utility.yul\":4364:4365   */\n  0x01\n    /* \"#utility.yul\":4358:4362   */\n  dup3\n    /* \"#utility.yul\":4354:4366   */\n  and\n    /* \"#utility.yul\":4385:4403   */\n  dup1\n    /* \"#utility.yul\":4375:4456   */\n  tag_197\n  jumpi\n    /* \"#utility.yul\":4441:4445   */\n  0x7f\n    /* \"#utility.yul\":4433:4439   */\n  dup3\n    /* \"#utility.yul\":4429:4446   */\n  and\n    /* \"#utility.yul\":4419:4446   */\n  swap2\n  pop\n    /* \"#utility.yul\":4375:4456   */\ntag_197:\n    /* \"#utility.yul\":4503:4505   */\n  0x20\n    /* \"#utility.yul\":4495:4501   */\n  dup3\n    /* \"#utility.yul\":4492:4506   */\n  lt\n    /* \"#utility.yul\":4472:4490   */\n  dup2\n    /* \"#utility.yul\":4469:4507   */\n  sub\n    /* \"#utility.yul\":4466:4550   */\n  tag_198\n  jumpi\n    /* \"#utility.yul\":4522:4540   */\n  tag_199\n  tag_124\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":4466:4550   */\ntag_198:\n    /* \"#utility.yul\":4287:4556   */\n  pop\n    /* \"#utility.yul\":4236:4556   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4562:4703   */\ntag_126:\n    /* \"#utility.yul\":4611:4615   */\n  0x00\n    /* \"#utility.yul\":4634:4637   */\n  dup2\n    /* \"#utility.yul\":4626:4637   */\n  swap1\n  pop\n    /* \"#utility.yul\":4657:4660   */\n  dup2\n    /* \"#utility.yul\":4654:4655   */\n  0x00\n    /* \"#utility.yul\":4647:4661   */\n  mstore\n    /* \"#utility.yul\":4691:4695   */\n  0x20\n    /* \"#utility.yul\":4688:4689   */\n  0x00\n    /* \"#utility.yul\":4678:4696   */\n  keccak256\n    /* \"#utility.yul\":4670:4696   */\n  swap1\n  pop\n    /* \"#utility.yul\":4562:4703   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4709:4802   */\ntag_127:\n    /* \"#utility.yul\":4746:4752   */\n  0x00\n    /* \"#utility.yul\":4793:4795   */\n  0x20\n    /* \"#utility.yul\":4788:4790   */\n  0x1f\n    /* \"#utility.yul\":4781:4786   */\n  dup4\n    /* \"#utility.yul\":4777:4791   */\n  add\n    /* \"#utility.yul\":4773:4796   */\n  div\n    /* \"#utility.yul\":4763:4796   */\n  swap1\n  pop\n    /* \"#utility.yul\":4709:4802   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4808:4915   */\ntag_128:\n    /* \"#utility.yul\":4852:4860   */\n  0x00\n    /* \"#utility.yul\":4902:4907   */\n  dup3\n    /* \"#utility.yul\":4896:4900   */\n  dup3\n    /* \"#utility.yul\":4892:4908   */\n  shl\n    /* \"#utility.yul\":4871:4908   */\n  swap1\n  pop\n    /* \"#utility.yul\":4808:4915   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4921:5314   */\ntag_129:\n    /* \"#utility.yul\":4990:4996   */\n  0x00\n    /* \"#utility.yul\":5040:5041   */\n  0x08\n    /* \"#utility.yul\":5028:5038   */\n  dup4\n    /* \"#utility.yul\":5024:5042   */\n  mul\n    /* \"#utility.yul\":5063:5160   */\n  tag_204\n    /* \"#utility.yul\":5093:5159   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5082:5091   */\n  dup3\n    /* \"#utility.yul\":5063:5160   */\n  tag_128\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":5181:5220   */\n  tag_205\n    /* \"#utility.yul\":5211:5219   */\n  dup7\n    /* \"#utility.yul\":5200:5209   */\n  dup4\n    /* \"#utility.yul\":5181:5220   */\n  tag_128\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":5169:5220   */\n  swap6\n  pop\n    /* \"#utility.yul\":5253:5257   */\n  dup1\n    /* \"#utility.yul\":5249:5258   */\n  not\n    /* \"#utility.yul\":5242:5247   */\n  dup5\n    /* \"#utility.yul\":5238:5259   */\n  and\n    /* \"#utility.yul\":5229:5259   */\n  swap4\n  pop\n    /* \"#utility.yul\":5302:5306   */\n  dup1\n    /* \"#utility.yul\":5292:5300   */\n  dup7\n    /* \"#utility.yul\":5288:5307   */\n  and\n    /* \"#utility.yul\":5281:5286   */\n  dup5\n    /* \"#utility.yul\":5278:5308   */\n  or\n    /* \"#utility.yul\":5268:5308   */\n  swap3\n  pop\n    /* \"#utility.yul\":4997:5314   */\n  pop\n  pop\n    /* \"#utility.yul\":4921:5314   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5320:5380   */\ntag_130:\n    /* \"#utility.yul\":5348:5351   */\n  0x00\n    /* \"#utility.yul\":5369:5374   */\n  dup2\n    /* \"#utility.yul\":5362:5374   */\n  swap1\n  pop\n    /* \"#utility.yul\":5320:5380   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5386:5528   */\ntag_131:\n    /* \"#utility.yul\":5436:5445   */\n  0x00\n    /* \"#utility.yul\":5469:5522   */\n  tag_208\n    /* \"#utility.yul\":5487:5521   */\n  tag_209\n    /* \"#utility.yul\":5496:5520   */\n  tag_210\n    /* \"#utility.yul\":5514:5519   */\n  dup5\n    /* \"#utility.yul\":5496:5520   */\n  tag_120\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":5487:5521   */\n  tag_130\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":5469:5522   */\n  tag_120\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":5456:5522   */\n  swap1\n  pop\n    /* \"#utility.yul\":5386:5528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5534:5609   */\ntag_132:\n    /* \"#utility.yul\":5577:5580   */\n  0x00\n    /* \"#utility.yul\":5598:5603   */\n  dup2\n    /* \"#utility.yul\":5591:5603   */\n  swap1\n  pop\n    /* \"#utility.yul\":5534:5609   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5615:5884   */\ntag_133:\n    /* \"#utility.yul\":5725:5764   */\n  tag_213\n    /* \"#utility.yul\":5756:5763   */\n  dup4\n    /* \"#utility.yul\":5725:5764   */\n  tag_131\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":5786:5877   */\n  tag_214\n    /* \"#utility.yul\":5835:5876   */\n  tag_215\n    /* \"#utility.yul\":5859:5875   */\n  dup3\n    /* \"#utility.yul\":5835:5876   */\n  tag_132\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":5827:5833   */\n  dup5\n    /* \"#utility.yul\":5820:5824   */\n  dup5\n    /* \"#utility.yul\":5814:5825   */\n  sload\n    /* \"#utility.yul\":5786:5877   */\n  tag_129\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":5780:5784   */\n  dup3\n    /* \"#utility.yul\":5773:5878   */\n  sstore\n    /* \"#utility.yul\":5691:5884   */\n  pop\n    /* \"#utility.yul\":5615:5884   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5890:5963   */\ntag_134:\n    /* \"#utility.yul\":5935:5938   */\n  0x00\n    /* \"#utility.yul\":5890:5963   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5969:6158   */\ntag_135:\n    /* \"#utility.yul\":6046:6078   */\n  tag_218\n  tag_134\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":6087:6152   */\n  tag_219\n    /* \"#utility.yul\":6145:6151   */\n  dup2\n    /* \"#utility.yul\":6137:6143   */\n  dup5\n    /* \"#utility.yul\":6131:6135   */\n  dup5\n    /* \"#utility.yul\":6087:6152   */\n  tag_133\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":6022:6158   */\n  pop\n    /* \"#utility.yul\":5969:6158   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6164:6350   */\ntag_136:\n    /* \"#utility.yul\":6224:6344   */\ntag_221:\n    /* \"#utility.yul\":6241:6244   */\n  dup2\n    /* \"#utility.yul\":6234:6239   */\n  dup2\n    /* \"#utility.yul\":6231:6245   */\n  lt\n    /* \"#utility.yul\":6224:6344   */\n  iszero\n  tag_223\n  jumpi\n    /* \"#utility.yul\":6295:6334   */\n  tag_224\n    /* \"#utility.yul\":6332:6333   */\n  0x00\n    /* \"#utility.yul\":6325:6330   */\n  dup3\n    /* \"#utility.yul\":6295:6334   */\n  tag_135\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":6268:6269   */\n  0x01\n    /* \"#utility.yul\":6261:6266   */\n  dup2\n    /* \"#utility.yul\":6257:6270   */\n  add\n    /* \"#utility.yul\":6248:6270   */\n  swap1\n  pop\n    /* \"#utility.yul\":6224:6344   */\n  jump(tag_221)\ntag_223:\n    /* \"#utility.yul\":6164:6350   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6356:6899   */\ntag_137:\n    /* \"#utility.yul\":6457:6459   */\n  0x1f\n    /* \"#utility.yul\":6452:6455   */\n  dup3\n    /* \"#utility.yul\":6449:6460   */\n  gt\n    /* \"#utility.yul\":6446:6892   */\n  iszero\n  tag_226\n  jumpi\n    /* \"#utility.yul\":6491:6529   */\n  tag_227\n    /* \"#utility.yul\":6523:6528   */\n  dup2\n    /* \"#utility.yul\":6491:6529   */\n  tag_126\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":6575:6604   */\n  tag_228\n    /* \"#utility.yul\":6593:6603   */\n  dup5\n    /* \"#utility.yul\":6575:6604   */\n  tag_127\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":6565:6573   */\n  dup2\n    /* \"#utility.yul\":6561:6605   */\n  add\n    /* \"#utility.yul\":6758:6760   */\n  0x20\n    /* \"#utility.yul\":6746:6756   */\n  dup6\n    /* \"#utility.yul\":6743:6761   */\n  lt\n    /* \"#utility.yul\":6740:6789   */\n  iszero\n  tag_229\n  jumpi\n    /* \"#utility.yul\":6779:6787   */\n  dup2\n    /* \"#utility.yul\":6764:6787   */\n  swap1\n  pop\n    /* \"#utility.yul\":6740:6789   */\ntag_229:\n    /* \"#utility.yul\":6802:6882   */\n  tag_230\n    /* \"#utility.yul\":6858:6880   */\n  tag_231\n    /* \"#utility.yul\":6876:6879   */\n  dup6\n    /* \"#utility.yul\":6858:6880   */\n  tag_127\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":6848:6856   */\n  dup4\n    /* \"#utility.yul\":6844:6881   */\n  add\n    /* \"#utility.yul\":6831:6842   */\n  dup3\n    /* \"#utility.yul\":6802:6882   */\n  tag_136\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":6461:6892   */\n  pop\n  pop\n    /* \"#utility.yul\":6446:6892   */\ntag_226:\n    /* \"#utility.yul\":6356:6899   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6905:7022   */\ntag_138:\n    /* \"#utility.yul\":6959:6967   */\n  0x00\n    /* \"#utility.yul\":7009:7014   */\n  dup3\n    /* \"#utility.yul\":7003:7007   */\n  dup3\n    /* \"#utility.yul\":6999:7015   */\n  shr\n    /* \"#utility.yul\":6978:7015   */\n  swap1\n  pop\n    /* \"#utility.yul\":6905:7022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7028:7197   */\ntag_139:\n    /* \"#utility.yul\":7072:7078   */\n  0x00\n    /* \"#utility.yul\":7105:7156   */\n  tag_234\n    /* \"#utility.yul\":7153:7154   */\n  0x00\n    /* \"#utility.yul\":7149:7155   */\n  not\n    /* \"#utility.yul\":7141:7146   */\n  dup5\n    /* \"#utility.yul\":7138:7139   */\n  0x08\n    /* \"#utility.yul\":7134:7147   */\n  mul\n    /* \"#utility.yul\":7105:7156   */\n  tag_138\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":7101:7157   */\n  not\n    /* \"#utility.yul\":7186:7190   */\n  dup1\n    /* \"#utility.yul\":7180:7184   */\n  dup4\n    /* \"#utility.yul\":7176:7191   */\n  and\n    /* \"#utility.yul\":7166:7191   */\n  swap2\n  pop\n    /* \"#utility.yul\":7079:7197   */\n  pop\n    /* \"#utility.yul\":7028:7197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7202:7497   */\ntag_140:\n    /* \"#utility.yul\":7278:7282   */\n  0x00\n    /* \"#utility.yul\":7424:7453   */\n  tag_236\n    /* \"#utility.yul\":7449:7452   */\n  dup4\n    /* \"#utility.yul\":7443:7447   */\n  dup4\n    /* \"#utility.yul\":7424:7453   */\n  tag_139\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":7416:7453   */\n  swap2\n  pop\n    /* \"#utility.yul\":7486:7489   */\n  dup3\n    /* \"#utility.yul\":7483:7484   */\n  0x02\n    /* \"#utility.yul\":7479:7490   */\n  mul\n    /* \"#utility.yul\":7473:7477   */\n  dup3\n    /* \"#utility.yul\":7470:7491   */\n  or\n    /* \"#utility.yul\":7462:7491   */\n  swap1\n  pop\n    /* \"#utility.yul\":7202:7497   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7502:8897   */\ntag_9:\n    /* \"#utility.yul\":7619:7656   */\n  tag_238\n    /* \"#utility.yul\":7652:7655   */\n  dup3\n    /* \"#utility.yul\":7619:7656   */\n  tag_123\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":7721:7739   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7713:7719   */\n  dup2\n    /* \"#utility.yul\":7710:7740   */\n  gt\n    /* \"#utility.yul\":7707:7763   */\n  iszero\n  tag_239\n  jumpi\n    /* \"#utility.yul\":7743:7761   */\n  tag_240\n  tag_113\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":7707:7763   */\ntag_239:\n    /* \"#utility.yul\":7787:7825   */\n  tag_241\n    /* \"#utility.yul\":7819:7823   */\n  dup3\n    /* \"#utility.yul\":7813:7824   */\n  sload\n    /* \"#utility.yul\":7787:7825   */\n  tag_125\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":7872:7939   */\n  tag_242\n    /* \"#utility.yul\":7932:7938   */\n  dup3\n    /* \"#utility.yul\":7924:7930   */\n  dup3\n    /* \"#utility.yul\":7918:7922   */\n  dup6\n    /* \"#utility.yul\":7872:7939   */\n  tag_137\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":7966:7967   */\n  0x00\n    /* \"#utility.yul\":7990:7994   */\n  0x20\n    /* \"#utility.yul\":7977:7994   */\n  swap1\n  pop\n    /* \"#utility.yul\":8022:8024   */\n  0x1f\n    /* \"#utility.yul\":8014:8020   */\n  dup4\n    /* \"#utility.yul\":8011:8025   */\n  gt\n    /* \"#utility.yul\":8039:8040   */\n  0x01\n    /* \"#utility.yul\":8034:8652   */\n  dup2\n  eq\n  tag_244\n  jumpi\n    /* \"#utility.yul\":8696:8697   */\n  0x00\n    /* \"#utility.yul\":8713:8719   */\n  dup5\n    /* \"#utility.yul\":8710:8787   */\n  iszero\n  tag_245\n  jumpi\n    /* \"#utility.yul\":8762:8771   */\n  dup3\n    /* \"#utility.yul\":8757:8760   */\n  dup8\n    /* \"#utility.yul\":8753:8772   */\n  add\n    /* \"#utility.yul\":8747:8773   */\n  mload\n    /* \"#utility.yul\":8738:8773   */\n  swap1\n  pop\n    /* \"#utility.yul\":8710:8787   */\ntag_245:\n    /* \"#utility.yul\":8813:8880   */\n  tag_246\n    /* \"#utility.yul\":8873:8879   */\n  dup6\n    /* \"#utility.yul\":8866:8871   */\n  dup3\n    /* \"#utility.yul\":8813:8880   */\n  tag_140\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":8807:8811   */\n  dup7\n    /* \"#utility.yul\":8800:8881   */\n  sstore\n    /* \"#utility.yul\":8669:8891   */\n  pop\n    /* \"#utility.yul\":8004:8891   */\n  jump(tag_243)\n    /* \"#utility.yul\":8034:8652   */\ntag_244:\n    /* \"#utility.yul\":8086:8090   */\n  0x1f\n    /* \"#utility.yul\":8082:8091   */\n  not\n    /* \"#utility.yul\":8074:8080   */\n  dup5\n    /* \"#utility.yul\":8070:8092   */\n  and\n    /* \"#utility.yul\":8120:8157   */\n  tag_247\n    /* \"#utility.yul\":8152:8156   */\n  dup7\n    /* \"#utility.yul\":8120:8157   */\n  tag_126\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":8179:8180   */\n  0x00\n    /* \"#utility.yul\":8193:8401   */\ntag_248:\n    /* \"#utility.yul\":8207:8214   */\n  dup3\n    /* \"#utility.yul\":8204:8205   */\n  dup2\n    /* \"#utility.yul\":8201:8215   */\n  lt\n    /* \"#utility.yul\":8193:8401   */\n  iszero\n  tag_250\n  jumpi\n    /* \"#utility.yul\":8286:8295   */\n  dup5\n    /* \"#utility.yul\":8281:8284   */\n  dup10\n    /* \"#utility.yul\":8277:8296   */\n  add\n    /* \"#utility.yul\":8271:8297   */\n  mload\n    /* \"#utility.yul\":8263:8269   */\n  dup3\n    /* \"#utility.yul\":8256:8298   */\n  sstore\n    /* \"#utility.yul\":8337:8338   */\n  0x01\n    /* \"#utility.yul\":8329:8335   */\n  dup3\n    /* \"#utility.yul\":8325:8339   */\n  add\n    /* \"#utility.yul\":8315:8339   */\n  swap2\n  pop\n    /* \"#utility.yul\":8384:8386   */\n  0x20\n    /* \"#utility.yul\":8373:8382   */\n  dup6\n    /* \"#utility.yul\":8369:8387   */\n  add\n    /* \"#utility.yul\":8356:8387   */\n  swap5\n  pop\n    /* \"#utility.yul\":8230:8234   */\n  0x20\n    /* \"#utility.yul\":8227:8228   */\n  dup2\n    /* \"#utility.yul\":8223:8235   */\n  add\n    /* \"#utility.yul\":8218:8235   */\n  swap1\n  pop\n    /* \"#utility.yul\":8193:8401   */\n  jump(tag_248)\ntag_250:\n    /* \"#utility.yul\":8429:8435   */\n  dup7\n    /* \"#utility.yul\":8420:8427   */\n  dup4\n    /* \"#utility.yul\":8417:8436   */\n  lt\n    /* \"#utility.yul\":8414:8593   */\n  iszero\n  tag_251\n  jumpi\n    /* \"#utility.yul\":8487:8496   */\n  dup5\n    /* \"#utility.yul\":8482:8485   */\n  dup10\n    /* \"#utility.yul\":8478:8497   */\n  add\n    /* \"#utility.yul\":8472:8498   */\n  mload\n    /* \"#utility.yul\":8530:8578   */\n  tag_252\n    /* \"#utility.yul\":8572:8576   */\n  0x1f\n    /* \"#utility.yul\":8564:8570   */\n  dup10\n    /* \"#utility.yul\":8560:8577   */\n  and\n    /* \"#utility.yul\":8549:8558   */\n  dup3\n    /* \"#utility.yul\":8530:8578   */\n  tag_139\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":8522:8528   */\n  dup4\n    /* \"#utility.yul\":8515:8579   */\n  sstore\n    /* \"#utility.yul\":8437:8593   */\n  pop\n    /* \"#utility.yul\":8414:8593   */\ntag_251:\n    /* \"#utility.yul\":8639:8640   */\n  0x01\n    /* \"#utility.yul\":8635:8636   */\n  0x02\n    /* \"#utility.yul\":8627:8633   */\n  dup9\n    /* \"#utility.yul\":8623:8637   */\n  mul\n    /* \"#utility.yul\":8619:8641   */\n  add\n    /* \"#utility.yul\":8613:8617   */\n  dup9\n    /* \"#utility.yul\":8606:8642   */\n  sstore\n    /* \"#utility.yul\":8041:8652   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8004:8891   */\ntag_243:\n  pop\n    /* \"#utility.yul\":7594:8897   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7502:8897   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8903:9029   */\ntag_141:\n    /* \"#utility.yul\":8940:8947   */\n  0x00\n    /* \"#utility.yul\":8980:9022   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8973:8978   */\n  dup3\n    /* \"#utility.yul\":8969:9023   */\n  and\n    /* \"#utility.yul\":8958:9023   */\n  swap1\n  pop\n    /* \"#utility.yul\":8903:9029   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9035:9131   */\ntag_142:\n    /* \"#utility.yul\":9072:9079   */\n  0x00\n    /* \"#utility.yul\":9101:9125   */\n  tag_255\n    /* \"#utility.yul\":9119:9124   */\n  dup3\n    /* \"#utility.yul\":9101:9125   */\n  tag_141\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":9090:9125   */\n  swap1\n  pop\n    /* \"#utility.yul\":9035:9131   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9137:9255   */\ntag_143:\n    /* \"#utility.yul\":9224:9248   */\n  tag_257\n    /* \"#utility.yul\":9242:9247   */\n  dup2\n    /* \"#utility.yul\":9224:9248   */\n  tag_142\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":9219:9222   */\n  dup3\n    /* \"#utility.yul\":9212:9249   */\n  mstore\n    /* \"#utility.yul\":9137:9255   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9261:9483   */\ntag_14:\n    /* \"#utility.yul\":9354:9358   */\n  0x00\n    /* \"#utility.yul\":9392:9394   */\n  0x20\n    /* \"#utility.yul\":9381:9390   */\n  dup3\n    /* \"#utility.yul\":9377:9395   */\n  add\n    /* \"#utility.yul\":9369:9395   */\n  swap1\n  pop\n    /* \"#utility.yul\":9405:9476   */\n  tag_259\n    /* \"#utility.yul\":9473:9474   */\n  0x00\n    /* \"#utility.yul\":9462:9471   */\n  dup4\n    /* \"#utility.yul\":9458:9475   */\n  add\n    /* \"#utility.yul\":9449:9455   */\n  dup5\n    /* \"#utility.yul\":9405:9476   */\n  tag_143\n  jump\t// in\ntag_259:\n    /* \"#utility.yul\":9261:9483   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9489:9669   */\ntag_144:\n    /* \"#utility.yul\":9537:9614   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9534:9535   */\n  0x00\n    /* \"#utility.yul\":9527:9615   */\n  mstore\n    /* \"#utility.yul\":9634:9638   */\n  0x11\n    /* \"#utility.yul\":9631:9632   */\n  0x04\n    /* \"#utility.yul\":9624:9639   */\n  mstore\n    /* \"#utility.yul\":9658:9662   */\n  0x24\n    /* \"#utility.yul\":9655:9656   */\n  0x00\n    /* \"#utility.yul\":9648:9663   */\n  revert\n    /* \"#utility.yul\":9675:9866   */\ntag_73:\n    /* \"#utility.yul\":9715:9718   */\n  0x00\n    /* \"#utility.yul\":9734:9754   */\n  tag_262\n    /* \"#utility.yul\":9752:9753   */\n  dup3\n    /* \"#utility.yul\":9734:9754   */\n  tag_120\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":9729:9754   */\n  swap2\n  pop\n    /* \"#utility.yul\":9768:9788   */\n  tag_263\n    /* \"#utility.yul\":9786:9787   */\n  dup4\n    /* \"#utility.yul\":9768:9788   */\n  tag_120\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":9763:9788   */\n  swap3\n  pop\n    /* \"#utility.yul\":9811:9812   */\n  dup3\n    /* \"#utility.yul\":9808:9809   */\n  dup3\n    /* \"#utility.yul\":9804:9813   */\n  add\n    /* \"#utility.yul\":9797:9813   */\n  swap1\n  pop\n    /* \"#utility.yul\":9832:9835   */\n  dup1\n    /* \"#utility.yul\":9829:9830   */\n  dup3\n    /* \"#utility.yul\":9826:9836   */\n  gt\n    /* \"#utility.yul\":9823:9859   */\n  iszero\n  tag_264\n  jumpi\n    /* \"#utility.yul\":9839:9857   */\n  tag_265\n  tag_144\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":9823:9859   */\ntag_264:\n    /* \"#utility.yul\":9675:9866   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9872:9990   */\ntag_145:\n    /* \"#utility.yul\":9959:9983   */\n  tag_267\n    /* \"#utility.yul\":9977:9982   */\n  dup2\n    /* \"#utility.yul\":9959:9983   */\n  tag_120\n  jump\t// in\ntag_267:\n    /* \"#utility.yul\":9954:9957   */\n  dup3\n    /* \"#utility.yul\":9947:9984   */\n  mstore\n    /* \"#utility.yul\":9872:9990   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9996:10438   */\ntag_77:\n    /* \"#utility.yul\":10145:10149   */\n  0x00\n    /* \"#utility.yul\":10183:10185   */\n  0x60\n    /* \"#utility.yul\":10172:10181   */\n  dup3\n    /* \"#utility.yul\":10168:10186   */\n  add\n    /* \"#utility.yul\":10160:10186   */\n  swap1\n  pop\n    /* \"#utility.yul\":10196:10267   */\n  tag_269\n    /* \"#utility.yul\":10264:10265   */\n  0x00\n    /* \"#utility.yul\":10253:10262   */\n  dup4\n    /* \"#utility.yul\":10249:10266   */\n  add\n    /* \"#utility.yul\":10240:10246   */\n  dup7\n    /* \"#utility.yul\":10196:10267   */\n  tag_143\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":10277:10349   */\n  tag_270\n    /* \"#utility.yul\":10345:10347   */\n  0x20\n    /* \"#utility.yul\":10334:10343   */\n  dup4\n    /* \"#utility.yul\":10330:10348   */\n  add\n    /* \"#utility.yul\":10321:10327   */\n  dup6\n    /* \"#utility.yul\":10277:10349   */\n  tag_145\n  jump\t// in\ntag_270:\n    /* \"#utility.yul\":10359:10431   */\n  tag_271\n    /* \"#utility.yul\":10427:10429   */\n  0x40\n    /* \"#utility.yul\":10416:10425   */\n  dup4\n    /* \"#utility.yul\":10412:10430   */\n  add\n    /* \"#utility.yul\":10403:10409   */\n  dup5\n    /* \"#utility.yul\":10359:10431   */\n  tag_145\n  jump\t// in\ntag_271:\n    /* \"#utility.yul\":9996:10438   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10444:10666   */\ntag_81:\n    /* \"#utility.yul\":10537:10541   */\n  0x00\n    /* \"#utility.yul\":10575:10577   */\n  0x20\n    /* \"#utility.yul\":10564:10573   */\n  dup3\n    /* \"#utility.yul\":10560:10578   */\n  add\n    /* \"#utility.yul\":10552:10578   */\n  swap1\n  pop\n    /* \"#utility.yul\":10588:10659   */\n  tag_273\n    /* \"#utility.yul\":10656:10657   */\n  0x00\n    /* \"#utility.yul\":10645:10654   */\n  dup4\n    /* \"#utility.yul\":10641:10658   */\n  add\n    /* \"#utility.yul\":10632:10638   */\n  dup5\n    /* \"#utility.yul\":10588:10659   */\n  tag_145\n  jump\t// in\ntag_273:\n    /* \"#utility.yul\":10444:10666   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10672:10749   */\ntag_146:\n    /* \"#utility.yul\":10709:10716   */\n  0x00\n    /* \"#utility.yul\":10738:10743   */\n  dup2\n    /* \"#utility.yul\":10727:10743   */\n  swap1\n  pop\n    /* \"#utility.yul\":10672:10749   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10755:10873   */\ntag_147:\n    /* \"#utility.yul\":10842:10866   */\n  tag_276\n    /* \"#utility.yul\":10860:10865   */\n  dup2\n    /* \"#utility.yul\":10842:10866   */\n  tag_146\n  jump\t// in\ntag_276:\n    /* \"#utility.yul\":10837:10840   */\n  dup3\n    /* \"#utility.yul\":10830:10867   */\n  mstore\n    /* \"#utility.yul\":10755:10873   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10879:11211   */\ntag_106:\n    /* \"#utility.yul\":11000:11004   */\n  0x00\n    /* \"#utility.yul\":11038:11040   */\n  0x40\n    /* \"#utility.yul\":11027:11036   */\n  dup3\n    /* \"#utility.yul\":11023:11041   */\n  add\n    /* \"#utility.yul\":11015:11041   */\n  swap1\n  pop\n    /* \"#utility.yul\":11051:11122   */\n  tag_278\n    /* \"#utility.yul\":11119:11120   */\n  0x00\n    /* \"#utility.yul\":11108:11117   */\n  dup4\n    /* \"#utility.yul\":11104:11121   */\n  add\n    /* \"#utility.yul\":11095:11101   */\n  dup6\n    /* \"#utility.yul\":11051:11122   */\n  tag_143\n  jump\t// in\ntag_278:\n    /* \"#utility.yul\":11132:11204   */\n  tag_279\n    /* \"#utility.yul\":11200:11202   */\n  0x20\n    /* \"#utility.yul\":11189:11198   */\n  dup4\n    /* \"#utility.yul\":11185:11203   */\n  add\n    /* \"#utility.yul\":11176:11182   */\n  dup5\n    /* \"#utility.yul\":11132:11204   */\n  tag_147\n  jump\t// in\ntag_279:\n    /* \"#utility.yul\":10879:11211   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"Permissions2.sol\":314:6368  contract ERC20PermissionsControl is ERC20, AccessControl, Ownable {... */\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Permissions2.sol\":314:6368  contract ERC20PermissionsControl is ERC20, AccessControl, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_48\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xe5839836\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf26c159f\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf44637ba\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_45\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0xa9059cbb\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc2134b23\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd1c2de0a\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x939bcbc9\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x939bcbc9\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x974b368c\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x983b2d56\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x70a08231\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x788649ea\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x282c51f3\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x36568abe\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x410b2424\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x44337ea1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x526606c9\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x537df3b6\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0x282c51f3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2acd2000\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3092afd5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x0eff2afc\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x0eff2afc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x1ec82cb8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_52:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x02846858\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06a85f0f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":5092:5199  function removeBurner(address account) public onlyOwner {... */\n    tag_4:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Permissions2.sol\":610:674  bytes32 public constant FREEZER_ROLE = keccak256(\"FREEZER_ROLE\") */\n    tag_5:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_6:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":5654:5778  function addBlacklistManager(address account) public onlyOwner {... */\n    tag_8:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_9:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":3746:3881  function recover(address from, address to, uint256 amount) public onlyRole(RECOVER_ROLE) {... */\n    tag_10:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_12:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":541:603  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_13:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":5458:5567  function removeFreezer(address account) public onlyOwner {... */\n    tag_14:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      stop\n        /* \"Permissions2.sol\":4730:4837  function removeMinter(address account) public onlyOwner {... */\n    tag_16:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_17:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_18:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"Permissions2.sol\":1585:1692  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_19:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"Permissions2.sol\":681:765  bytes32 public constant BLACKLIST_MANAGER_ROLE = keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n    tag_20:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":2888:3112  function addToBlacklist(address account) public onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n    tag_21:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      stop\n        /* \"Permissions2.sol\":5276:5381  function addFreezer(address account) public onlyOwner {... */\n    tag_22:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      stop\n        /* \"Permissions2.sol\":3192:3419  function removeFromBlacklist(address account) public onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n    tag_23:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      stop\n        /* \"Permissions2.sol\":2309:2507  function unfreezeAccount(address account) public onlyRole(FREEZER_ROLE) {... */\n    tag_26:\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_27:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_28:\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":772:836  bytes32 public constant RECOVER_ROLE = keccak256(\"RECOVER_ROLE\") */\n    tag_29:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_30:\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":5865:5993  function removeBlacklistManager(address account) public onlyOwner {... */\n    tag_31:\n      tag_154\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n    tag_154:\n      stop\n        /* \"Permissions2.sol\":4551:4654  function addMinter(address account) public onlyOwner {... */\n    tag_32:\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n    tag_157:\n      stop\n        /* \"Permissions2.sol\":1742:1853  function burn(address from, uint256 amount) public onlyRole(BURNER_ROLE) {... */\n    tag_33:\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_34:\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":3975:4475  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_35:\n      tag_166\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":6070:6177  function addRecoverer(address account) public onlyOwner {... */\n    tag_36:\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_171:\n      tag_172\n      jump\t// in\n    tag_170:\n      stop\n        /* \"Permissions2.sol\":6254:6365  function removeRecoverer(address account) public onlyOwner {... */\n    tag_37:\n      tag_173\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n    tag_173:\n      stop\n        /* \"Permissions2.sol\":472:534  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_38:\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      tag_178\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_39:\n      tag_179\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n    tag_179:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_40:\n      tag_182\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      tag_185\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":2570:2686  function isFrozen(address account) public view returns (bool) {... */\n    tag_41:\n      tag_187\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_188:\n      tag_189\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      tag_190\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Permissions2.sol\":2043:2241  function freezeAccount(address account) public onlyRole(FREEZER_ROLE) {... */\n    tag_42:\n      tag_191\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_192:\n      tag_193\n      jump\t// in\n    tag_191:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_43:\n      tag_194\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_195:\n      tag_196\n      jump\t// in\n    tag_194:\n      stop\n        /* \"Permissions2.sol\":4913:5016  function addBurner(address account) public onlyOwner {... */\n    tag_44:\n      tag_197\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_198:\n      tag_199\n      jump\t// in\n    tag_197:\n      stop\n        /* \"Permissions2.sol\":3484:3610  function isBlacklisted(address account) public view returns (bool) {... */\n    tag_45:\n      tag_200\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_201:\n      tag_202\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      tag_203\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_205\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_207\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":5092:5199  function removeBurner(address account) public onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_209:\n        /* \"Permissions2.sol\":5159:5191  revokeRole(BURNER_ROLE, account) */\n      tag_212\n        /* \"Permissions2.sol\":579:603  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"Permissions2.sol\":5183:5190  account */\n      dup3\n        /* \"Permissions2.sol\":5159:5169  revokeRole */\n      tag_181\n        /* \"Permissions2.sol\":5159:5191  revokeRole(BURNER_ROLE, account) */\n      jump\t// in\n    tag_212:\n        /* \"Permissions2.sol\":5092:5199  function removeBurner(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":610:674  bytes32 public constant FREEZER_ROLE = keccak256(\"FREEZER_ROLE\") */\n    tag_64:\n        /* \"Permissions2.sol\":649:674  keccak256(\"FREEZER_ROLE\") */\n      0x92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363\n        /* \"Permissions2.sol\":610:674  bytes32 public constant FREEZER_ROLE = keccak256(\"FREEZER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_216\n      swap1\n      tag_215\n      jump\t// in\n    tag_216:\n      dup1\n      iszero\n      tag_217\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_218\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_217)\n    tag_218:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_219:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_219\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":5654:5778  function addBlacklistManager(address account) public onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"Permissions2.sol\":5728:5770  grantRole(BLACKLIST_MANAGER_ROLE, account) */\n      tag_228\n        /* \"Permissions2.sol\":730:765  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n        /* \"Permissions2.sol\":5762:5769  account */\n      dup3\n        /* \"Permissions2.sol\":5728:5737  grantRole */\n      tag_105\n        /* \"Permissions2.sol\":5728:5770  grantRole(BLACKLIST_MANAGER_ROLE, account) */\n      jump\t// in\n    tag_228:\n        /* \"Permissions2.sol\":5654:5778  function addBlacklistManager(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Permissions2.sol\":3746:3881  function recover(address from, address to, uint256 amount) public onlyRole(RECOVER_ROLE) {... */\n    tag_86:\n        /* \"Permissions2.sol\":811:836  keccak256(\"RECOVER_ROLE\") */\n      0x62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_231\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_231:\n        /* \"Permissions2.sol\":3846:3873  _transfer(from, to, amount) */\n      tag_234\n        /* \"Permissions2.sol\":3856:3860  from */\n      dup5\n        /* \"Permissions2.sol\":3862:3864  to */\n      dup5\n        /* \"Permissions2.sol\":3866:3872  amount */\n      dup5\n        /* \"Permissions2.sol\":3846:3855  _transfer */\n      tag_235\n        /* \"Permissions2.sol\":3846:3873  _transfer(from, to, amount) */\n      jump\t// in\n    tag_234:\n        /* \"Permissions2.sol\":3746:3881  function recover(address from, address to, uint256 amount) public onlyRole(RECOVER_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":541:603  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_97:\n        /* \"Permissions2.sol\":579:603  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"Permissions2.sol\":541:603  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"Permissions2.sol\":5458:5567  function removeFreezer(address account) public onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_243:\n        /* \"Permissions2.sol\":5526:5559  revokeRole(FREEZER_ROLE, account) */\n      tag_245\n        /* \"Permissions2.sol\":649:674  keccak256(\"FREEZER_ROLE\") */\n      0x92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363\n        /* \"Permissions2.sol\":5551:5558  account */\n      dup3\n        /* \"Permissions2.sol\":5526:5536  revokeRole */\n      tag_181\n        /* \"Permissions2.sol\":5526:5559  revokeRole(FREEZER_ROLE, account) */\n      jump\t// in\n    tag_245:\n        /* \"Permissions2.sol\":5458:5567  function removeFreezer(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_248\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_250:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":4730:4837  function removeMinter(address account) public onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_253:\n        /* \"Permissions2.sol\":4797:4829  revokeRole(MINTER_ROLE, account) */\n      tag_255\n        /* \"Permissions2.sol\":510:534  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"Permissions2.sol\":4821:4828  account */\n      dup3\n        /* \"Permissions2.sol\":4797:4807  revokeRole */\n      tag_181\n        /* \"Permissions2.sol\":4797:4829  revokeRole(MINTER_ROLE, account) */\n      jump\t// in\n    tag_255:\n        /* \"Permissions2.sol\":4730:4837  function removeMinter(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_258\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_260\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_260:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":1585:1692  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_118:\n        /* \"Permissions2.sol\":510:534  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_263:\n        /* \"Permissions2.sol\":1667:1684  _mint(to, amount) */\n      tag_265\n        /* \"Permissions2.sol\":1673:1675  to */\n      dup4\n        /* \"Permissions2.sol\":1677:1683  amount */\n      dup4\n        /* \"Permissions2.sol\":1667:1672  _mint */\n      tag_266\n        /* \"Permissions2.sol\":1667:1684  _mint(to, amount) */\n      jump\t// in\n    tag_265:\n        /* \"Permissions2.sol\":1585:1692  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":681:765  bytes32 public constant BLACKLIST_MANAGER_ROLE = keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n    tag_120:\n        /* \"Permissions2.sol\":730:765  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n        /* \"Permissions2.sol\":681:765  bytes32 public constant BLACKLIST_MANAGER_ROLE = keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"Permissions2.sol\":2888:3112  function addToBlacklist(address account) public onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n    tag_124:\n        /* \"Permissions2.sol\":730:765  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_268\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_268:\n        /* \"Permissions2.sol\":2989:3026  blacklistedAccounts.contains(account) */\n      tag_270\n        /* \"Permissions2.sol\":3018:3025  account */\n      dup3\n        /* \"Permissions2.sol\":2989:3008  blacklistedAccounts */\n      0x09\n        /* \"Permissions2.sol\":2989:3017  blacklistedAccounts.contains */\n      tag_271\n      swap1\n        /* \"Permissions2.sol\":2989:3026  blacklistedAccounts.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"Permissions2.sol\":2988:3026  !blacklistedAccounts.contains(account) */\n      iszero\n        /* \"Permissions2.sol\":2980:3061  require(!blacklistedAccounts.contains(account), \"Account is already blacklisted\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_272:\n        /* \"Permissions2.sol\":3072:3104  blacklistedAccounts.add(account) */\n      tag_275\n        /* \"Permissions2.sol\":3096:3103  account */\n      dup3\n        /* \"Permissions2.sol\":3072:3091  blacklistedAccounts */\n      0x09\n        /* \"Permissions2.sol\":3072:3095  blacklistedAccounts.add */\n      tag_276\n      swap1\n        /* \"Permissions2.sol\":3072:3104  blacklistedAccounts.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_275:\n      pop\n        /* \"Permissions2.sol\":2888:3112  function addToBlacklist(address account) public onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":5276:5381  function addFreezer(address account) public onlyOwner {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_278:\n        /* \"Permissions2.sol\":5341:5373  grantRole(FREEZER_ROLE, account) */\n      tag_280\n        /* \"Permissions2.sol\":649:674  keccak256(\"FREEZER_ROLE\") */\n      0x92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363\n        /* \"Permissions2.sol\":5365:5372  account */\n      dup3\n        /* \"Permissions2.sol\":5341:5350  grantRole */\n      tag_105\n        /* \"Permissions2.sol\":5341:5373  grantRole(FREEZER_ROLE, account) */\n      jump\t// in\n    tag_280:\n        /* \"Permissions2.sol\":5276:5381  function addFreezer(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":3192:3419  function removeFromBlacklist(address account) public onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n    tag_130:\n        /* \"Permissions2.sol\":730:765  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_282\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_282:\n        /* \"Permissions2.sol\":3297:3334  blacklistedAccounts.contains(account) */\n      tag_284\n        /* \"Permissions2.sol\":3326:3333  account */\n      dup3\n        /* \"Permissions2.sol\":3297:3316  blacklistedAccounts */\n      0x09\n        /* \"Permissions2.sol\":3297:3325  blacklistedAccounts.contains */\n      tag_271\n      swap1\n        /* \"Permissions2.sol\":3297:3334  blacklistedAccounts.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"Permissions2.sol\":3289:3365  require(blacklistedAccounts.contains(account), \"Account is not blacklisted\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"Permissions2.sol\":3376:3411  blacklistedAccounts.remove(account) */\n      tag_288\n        /* \"Permissions2.sol\":3403:3410  account */\n      dup3\n        /* \"Permissions2.sol\":3376:3395  blacklistedAccounts */\n      0x09\n        /* \"Permissions2.sol\":3376:3402  blacklistedAccounts.remove */\n      tag_289\n      swap1\n        /* \"Permissions2.sol\":3376:3411  blacklistedAccounts.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_288:\n      pop\n        /* \"Permissions2.sol\":3192:3419  function removeFromBlacklist(address account) public onlyRole(BLACKLIST_MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Permissions2.sol\":2309:2507  function unfreezeAccount(address account) public onlyRole(FREEZER_ROLE) {... */\n    tag_139:\n        /* \"Permissions2.sol\":649:674  keccak256(\"FREEZER_ROLE\") */\n      0x92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_297\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_297:\n        /* \"Permissions2.sol\":2400:2432  frozenAccounts.contains(account) */\n      tag_299\n        /* \"Permissions2.sol\":2424:2431  account */\n      dup3\n        /* \"Permissions2.sol\":2400:2414  frozenAccounts */\n      0x07\n        /* \"Permissions2.sol\":2400:2423  frozenAccounts.contains */\n      tag_271\n      swap1\n        /* \"Permissions2.sol\":2400:2432  frozenAccounts.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_299:\n        /* \"Permissions2.sol\":2392:2458  require(frozenAccounts.contains(account), \"Account is not frozen\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"Permissions2.sol\":2469:2499  frozenAccounts.remove(account) */\n      tag_303\n        /* \"Permissions2.sol\":2491:2498  account */\n      dup3\n        /* \"Permissions2.sol\":2469:2483  frozenAccounts */\n      0x07\n        /* \"Permissions2.sol\":2469:2490  frozenAccounts.remove */\n      tag_289\n      swap1\n        /* \"Permissions2.sol\":2469:2499  frozenAccounts.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_303:\n      pop\n        /* \"Permissions2.sol\":2309:2507  function unfreezeAccount(address account) public onlyRole(FREEZER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":772:836  bytes32 public constant RECOVER_ROLE = keccak256(\"RECOVER_ROLE\") */\n    tag_149:\n        /* \"Permissions2.sol\":811:836  keccak256(\"RECOVER_ROLE\") */\n      0x62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066\n        /* \"Permissions2.sol\":772:836  bytes32 public constant RECOVER_ROLE = keccak256(\"RECOVER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_307\n      swap1\n      tag_215\n      jump\t// in\n    tag_307:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_308\n      swap1\n      tag_215\n      jump\t// in\n    tag_308:\n      dup1\n      iszero\n      tag_309\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_310\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_309)\n    tag_310:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_311:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_311\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_309:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Permissions2.sol\":5865:5993  function removeBlacklistManager(address account) public onlyOwner {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_313:\n        /* \"Permissions2.sol\":5942:5985  revokeRole(BLACKLIST_MANAGER_ROLE, account) */\n      tag_315\n        /* \"Permissions2.sol\":730:765  keccak256(\"BLACKLIST_MANAGER_ROLE\") */\n      0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee\n        /* \"Permissions2.sol\":5977:5984  account */\n      dup3\n        /* \"Permissions2.sol\":5942:5952  revokeRole */\n      tag_181\n        /* \"Permissions2.sol\":5942:5985  revokeRole(BLACKLIST_MANAGER_ROLE, account) */\n      jump\t// in\n    tag_315:\n        /* \"Permissions2.sol\":5865:5993  function removeBlacklistManager(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":4551:4654  function addMinter(address account) public onlyOwner {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_317\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_317:\n        /* \"Permissions2.sol\":4615:4646  grantRole(MINTER_ROLE, account) */\n      tag_319\n        /* \"Permissions2.sol\":510:534  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"Permissions2.sol\":4638:4645  account */\n      dup3\n        /* \"Permissions2.sol\":4615:4624  grantRole */\n      tag_105\n        /* \"Permissions2.sol\":4615:4646  grantRole(MINTER_ROLE, account) */\n      jump\t// in\n    tag_319:\n        /* \"Permissions2.sol\":4551:4654  function addMinter(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":1742:1853  function burn(address from, uint256 amount) public onlyRole(BURNER_ROLE) {... */\n    tag_162:\n        /* \"Permissions2.sol\":579:603  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_321\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_321:\n        /* \"Permissions2.sol\":1826:1845  _burn(from, amount) */\n      tag_323\n        /* \"Permissions2.sol\":1832:1836  from */\n      dup4\n        /* \"Permissions2.sol\":1838:1844  amount */\n      dup4\n        /* \"Permissions2.sol\":1826:1831  _burn */\n      tag_324\n        /* \"Permissions2.sol\":1826:1845  _burn(from, amount) */\n      jump\t// in\n    tag_323:\n        /* \"Permissions2.sol\":1742:1853  function burn(address from, uint256 amount) public onlyRole(BURNER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"Permissions2.sol\":3975:4475  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_168:\n        /* \"Permissions2.sol\":4054:4058  bool */\n      0x00\n        /* \"Permissions2.sol\":4071:4084  address owner */\n      dup1\n        /* \"Permissions2.sol\":4087:4099  _msgSender() */\n      tag_326\n        /* \"Permissions2.sol\":4087:4097  _msgSender */\n      tag_222\n        /* \"Permissions2.sol\":4087:4099  _msgSender() */\n      jump\t// in\n    tag_326:\n        /* \"Permissions2.sol\":4071:4099  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Permissions2.sol\":4119:4149  frozenAccounts.contains(owner) */\n      tag_327\n        /* \"Permissions2.sol\":4143:4148  owner */\n      dup2\n        /* \"Permissions2.sol\":4119:4133  frozenAccounts */\n      0x07\n        /* \"Permissions2.sol\":4119:4142  frozenAccounts.contains */\n      tag_271\n      swap1\n        /* \"Permissions2.sol\":4119:4149  frozenAccounts.contains(owner) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_327:\n        /* \"Permissions2.sol\":4118:4149  !frozenAccounts.contains(owner) */\n      iszero\n        /* \"Permissions2.sol\":4110:4178  require(!frozenAccounts.contains(owner), \"Sender account is frozen\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"Permissions2.sol\":4198:4233  blacklistedAccounts.contains(owner) */\n      tag_331\n        /* \"Permissions2.sol\":4227:4232  owner */\n      dup2\n        /* \"Permissions2.sol\":4198:4217  blacklistedAccounts */\n      0x09\n        /* \"Permissions2.sol\":4198:4226  blacklistedAccounts.contains */\n      tag_271\n      swap1\n        /* \"Permissions2.sol\":4198:4233  blacklistedAccounts.contains(owner) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_331:\n        /* \"Permissions2.sol\":4197:4233  !blacklistedAccounts.contains(owner) */\n      iszero\n        /* \"Permissions2.sol\":4189:4267  require(!blacklistedAccounts.contains(owner), \"Sender account is blacklisted\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"Permissions2.sol\":4287:4319  blacklistedAccounts.contains(to) */\n      tag_335\n        /* \"Permissions2.sol\":4316:4318  to */\n      dup5\n        /* \"Permissions2.sol\":4287:4306  blacklistedAccounts */\n      0x09\n        /* \"Permissions2.sol\":4287:4315  blacklistedAccounts.contains */\n      tag_271\n      swap1\n        /* \"Permissions2.sol\":4287:4319  blacklistedAccounts.contains(to) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_335:\n        /* \"Permissions2.sol\":4286:4319  !blacklistedAccounts.contains(to) */\n      iszero\n        /* \"Permissions2.sol\":4278:4356  require(!blacklistedAccounts.contains(to), \"Recipient account is blacklisted\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_336:\n        /* \"Permissions2.sol\":4376:4402  super.transfer(to, amount) */\n      tag_339\n        /* \"Permissions2.sol\":4391:4393  to */\n      dup5\n        /* \"Permissions2.sol\":4395:4401  amount */\n      dup5\n        /* \"Permissions2.sol\":4376:4390  super.transfer */\n      tag_340\n        /* \"Permissions2.sol\":4376:4402  super.transfer(to, amount) */\n      jump\t// in\n    tag_339:\n        /* \"Permissions2.sol\":4369:4402  return super.transfer(to, amount) */\n      swap2\n      pop\n      pop\n        /* \"Permissions2.sol\":3975:4475  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":6070:6177  function addRecoverer(address account) public onlyOwner {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_342\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_342:\n        /* \"Permissions2.sol\":6137:6169  grantRole(RECOVER_ROLE, account) */\n      tag_344\n        /* \"Permissions2.sol\":811:836  keccak256(\"RECOVER_ROLE\") */\n      0x62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066\n        /* \"Permissions2.sol\":6161:6168  account */\n      dup3\n        /* \"Permissions2.sol\":6137:6146  grantRole */\n      tag_105\n        /* \"Permissions2.sol\":6137:6169  grantRole(RECOVER_ROLE, account) */\n      jump\t// in\n    tag_344:\n        /* \"Permissions2.sol\":6070:6177  function addRecoverer(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":6254:6365  function removeRecoverer(address account) public onlyOwner {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_346\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_346:\n        /* \"Permissions2.sol\":6324:6357  revokeRole(RECOVER_ROLE, account) */\n      tag_348\n        /* \"Permissions2.sol\":811:836  keccak256(\"RECOVER_ROLE\") */\n      0x62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066\n        /* \"Permissions2.sol\":6349:6356  account */\n      dup3\n        /* \"Permissions2.sol\":6324:6334  revokeRole */\n      tag_181\n        /* \"Permissions2.sol\":6324:6357  revokeRole(RECOVER_ROLE, account) */\n      jump\t// in\n    tag_348:\n        /* \"Permissions2.sol\":6254:6365  function removeRecoverer(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":472:534  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_177:\n        /* \"Permissions2.sol\":510:534  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"Permissions2.sol\":472:534  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_349\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_351\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_353\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_353:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":2570:2686  function isFrozen(address account) public view returns (bool) {... */\n    tag_189:\n        /* \"Permissions2.sol\":2626:2630  bool */\n      0x00\n        /* \"Permissions2.sol\":2646:2678  frozenAccounts.contains(account) */\n      tag_356\n        /* \"Permissions2.sol\":2670:2677  account */\n      dup3\n        /* \"Permissions2.sol\":2646:2660  frozenAccounts */\n      0x07\n        /* \"Permissions2.sol\":2646:2669  frozenAccounts.contains */\n      tag_271\n      swap1\n        /* \"Permissions2.sol\":2646:2678  frozenAccounts.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_356:\n        /* \"Permissions2.sol\":2639:2678  return frozenAccounts.contains(account) */\n      swap1\n      pop\n        /* \"Permissions2.sol\":2570:2686  function isFrozen(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":2043:2241  function freezeAccount(address account) public onlyRole(FREEZER_ROLE) {... */\n    tag_193:\n        /* \"Permissions2.sol\":649:674  keccak256(\"FREEZER_ROLE\") */\n      0x92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_358\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_358:\n        /* \"Permissions2.sol\":2133:2165  frozenAccounts.contains(account) */\n      tag_360\n        /* \"Permissions2.sol\":2157:2164  account */\n      dup3\n        /* \"Permissions2.sol\":2133:2147  frozenAccounts */\n      0x07\n        /* \"Permissions2.sol\":2133:2156  frozenAccounts.contains */\n      tag_271\n      swap1\n        /* \"Permissions2.sol\":2133:2165  frozenAccounts.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_360:\n        /* \"Permissions2.sol\":2132:2165  !frozenAccounts.contains(account) */\n      iszero\n        /* \"Permissions2.sol\":2124:2195  require(!frozenAccounts.contains(account), \"Account is already frozen\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_362\n      swap1\n      tag_363\n      jump\t// in\n    tag_362:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_361:\n        /* \"Permissions2.sol\":2206:2233  frozenAccounts.add(account) */\n      tag_364\n        /* \"Permissions2.sol\":2225:2232  account */\n      dup3\n        /* \"Permissions2.sol\":2206:2220  frozenAccounts */\n      0x07\n        /* \"Permissions2.sol\":2206:2224  frozenAccounts.add */\n      tag_276\n      swap1\n        /* \"Permissions2.sol\":2206:2233  frozenAccounts.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_364:\n      pop\n        /* \"Permissions2.sol\":2043:2241  function freezeAccount(address account) public onlyRole(FREEZER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_366\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_369\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_370\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":4913:5016  function addBurner(address account) public onlyOwner {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_372\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_372:\n        /* \"Permissions2.sol\":4977:5008  grantRole(BURNER_ROLE, account) */\n      tag_374\n        /* \"Permissions2.sol\":579:603  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"Permissions2.sol\":5000:5007  account */\n      dup3\n        /* \"Permissions2.sol\":4977:4986  grantRole */\n      tag_105\n        /* \"Permissions2.sol\":4977:5008  grantRole(BURNER_ROLE, account) */\n      jump\t// in\n    tag_374:\n        /* \"Permissions2.sol\":4913:5016  function addBurner(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Permissions2.sol\":3484:3610  function isBlacklisted(address account) public view returns (bool) {... */\n    tag_202:\n        /* \"Permissions2.sol\":3545:3549  bool */\n      0x00\n        /* \"Permissions2.sol\":3565:3602  blacklistedAccounts.contains(account) */\n      tag_376\n        /* \"Permissions2.sol\":3594:3601  account */\n      dup3\n        /* \"Permissions2.sol\":3565:3584  blacklistedAccounts */\n      0x09\n        /* \"Permissions2.sol\":3565:3593  blacklistedAccounts.contains */\n      tag_271\n      swap1\n        /* \"Permissions2.sol\":3565:3602  blacklistedAccounts.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_376:\n        /* \"Permissions2.sol\":3558:3602  return blacklistedAccounts.contains(account) */\n      swap1\n      pop\n        /* \"Permissions2.sol\":3484:3610  function isBlacklisted(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_379\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_380\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_382\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_386\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_387\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_389\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_390\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_391\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_393\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_394\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_394:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_393:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_396\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_397\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_398\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_400\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_401\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_403\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_404\n      jump\t// in\n    tag_403:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_402:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_405\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_387\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_407\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_409\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_406)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_406:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_412\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_414\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_414:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_411)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_411:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_418\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_418:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_398\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8871:9036  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8951:8955  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:9029  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_421\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8984:8987  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8984:8994  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9020:9025  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9004:9027  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8996:9028  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:8983  _contains */\n      tag_422\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:9029  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_421:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8967:9029  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8871:9036  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8316:8466  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8386:8390  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8459  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_424\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8414:8417  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8414:8424  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8450:8455  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8434:8457  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8426:8458  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8413  _add */\n      tag_425\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8459  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8402:8459  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8316:8466  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8634:8790  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8707:8711  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8730:8783  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_427\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8738:8741  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8738:8748  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8774:8779  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8758:8781  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8750:8782  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8730:8737  _remove */\n      tag_428\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8730:8783  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_427:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8723:8783  return _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8634:8790  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_431\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_432\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_432:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_431:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_433\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_398\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_433:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_435\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_435:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_436\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_436:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_387:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_438\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_439\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_439:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_438:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_440\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_441\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_441:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_440:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_442\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_443\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_443:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_442:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_445\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_445:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_446\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_447\n      swap3\n      swap2\n      swap1\n      tag_448\n      jump\t// in\n    tag_447:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_446:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_398:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_450\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_451\n      swap2\n      swap1\n      tag_452\n      jump\t// in\n    tag_451:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_453)\n    tag_450:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_455\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_404\n      jump\t// in\n    tag_455:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_454:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_453:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_456\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_457)\n    tag_456:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_457:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_458\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_458:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_422:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4337:4341  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4385:4386  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4363  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4375:4380  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4353:4386  return set._positions[value] != 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_425:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2304:2308  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      tag_461\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2335:2338  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2340:2345  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2334  _contains */\n      tag_422\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      jump\t// in\n    tag_461:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n      tag_462\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2365  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2373  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2379:2384  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2547  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2555  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2562  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2523  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2534  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2535:2540  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2562  set._positions[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2583:2587  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2576:2587  return true */\n      swap1\n      pop\n      jump(tag_460)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n    tag_462:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2625:2630  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2618:2630  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_460:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2815:4183  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2881:2885  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2991:3007  uint256 position */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3013  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3024  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3031  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3025:3030  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3031  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2991:3031  uint256 position = set._positions[value] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3058:3059  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3046:3054  position */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3046:3059  position != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3042:4177  if (position != 0) {... */\n      tag_466\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3413:3431  uint256 valueIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3445:3446  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3434:3442  position */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3434:3446  position - 1 */\n      tag_467\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_467:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3413:3446  uint256 valueIndex = position - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3460:3477  uint256 lastIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3501:3502  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3483  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3491  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3498  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3502  set._values.length - 1 */\n      tag_469\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3460:3502  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3535:3544  lastIndex */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3521:3531  valueIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3521:3544  valueIndex != lastIndex */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3517:3895  if (valueIndex != lastIndex) {... */\n      tag_470\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3564:3581  bytes32 lastValue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3584:3587  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3584:3595  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3596:3605  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3584:3606  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_471\n      jumpi\n      tag_472\n      tag_473\n      jump\t// in\n    tag_472:\n    tag_471:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3564:3606  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3731:3740  lastValue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3708  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3716  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3717:3727  valueIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3728  set._values[valueIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_475\n      jumpi\n      tag_476\n      tag_473\n      jump\t// in\n    tag_476:\n    tag_475:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3740  set._values[valueIndex] = lastValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3872:3880  position */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3847  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3858  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3869  set._positions[lastValue] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3859:3868  lastValue */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3869  set._positions[lastValue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3880  set._positions[lastValue] = position */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3546:3895  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3517:3895  if (valueIndex != lastIndex) {... */\n    tag_470:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3973:3976  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3973:3984  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3973:3990  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_478\n      jumpi\n      tag_479\n      tag_480\n      jump\t// in\n    tag_479:\n    tag_478:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4079  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4090  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4097  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4091:4096  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4097  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4069:4097  delete set._positions[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4119:4123  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4112:4123  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_465)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3042:4177  if (position != 0) {... */\n    tag_466:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4161:4166  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4154:4166  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2815:4183  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_465:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_484:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_486:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_487:\n        /* \"#utility.yul\":561:584   */\n      tag_533\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_486\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_534:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_488:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_536\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_487\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_55:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_539\n      tag_484\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":833:952   */\n    tag_538:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_540\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_488\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_489:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_490:\n        /* \"#utility.yul\":1268:1289   */\n      tag_543\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_489\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_58:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_545\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_490\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_491:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_492:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_548\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_491\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_493:\n        /* \"#utility.yul\":1825:1849   */\n      tag_550\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_492\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_551:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_494:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_553\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_493\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_61:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_556\n      tag_484\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":2101:2220   */\n    tag_555:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_557\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_494\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2437   */\n    tag_495:\n        /* \"#utility.yul\":2397:2404   */\n      0x00\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2415:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2561   */\n    tag_496:\n        /* \"#utility.yul\":2530:2554   */\n      tag_560\n        /* \"#utility.yul\":2548:2553   */\n      dup2\n        /* \"#utility.yul\":2530:2554   */\n      tag_495\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":2525:2528   */\n      dup3\n        /* \"#utility.yul\":2518:2555   */\n      mstore\n        /* \"#utility.yul\":2443:2561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2789   */\n    tag_66:\n        /* \"#utility.yul\":2660:2664   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2687:2696   */\n      dup3\n        /* \"#utility.yul\":2683:2701   */\n      add\n        /* \"#utility.yul\":2675:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2782   */\n      tag_562\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2755:2761   */\n      dup5\n        /* \"#utility.yul\":2711:2782   */\n      tag_496\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":2567:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2894   */\n    tag_497:\n        /* \"#utility.yul\":2847:2853   */\n      0x00\n        /* \"#utility.yul\":2881:2886   */\n      dup2\n        /* \"#utility.yul\":2875:2887   */\n      mload\n        /* \"#utility.yul\":2865:2887   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2900:3069   */\n    tag_498:\n        /* \"#utility.yul\":2984:2995   */\n      0x00\n        /* \"#utility.yul\":3018:3024   */\n      dup3\n        /* \"#utility.yul\":3013:3016   */\n      dup3\n        /* \"#utility.yul\":3006:3025   */\n      mstore\n        /* \"#utility.yul\":3058:3062   */\n      0x20\n        /* \"#utility.yul\":3053:3056   */\n      dup3\n        /* \"#utility.yul\":3049:3063   */\n      add\n        /* \"#utility.yul\":3034:3063   */\n      swap1\n      pop\n        /* \"#utility.yul\":2900:3069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3075:3214   */\n    tag_499:\n        /* \"#utility.yul\":3164:3170   */\n      dup3\n        /* \"#utility.yul\":3159:3162   */\n      dup2\n        /* \"#utility.yul\":3154:3157   */\n      dup4\n        /* \"#utility.yul\":3148:3171   */\n      mcopy\n        /* \"#utility.yul\":3205:3206   */\n      0x00\n        /* \"#utility.yul\":3196:3202   */\n      dup4\n        /* \"#utility.yul\":3191:3194   */\n      dup4\n        /* \"#utility.yul\":3187:3203   */\n      add\n        /* \"#utility.yul\":3180:3207   */\n      mstore\n        /* \"#utility.yul\":3075:3214   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3220:3322   */\n    tag_500:\n        /* \"#utility.yul\":3261:3267   */\n      0x00\n        /* \"#utility.yul\":3312:3314   */\n      0x1f\n        /* \"#utility.yul\":3308:3315   */\n      not\n        /* \"#utility.yul\":3303:3305   */\n      0x1f\n        /* \"#utility.yul\":3296:3301   */\n      dup4\n        /* \"#utility.yul\":3292:3306   */\n      add\n        /* \"#utility.yul\":3288:3316   */\n      and\n        /* \"#utility.yul\":3278:3316   */\n      swap1\n      pop\n        /* \"#utility.yul\":3220:3322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3328:3705   */\n    tag_501:\n        /* \"#utility.yul\":3416:3419   */\n      0x00\n        /* \"#utility.yul\":3444:3483   */\n      tag_568\n        /* \"#utility.yul\":3477:3482   */\n      dup3\n        /* \"#utility.yul\":3444:3483   */\n      tag_497\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":3499:3570   */\n      tag_569\n        /* \"#utility.yul\":3563:3569   */\n      dup2\n        /* \"#utility.yul\":3558:3561   */\n      dup6\n        /* \"#utility.yul\":3499:3570   */\n      tag_498\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":3492:3570   */\n      swap4\n      pop\n        /* \"#utility.yul\":3579:3644   */\n      tag_570\n        /* \"#utility.yul\":3637:3643   */\n      dup2\n        /* \"#utility.yul\":3632:3635   */\n      dup6\n        /* \"#utility.yul\":3625:3629   */\n      0x20\n        /* \"#utility.yul\":3618:3623   */\n      dup7\n        /* \"#utility.yul\":3614:3630   */\n      add\n        /* \"#utility.yul\":3579:3644   */\n      tag_499\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":3669:3698   */\n      tag_571\n        /* \"#utility.yul\":3691:3697   */\n      dup2\n        /* \"#utility.yul\":3669:3698   */\n      tag_500\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":3664:3667   */\n      dup5\n        /* \"#utility.yul\":3660:3699   */\n      add\n        /* \"#utility.yul\":3653:3699   */\n      swap2\n      pop\n        /* \"#utility.yul\":3420:3705   */\n      pop\n        /* \"#utility.yul\":3328:3705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3711:4024   */\n    tag_70:\n        /* \"#utility.yul\":3824:3828   */\n      0x00\n        /* \"#utility.yul\":3862:3864   */\n      0x20\n        /* \"#utility.yul\":3851:3860   */\n      dup3\n        /* \"#utility.yul\":3847:3865   */\n      add\n        /* \"#utility.yul\":3839:3865   */\n      swap1\n      pop\n        /* \"#utility.yul\":3911:3920   */\n      dup2\n        /* \"#utility.yul\":3905:3909   */\n      dup2\n        /* \"#utility.yul\":3901:3921   */\n      sub\n        /* \"#utility.yul\":3897:3898   */\n      0x00\n        /* \"#utility.yul\":3886:3895   */\n      dup4\n        /* \"#utility.yul\":3882:3899   */\n      add\n        /* \"#utility.yul\":3875:3922   */\n      mstore\n        /* \"#utility.yul\":3939:4017   */\n      tag_573\n        /* \"#utility.yul\":4012:4016   */\n      dup2\n        /* \"#utility.yul\":4003:4009   */\n      dup5\n        /* \"#utility.yul\":3939:4017   */\n      tag_501\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":3931:4017   */\n      swap1\n      pop\n        /* \"#utility.yul\":3711:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4107   */\n    tag_502:\n        /* \"#utility.yul\":4067:4074   */\n      0x00\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4085:4101   */\n      swap1\n      pop\n        /* \"#utility.yul\":4030:4107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4113:4235   */\n    tag_503:\n        /* \"#utility.yul\":4186:4210   */\n      tag_576\n        /* \"#utility.yul\":4204:4209   */\n      dup2\n        /* \"#utility.yul\":4186:4210   */\n      tag_502\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":4179:4184   */\n      dup2\n        /* \"#utility.yul\":4176:4211   */\n      eq\n        /* \"#utility.yul\":4166:4229   */\n      tag_577\n      jumpi\n        /* \"#utility.yul\":4225:4226   */\n      0x00\n        /* \"#utility.yul\":4222:4223   */\n      dup1\n        /* \"#utility.yul\":4215:4227   */\n      revert\n        /* \"#utility.yul\":4166:4229   */\n    tag_577:\n        /* \"#utility.yul\":4113:4235   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4241:4380   */\n    tag_504:\n        /* \"#utility.yul\":4287:4292   */\n      0x00\n        /* \"#utility.yul\":4325:4331   */\n      dup2\n        /* \"#utility.yul\":4312:4332   */\n      calldataload\n        /* \"#utility.yul\":4303:4332   */\n      swap1\n      pop\n        /* \"#utility.yul\":4341:4374   */\n      tag_579\n        /* \"#utility.yul\":4368:4373   */\n      dup2\n        /* \"#utility.yul\":4341:4374   */\n      tag_503\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":4241:4380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4386:4860   */\n    tag_73:\n        /* \"#utility.yul\":4454:4460   */\n      0x00\n        /* \"#utility.yul\":4462:4468   */\n      dup1\n        /* \"#utility.yul\":4511:4513   */\n      0x40\n        /* \"#utility.yul\":4499:4508   */\n      dup4\n        /* \"#utility.yul\":4490:4497   */\n      dup6\n        /* \"#utility.yul\":4486:4509   */\n      sub\n        /* \"#utility.yul\":4482:4514   */\n      slt\n        /* \"#utility.yul\":4479:4598   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":4517:4596   */\n      tag_582\n      tag_484\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":4479:4598   */\n    tag_581:\n        /* \"#utility.yul\":4637:4638   */\n      0x00\n        /* \"#utility.yul\":4662:4715   */\n      tag_583\n        /* \"#utility.yul\":4707:4714   */\n      dup6\n        /* \"#utility.yul\":4698:4704   */\n      dup3\n        /* \"#utility.yul\":4687:4696   */\n      dup7\n        /* \"#utility.yul\":4683:4705   */\n      add\n        /* \"#utility.yul\":4662:4715   */\n      tag_494\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":4652:4715   */\n      swap3\n      pop\n        /* \"#utility.yul\":4608:4725   */\n      pop\n        /* \"#utility.yul\":4764:4766   */\n      0x20\n        /* \"#utility.yul\":4790:4843   */\n      tag_584\n        /* \"#utility.yul\":4835:4842   */\n      dup6\n        /* \"#utility.yul\":4826:4832   */\n      dup3\n        /* \"#utility.yul\":4815:4824   */\n      dup7\n        /* \"#utility.yul\":4811:4833   */\n      add\n        /* \"#utility.yul\":4790:4843   */\n      tag_504\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":4780:4843   */\n      swap2\n      pop\n        /* \"#utility.yul\":4735:4853   */\n      pop\n        /* \"#utility.yul\":4386:4860   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4866:4984   */\n    tag_505:\n        /* \"#utility.yul\":4953:4977   */\n      tag_586\n        /* \"#utility.yul\":4971:4976   */\n      dup2\n        /* \"#utility.yul\":4953:4977   */\n      tag_502\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":4948:4951   */\n      dup3\n        /* \"#utility.yul\":4941:4978   */\n      mstore\n        /* \"#utility.yul\":4866:4984   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4990:5212   */\n    tag_82:\n        /* \"#utility.yul\":5083:5087   */\n      0x00\n        /* \"#utility.yul\":5121:5123   */\n      0x20\n        /* \"#utility.yul\":5110:5119   */\n      dup3\n        /* \"#utility.yul\":5106:5124   */\n      add\n        /* \"#utility.yul\":5098:5124   */\n      swap1\n      pop\n        /* \"#utility.yul\":5134:5205   */\n      tag_588\n        /* \"#utility.yul\":5202:5203   */\n      0x00\n        /* \"#utility.yul\":5191:5200   */\n      dup4\n        /* \"#utility.yul\":5187:5204   */\n      add\n        /* \"#utility.yul\":5178:5184   */\n      dup5\n        /* \"#utility.yul\":5134:5205   */\n      tag_505\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":4990:5212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5218:5837   */\n    tag_85:\n        /* \"#utility.yul\":5295:5301   */\n      0x00\n        /* \"#utility.yul\":5303:5309   */\n      dup1\n        /* \"#utility.yul\":5311:5317   */\n      0x00\n        /* \"#utility.yul\":5360:5362   */\n      0x60\n        /* \"#utility.yul\":5348:5357   */\n      dup5\n        /* \"#utility.yul\":5339:5346   */\n      dup7\n        /* \"#utility.yul\":5335:5358   */\n      sub\n        /* \"#utility.yul\":5331:5363   */\n      slt\n        /* \"#utility.yul\":5328:5447   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":5366:5445   */\n      tag_591\n      tag_484\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":5328:5447   */\n    tag_590:\n        /* \"#utility.yul\":5486:5487   */\n      0x00\n        /* \"#utility.yul\":5511:5564   */\n      tag_592\n        /* \"#utility.yul\":5556:5563   */\n      dup7\n        /* \"#utility.yul\":5547:5553   */\n      dup3\n        /* \"#utility.yul\":5536:5545   */\n      dup8\n        /* \"#utility.yul\":5532:5554   */\n      add\n        /* \"#utility.yul\":5511:5564   */\n      tag_494\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":5501:5564   */\n      swap4\n      pop\n        /* \"#utility.yul\":5457:5574   */\n      pop\n        /* \"#utility.yul\":5613:5615   */\n      0x20\n        /* \"#utility.yul\":5639:5692   */\n      tag_593\n        /* \"#utility.yul\":5684:5691   */\n      dup7\n        /* \"#utility.yul\":5675:5681   */\n      dup3\n        /* \"#utility.yul\":5664:5673   */\n      dup8\n        /* \"#utility.yul\":5660:5682   */\n      add\n        /* \"#utility.yul\":5639:5692   */\n      tag_494\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":5629:5692   */\n      swap3\n      pop\n        /* \"#utility.yul\":5584:5702   */\n      pop\n        /* \"#utility.yul\":5741:5743   */\n      0x40\n        /* \"#utility.yul\":5767:5820   */\n      tag_594\n        /* \"#utility.yul\":5812:5819   */\n      dup7\n        /* \"#utility.yul\":5803:5809   */\n      dup3\n        /* \"#utility.yul\":5792:5801   */\n      dup8\n        /* \"#utility.yul\":5788:5810   */\n      add\n        /* \"#utility.yul\":5767:5820   */\n      tag_504\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":5757:5820   */\n      swap2\n      pop\n        /* \"#utility.yul\":5712:5830   */\n      pop\n        /* \"#utility.yul\":5218:5837   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5843:5965   */\n    tag_506:\n        /* \"#utility.yul\":5916:5940   */\n      tag_596\n        /* \"#utility.yul\":5934:5939   */\n      dup2\n        /* \"#utility.yul\":5916:5940   */\n      tag_495\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":5909:5914   */\n      dup2\n        /* \"#utility.yul\":5906:5941   */\n      eq\n        /* \"#utility.yul\":5896:5959   */\n      tag_597\n      jumpi\n        /* \"#utility.yul\":5955:5956   */\n      0x00\n        /* \"#utility.yul\":5952:5953   */\n      dup1\n        /* \"#utility.yul\":5945:5957   */\n      revert\n        /* \"#utility.yul\":5896:5959   */\n    tag_597:\n        /* \"#utility.yul\":5843:5965   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5971:6110   */\n    tag_507:\n        /* \"#utility.yul\":6017:6022   */\n      0x00\n        /* \"#utility.yul\":6055:6061   */\n      dup2\n        /* \"#utility.yul\":6042:6062   */\n      calldataload\n        /* \"#utility.yul\":6033:6062   */\n      swap1\n      pop\n        /* \"#utility.yul\":6071:6104   */\n      tag_599\n        /* \"#utility.yul\":6098:6103   */\n      dup2\n        /* \"#utility.yul\":6071:6104   */\n      tag_506\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":5971:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6445   */\n    tag_93:\n        /* \"#utility.yul\":6175:6181   */\n      0x00\n        /* \"#utility.yul\":6224:6226   */\n      0x20\n        /* \"#utility.yul\":6212:6221   */\n      dup3\n        /* \"#utility.yul\":6203:6210   */\n      dup5\n        /* \"#utility.yul\":6199:6222   */\n      sub\n        /* \"#utility.yul\":6195:6227   */\n      slt\n        /* \"#utility.yul\":6192:6311   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":6230:6309   */\n      tag_602\n      tag_484\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":6192:6311   */\n    tag_601:\n        /* \"#utility.yul\":6350:6351   */\n      0x00\n        /* \"#utility.yul\":6375:6428   */\n      tag_603\n        /* \"#utility.yul\":6420:6427   */\n      dup5\n        /* \"#utility.yul\":6411:6417   */\n      dup3\n        /* \"#utility.yul\":6400:6409   */\n      dup6\n        /* \"#utility.yul\":6396:6418   */\n      add\n        /* \"#utility.yul\":6375:6428   */\n      tag_507\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":6365:6428   */\n      swap2\n      pop\n        /* \"#utility.yul\":6321:6438   */\n      pop\n        /* \"#utility.yul\":6116:6445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6925   */\n    tag_104:\n        /* \"#utility.yul\":6519:6525   */\n      0x00\n        /* \"#utility.yul\":6527:6533   */\n      dup1\n        /* \"#utility.yul\":6576:6578   */\n      0x40\n        /* \"#utility.yul\":6564:6573   */\n      dup4\n        /* \"#utility.yul\":6555:6562   */\n      dup6\n        /* \"#utility.yul\":6551:6574   */\n      sub\n        /* \"#utility.yul\":6547:6579   */\n      slt\n        /* \"#utility.yul\":6544:6663   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":6582:6661   */\n      tag_606\n      tag_484\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":6544:6663   */\n    tag_605:\n        /* \"#utility.yul\":6702:6703   */\n      0x00\n        /* \"#utility.yul\":6727:6780   */\n      tag_607\n        /* \"#utility.yul\":6772:6779   */\n      dup6\n        /* \"#utility.yul\":6763:6769   */\n      dup3\n        /* \"#utility.yul\":6752:6761   */\n      dup7\n        /* \"#utility.yul\":6748:6770   */\n      add\n        /* \"#utility.yul\":6727:6780   */\n      tag_507\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":6717:6780   */\n      swap3\n      pop\n        /* \"#utility.yul\":6673:6790   */\n      pop\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"#utility.yul\":6855:6908   */\n      tag_608\n        /* \"#utility.yul\":6900:6907   */\n      dup6\n        /* \"#utility.yul\":6891:6897   */\n      dup3\n        /* \"#utility.yul\":6880:6889   */\n      dup7\n        /* \"#utility.yul\":6876:6898   */\n      add\n        /* \"#utility.yul\":6855:6908   */\n      tag_494\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":6845:6908   */\n      swap2\n      pop\n        /* \"#utility.yul\":6800:6918   */\n      pop\n        /* \"#utility.yul\":6451:6925   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7017   */\n    tag_508:\n        /* \"#utility.yul\":6966:6973   */\n      0x00\n        /* \"#utility.yul\":7006:7010   */\n      0xff\n        /* \"#utility.yul\":6999:7004   */\n      dup3\n        /* \"#utility.yul\":6995:7011   */\n      and\n        /* \"#utility.yul\":6984:7011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7023:7135   */\n    tag_509:\n        /* \"#utility.yul\":7106:7128   */\n      tag_611\n        /* \"#utility.yul\":7122:7127   */\n      dup2\n        /* \"#utility.yul\":7106:7128   */\n      tag_508\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":7101:7104   */\n      dup3\n        /* \"#utility.yul\":7094:7129   */\n      mstore\n        /* \"#utility.yul\":7023:7135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7141:7355   */\n    tag_112:\n        /* \"#utility.yul\":7230:7234   */\n      0x00\n        /* \"#utility.yul\":7268:7270   */\n      0x20\n        /* \"#utility.yul\":7257:7266   */\n      dup3\n        /* \"#utility.yul\":7253:7271   */\n      add\n        /* \"#utility.yul\":7245:7271   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7348   */\n      tag_613\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7347   */\n      add\n        /* \"#utility.yul\":7321:7327   */\n      dup5\n        /* \"#utility.yul\":7281:7348   */\n      tag_509\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":7141:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7479   */\n    tag_510:\n        /* \"#utility.yul\":7448:7472   */\n      tag_615\n        /* \"#utility.yul\":7466:7471   */\n      dup2\n        /* \"#utility.yul\":7448:7472   */\n      tag_492\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":7443:7446   */\n      dup3\n        /* \"#utility.yul\":7436:7473   */\n      mstore\n        /* \"#utility.yul\":7361:7479   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7485:7707   */\n    tag_143:\n        /* \"#utility.yul\":7578:7582   */\n      0x00\n        /* \"#utility.yul\":7616:7618   */\n      0x20\n        /* \"#utility.yul\":7605:7614   */\n      dup3\n        /* \"#utility.yul\":7601:7619   */\n      add\n        /* \"#utility.yul\":7593:7619   */\n      swap1\n      pop\n        /* \"#utility.yul\":7629:7700   */\n      tag_617\n        /* \"#utility.yul\":7697:7698   */\n      0x00\n        /* \"#utility.yul\":7686:7695   */\n      dup4\n        /* \"#utility.yul\":7682:7699   */\n      add\n        /* \"#utility.yul\":7673:7679   */\n      dup5\n        /* \"#utility.yul\":7629:7700   */\n      tag_510\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":7485:7707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:8187   */\n    tag_184:\n        /* \"#utility.yul\":7781:7787   */\n      0x00\n        /* \"#utility.yul\":7789:7795   */\n      dup1\n        /* \"#utility.yul\":7838:7840   */\n      0x40\n        /* \"#utility.yul\":7826:7835   */\n      dup4\n        /* \"#utility.yul\":7817:7824   */\n      dup6\n        /* \"#utility.yul\":7813:7836   */\n      sub\n        /* \"#utility.yul\":7809:7841   */\n      slt\n        /* \"#utility.yul\":7806:7925   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":7844:7923   */\n      tag_620\n      tag_484\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":7806:7925   */\n    tag_619:\n        /* \"#utility.yul\":7964:7965   */\n      0x00\n        /* \"#utility.yul\":7989:8042   */\n      tag_621\n        /* \"#utility.yul\":8034:8041   */\n      dup6\n        /* \"#utility.yul\":8025:8031   */\n      dup3\n        /* \"#utility.yul\":8014:8023   */\n      dup7\n        /* \"#utility.yul\":8010:8032   */\n      add\n        /* \"#utility.yul\":7989:8042   */\n      tag_494\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":7979:8042   */\n      swap3\n      pop\n        /* \"#utility.yul\":7935:8052   */\n      pop\n        /* \"#utility.yul\":8091:8093   */\n      0x20\n        /* \"#utility.yul\":8117:8170   */\n      tag_622\n        /* \"#utility.yul\":8162:8169   */\n      dup6\n        /* \"#utility.yul\":8153:8159   */\n      dup3\n        /* \"#utility.yul\":8142:8151   */\n      dup7\n        /* \"#utility.yul\":8138:8160   */\n      add\n        /* \"#utility.yul\":8117:8170   */\n      tag_494\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":8107:8170   */\n      swap2\n      pop\n        /* \"#utility.yul\":8062:8180   */\n      pop\n        /* \"#utility.yul\":7713:8187   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8193:8373   */\n    tag_511:\n        /* \"#utility.yul\":8241:8318   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8238:8239   */\n      0x00\n        /* \"#utility.yul\":8231:8319   */\n      mstore\n        /* \"#utility.yul\":8338:8342   */\n      0x22\n        /* \"#utility.yul\":8335:8336   */\n      0x04\n        /* \"#utility.yul\":8328:8343   */\n      mstore\n        /* \"#utility.yul\":8362:8366   */\n      0x24\n        /* \"#utility.yul\":8359:8360   */\n      0x00\n        /* \"#utility.yul\":8352:8367   */\n      revert\n        /* \"#utility.yul\":8379:8699   */\n    tag_215:\n        /* \"#utility.yul\":8423:8429   */\n      0x00\n        /* \"#utility.yul\":8460:8461   */\n      0x02\n        /* \"#utility.yul\":8454:8458   */\n      dup3\n        /* \"#utility.yul\":8450:8462   */\n      div\n        /* \"#utility.yul\":8440:8462   */\n      swap1\n      pop\n        /* \"#utility.yul\":8507:8508   */\n      0x01\n        /* \"#utility.yul\":8501:8505   */\n      dup3\n        /* \"#utility.yul\":8497:8509   */\n      and\n        /* \"#utility.yul\":8528:8546   */\n      dup1\n        /* \"#utility.yul\":8518:8599   */\n      tag_625\n      jumpi\n        /* \"#utility.yul\":8584:8588   */\n      0x7f\n        /* \"#utility.yul\":8576:8582   */\n      dup3\n        /* \"#utility.yul\":8572:8589   */\n      and\n        /* \"#utility.yul\":8562:8589   */\n      swap2\n      pop\n        /* \"#utility.yul\":8518:8599   */\n    tag_625:\n        /* \"#utility.yul\":8646:8648   */\n      0x20\n        /* \"#utility.yul\":8638:8644   */\n      dup3\n        /* \"#utility.yul\":8635:8649   */\n      lt\n        /* \"#utility.yul\":8615:8633   */\n      dup2\n        /* \"#utility.yul\":8612:8650   */\n      sub\n        /* \"#utility.yul\":8609:8693   */\n      tag_626\n      jumpi\n        /* \"#utility.yul\":8665:8683   */\n      tag_627\n      tag_511\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":8609:8693   */\n    tag_626:\n        /* \"#utility.yul\":8430:8699   */\n      pop\n        /* \"#utility.yul\":8379:8699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8705:8885   */\n    tag_512:\n        /* \"#utility.yul\":8845:8877   */\n      0x4163636f756e7420697320616c726561647920626c61636b6c69737465640000\n        /* \"#utility.yul\":8841:8842   */\n      0x00\n        /* \"#utility.yul\":8833:8839   */\n      dup3\n        /* \"#utility.yul\":8829:8843   */\n      add\n        /* \"#utility.yul\":8822:8878   */\n      mstore\n        /* \"#utility.yul\":8705:8885   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8891:9257   */\n    tag_513:\n        /* \"#utility.yul\":9033:9036   */\n      0x00\n        /* \"#utility.yul\":9054:9121   */\n      tag_630\n        /* \"#utility.yul\":9118:9120   */\n      0x1e\n        /* \"#utility.yul\":9113:9116   */\n      dup4\n        /* \"#utility.yul\":9054:9121   */\n      tag_498\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":9047:9121   */\n      swap2\n      pop\n        /* \"#utility.yul\":9130:9223   */\n      tag_631\n        /* \"#utility.yul\":9219:9222   */\n      dup3\n        /* \"#utility.yul\":9130:9223   */\n      tag_512\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":9248:9250   */\n      0x20\n        /* \"#utility.yul\":9243:9246   */\n      dup3\n        /* \"#utility.yul\":9239:9251   */\n      add\n        /* \"#utility.yul\":9232:9251   */\n      swap1\n      pop\n        /* \"#utility.yul\":8891:9257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9263:9682   */\n    tag_274:\n        /* \"#utility.yul\":9429:9433   */\n      0x00\n        /* \"#utility.yul\":9467:9469   */\n      0x20\n        /* \"#utility.yul\":9456:9465   */\n      dup3\n        /* \"#utility.yul\":9452:9470   */\n      add\n        /* \"#utility.yul\":9444:9470   */\n      swap1\n      pop\n        /* \"#utility.yul\":9516:9525   */\n      dup2\n        /* \"#utility.yul\":9510:9514   */\n      dup2\n        /* \"#utility.yul\":9506:9526   */\n      sub\n        /* \"#utility.yul\":9502:9503   */\n      0x00\n        /* \"#utility.yul\":9491:9500   */\n      dup4\n        /* \"#utility.yul\":9487:9504   */\n      add\n        /* \"#utility.yul\":9480:9527   */\n      mstore\n        /* \"#utility.yul\":9544:9675   */\n      tag_633\n        /* \"#utility.yul\":9670:9674   */\n      dup2\n        /* \"#utility.yul\":9544:9675   */\n      tag_513\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":9536:9675   */\n      swap1\n      pop\n        /* \"#utility.yul\":9263:9682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9688:9864   */\n    tag_514:\n        /* \"#utility.yul\":9828:9856   */\n      0x4163636f756e74206973206e6f7420626c61636b6c6973746564000000000000\n        /* \"#utility.yul\":9824:9825   */\n      0x00\n        /* \"#utility.yul\":9816:9822   */\n      dup3\n        /* \"#utility.yul\":9812:9826   */\n      add\n        /* \"#utility.yul\":9805:9857   */\n      mstore\n        /* \"#utility.yul\":9688:9864   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9870:10236   */\n    tag_515:\n        /* \"#utility.yul\":10012:10015   */\n      0x00\n        /* \"#utility.yul\":10033:10100   */\n      tag_636\n        /* \"#utility.yul\":10097:10099   */\n      0x1a\n        /* \"#utility.yul\":10092:10095   */\n      dup4\n        /* \"#utility.yul\":10033:10100   */\n      tag_498\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":10026:10100   */\n      swap2\n      pop\n        /* \"#utility.yul\":10109:10202   */\n      tag_637\n        /* \"#utility.yul\":10198:10201   */\n      dup3\n        /* \"#utility.yul\":10109:10202   */\n      tag_514\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":10227:10229   */\n      0x20\n        /* \"#utility.yul\":10222:10225   */\n      dup3\n        /* \"#utility.yul\":10218:10230   */\n      add\n        /* \"#utility.yul\":10211:10230   */\n      swap1\n      pop\n        /* \"#utility.yul\":9870:10236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10242:10661   */\n    tag_287:\n        /* \"#utility.yul\":10408:10412   */\n      0x00\n        /* \"#utility.yul\":10446:10448   */\n      0x20\n        /* \"#utility.yul\":10435:10444   */\n      dup3\n        /* \"#utility.yul\":10431:10449   */\n      add\n        /* \"#utility.yul\":10423:10449   */\n      swap1\n      pop\n        /* \"#utility.yul\":10495:10504   */\n      dup2\n        /* \"#utility.yul\":10489:10493   */\n      dup2\n        /* \"#utility.yul\":10485:10505   */\n      sub\n        /* \"#utility.yul\":10481:10482   */\n      0x00\n        /* \"#utility.yul\":10470:10479   */\n      dup4\n        /* \"#utility.yul\":10466:10483   */\n      add\n        /* \"#utility.yul\":10459:10506   */\n      mstore\n        /* \"#utility.yul\":10523:10654   */\n      tag_639\n        /* \"#utility.yul\":10649:10653   */\n      dup2\n        /* \"#utility.yul\":10523:10654   */\n      tag_515\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":10515:10654   */\n      swap1\n      pop\n        /* \"#utility.yul\":10242:10661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10667:10838   */\n    tag_516:\n        /* \"#utility.yul\":10807:10830   */\n      0x4163636f756e74206973206e6f742066726f7a656e0000000000000000000000\n        /* \"#utility.yul\":10803:10804   */\n      0x00\n        /* \"#utility.yul\":10795:10801   */\n      dup3\n        /* \"#utility.yul\":10791:10805   */\n      add\n        /* \"#utility.yul\":10784:10831   */\n      mstore\n        /* \"#utility.yul\":10667:10838   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10844:11210   */\n    tag_517:\n        /* \"#utility.yul\":10986:10989   */\n      0x00\n        /* \"#utility.yul\":11007:11074   */\n      tag_642\n        /* \"#utility.yul\":11071:11073   */\n      0x15\n        /* \"#utility.yul\":11066:11069   */\n      dup4\n        /* \"#utility.yul\":11007:11074   */\n      tag_498\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":11000:11074   */\n      swap2\n      pop\n        /* \"#utility.yul\":11083:11176   */\n      tag_643\n        /* \"#utility.yul\":11172:11175   */\n      dup3\n        /* \"#utility.yul\":11083:11176   */\n      tag_516\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":11201:11203   */\n      0x20\n        /* \"#utility.yul\":11196:11199   */\n      dup3\n        /* \"#utility.yul\":11192:11204   */\n      add\n        /* \"#utility.yul\":11185:11204   */\n      swap1\n      pop\n        /* \"#utility.yul\":10844:11210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11216:11635   */\n    tag_302:\n        /* \"#utility.yul\":11382:11386   */\n      0x00\n        /* \"#utility.yul\":11420:11422   */\n      0x20\n        /* \"#utility.yul\":11409:11418   */\n      dup3\n        /* \"#utility.yul\":11405:11423   */\n      add\n        /* \"#utility.yul\":11397:11423   */\n      swap1\n      pop\n        /* \"#utility.yul\":11469:11478   */\n      dup2\n        /* \"#utility.yul\":11463:11467   */\n      dup2\n        /* \"#utility.yul\":11459:11479   */\n      sub\n        /* \"#utility.yul\":11455:11456   */\n      0x00\n        /* \"#utility.yul\":11444:11453   */\n      dup4\n        /* \"#utility.yul\":11440:11457   */\n      add\n        /* \"#utility.yul\":11433:11480   */\n      mstore\n        /* \"#utility.yul\":11497:11628   */\n      tag_645\n        /* \"#utility.yul\":11623:11627   */\n      dup2\n        /* \"#utility.yul\":11497:11628   */\n      tag_517\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":11489:11628   */\n      swap1\n      pop\n        /* \"#utility.yul\":11216:11635   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11641:11815   */\n    tag_518:\n        /* \"#utility.yul\":11781:11807   */\n      0x53656e646572206163636f756e742069732066726f7a656e0000000000000000\n        /* \"#utility.yul\":11777:11778   */\n      0x00\n        /* \"#utility.yul\":11769:11775   */\n      dup3\n        /* \"#utility.yul\":11765:11779   */\n      add\n        /* \"#utility.yul\":11758:11808   */\n      mstore\n        /* \"#utility.yul\":11641:11815   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11821:12187   */\n    tag_519:\n        /* \"#utility.yul\":11963:11966   */\n      0x00\n        /* \"#utility.yul\":11984:12051   */\n      tag_648\n        /* \"#utility.yul\":12048:12050   */\n      0x18\n        /* \"#utility.yul\":12043:12046   */\n      dup4\n        /* \"#utility.yul\":11984:12051   */\n      tag_498\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":11977:12051   */\n      swap2\n      pop\n        /* \"#utility.yul\":12060:12153   */\n      tag_649\n        /* \"#utility.yul\":12149:12152   */\n      dup3\n        /* \"#utility.yul\":12060:12153   */\n      tag_518\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":12178:12180   */\n      0x20\n        /* \"#utility.yul\":12173:12176   */\n      dup3\n        /* \"#utility.yul\":12169:12181   */\n      add\n        /* \"#utility.yul\":12162:12181   */\n      swap1\n      pop\n        /* \"#utility.yul\":11821:12187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12193:12612   */\n    tag_330:\n        /* \"#utility.yul\":12359:12363   */\n      0x00\n        /* \"#utility.yul\":12397:12399   */\n      0x20\n        /* \"#utility.yul\":12386:12395   */\n      dup3\n        /* \"#utility.yul\":12382:12400   */\n      add\n        /* \"#utility.yul\":12374:12400   */\n      swap1\n      pop\n        /* \"#utility.yul\":12446:12455   */\n      dup2\n        /* \"#utility.yul\":12440:12444   */\n      dup2\n        /* \"#utility.yul\":12436:12456   */\n      sub\n        /* \"#utility.yul\":12432:12433   */\n      0x00\n        /* \"#utility.yul\":12421:12430   */\n      dup4\n        /* \"#utility.yul\":12417:12434   */\n      add\n        /* \"#utility.yul\":12410:12457   */\n      mstore\n        /* \"#utility.yul\":12474:12605   */\n      tag_651\n        /* \"#utility.yul\":12600:12604   */\n      dup2\n        /* \"#utility.yul\":12474:12605   */\n      tag_519\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":12466:12605   */\n      swap1\n      pop\n        /* \"#utility.yul\":12193:12612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12618:12797   */\n    tag_520:\n        /* \"#utility.yul\":12758:12789   */\n      0x53656e646572206163636f756e7420697320626c61636b6c6973746564000000\n        /* \"#utility.yul\":12754:12755   */\n      0x00\n        /* \"#utility.yul\":12746:12752   */\n      dup3\n        /* \"#utility.yul\":12742:12756   */\n      add\n        /* \"#utility.yul\":12735:12790   */\n      mstore\n        /* \"#utility.yul\":12618:12797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12803:13169   */\n    tag_521:\n        /* \"#utility.yul\":12945:12948   */\n      0x00\n        /* \"#utility.yul\":12966:13033   */\n      tag_654\n        /* \"#utility.yul\":13030:13032   */\n      0x1d\n        /* \"#utility.yul\":13025:13028   */\n      dup4\n        /* \"#utility.yul\":12966:13033   */\n      tag_498\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":12959:13033   */\n      swap2\n      pop\n        /* \"#utility.yul\":13042:13135   */\n      tag_655\n        /* \"#utility.yul\":13131:13134   */\n      dup3\n        /* \"#utility.yul\":13042:13135   */\n      tag_520\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":13160:13162   */\n      0x20\n        /* \"#utility.yul\":13155:13158   */\n      dup3\n        /* \"#utility.yul\":13151:13163   */\n      add\n        /* \"#utility.yul\":13144:13163   */\n      swap1\n      pop\n        /* \"#utility.yul\":12803:13169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13175:13594   */\n    tag_334:\n        /* \"#utility.yul\":13341:13345   */\n      0x00\n        /* \"#utility.yul\":13379:13381   */\n      0x20\n        /* \"#utility.yul\":13368:13377   */\n      dup3\n        /* \"#utility.yul\":13364:13382   */\n      add\n        /* \"#utility.yul\":13356:13382   */\n      swap1\n      pop\n        /* \"#utility.yul\":13428:13437   */\n      dup2\n        /* \"#utility.yul\":13422:13426   */\n      dup2\n        /* \"#utility.yul\":13418:13438   */\n      sub\n        /* \"#utility.yul\":13414:13415   */\n      0x00\n        /* \"#utility.yul\":13403:13412   */\n      dup4\n        /* \"#utility.yul\":13399:13416   */\n      add\n        /* \"#utility.yul\":13392:13439   */\n      mstore\n        /* \"#utility.yul\":13456:13587   */\n      tag_657\n        /* \"#utility.yul\":13582:13586   */\n      dup2\n        /* \"#utility.yul\":13456:13587   */\n      tag_521\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":13448:13587   */\n      swap1\n      pop\n        /* \"#utility.yul\":13175:13594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13600:13782   */\n    tag_522:\n        /* \"#utility.yul\":13740:13774   */\n      0x526563697069656e74206163636f756e7420697320626c61636b6c6973746564\n        /* \"#utility.yul\":13736:13737   */\n      0x00\n        /* \"#utility.yul\":13728:13734   */\n      dup3\n        /* \"#utility.yul\":13724:13738   */\n      add\n        /* \"#utility.yul\":13717:13775   */\n      mstore\n        /* \"#utility.yul\":13600:13782   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13788:14154   */\n    tag_523:\n        /* \"#utility.yul\":13930:13933   */\n      0x00\n        /* \"#utility.yul\":13951:14018   */\n      tag_660\n        /* \"#utility.yul\":14015:14017   */\n      0x20\n        /* \"#utility.yul\":14010:14013   */\n      dup4\n        /* \"#utility.yul\":13951:14018   */\n      tag_498\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":13944:14018   */\n      swap2\n      pop\n        /* \"#utility.yul\":14027:14120   */\n      tag_661\n        /* \"#utility.yul\":14116:14119   */\n      dup3\n        /* \"#utility.yul\":14027:14120   */\n      tag_522\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":14145:14147   */\n      0x20\n        /* \"#utility.yul\":14140:14143   */\n      dup3\n        /* \"#utility.yul\":14136:14148   */\n      add\n        /* \"#utility.yul\":14129:14148   */\n      swap1\n      pop\n        /* \"#utility.yul\":13788:14154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14160:14579   */\n    tag_338:\n        /* \"#utility.yul\":14326:14330   */\n      0x00\n        /* \"#utility.yul\":14364:14366   */\n      0x20\n        /* \"#utility.yul\":14353:14362   */\n      dup3\n        /* \"#utility.yul\":14349:14367   */\n      add\n        /* \"#utility.yul\":14341:14367   */\n      swap1\n      pop\n        /* \"#utility.yul\":14413:14422   */\n      dup2\n        /* \"#utility.yul\":14407:14411   */\n      dup2\n        /* \"#utility.yul\":14403:14423   */\n      sub\n        /* \"#utility.yul\":14399:14400   */\n      0x00\n        /* \"#utility.yul\":14388:14397   */\n      dup4\n        /* \"#utility.yul\":14384:14401   */\n      add\n        /* \"#utility.yul\":14377:14424   */\n      mstore\n        /* \"#utility.yul\":14441:14572   */\n      tag_663\n        /* \"#utility.yul\":14567:14571   */\n      dup2\n        /* \"#utility.yul\":14441:14572   */\n      tag_523\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":14433:14572   */\n      swap1\n      pop\n        /* \"#utility.yul\":14160:14579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14585:14760   */\n    tag_524:\n        /* \"#utility.yul\":14725:14752   */\n      0x4163636f756e7420697320616c72656164792066726f7a656e00000000000000\n        /* \"#utility.yul\":14721:14722   */\n      0x00\n        /* \"#utility.yul\":14713:14719   */\n      dup3\n        /* \"#utility.yul\":14709:14723   */\n      add\n        /* \"#utility.yul\":14702:14753   */\n      mstore\n        /* \"#utility.yul\":14585:14760   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14766:15132   */\n    tag_525:\n        /* \"#utility.yul\":14908:14911   */\n      0x00\n        /* \"#utility.yul\":14929:14996   */\n      tag_666\n        /* \"#utility.yul\":14993:14995   */\n      0x19\n        /* \"#utility.yul\":14988:14991   */\n      dup4\n        /* \"#utility.yul\":14929:14996   */\n      tag_498\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":14922:14996   */\n      swap2\n      pop\n        /* \"#utility.yul\":15005:15098   */\n      tag_667\n        /* \"#utility.yul\":15094:15097   */\n      dup3\n        /* \"#utility.yul\":15005:15098   */\n      tag_524\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":15123:15125   */\n      0x20\n        /* \"#utility.yul\":15118:15121   */\n      dup3\n        /* \"#utility.yul\":15114:15126   */\n      add\n        /* \"#utility.yul\":15107:15126   */\n      swap1\n      pop\n        /* \"#utility.yul\":14766:15132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15138:15557   */\n    tag_363:\n        /* \"#utility.yul\":15304:15308   */\n      0x00\n        /* \"#utility.yul\":15342:15344   */\n      0x20\n        /* \"#utility.yul\":15331:15340   */\n      dup3\n        /* \"#utility.yul\":15327:15345   */\n      add\n        /* \"#utility.yul\":15319:15345   */\n      swap1\n      pop\n        /* \"#utility.yul\":15391:15400   */\n      dup2\n        /* \"#utility.yul\":15385:15389   */\n      dup2\n        /* \"#utility.yul\":15381:15401   */\n      sub\n        /* \"#utility.yul\":15377:15378   */\n      0x00\n        /* \"#utility.yul\":15366:15375   */\n      dup4\n        /* \"#utility.yul\":15362:15379   */\n      add\n        /* \"#utility.yul\":15355:15402   */\n      mstore\n        /* \"#utility.yul\":15419:15550   */\n      tag_669\n        /* \"#utility.yul\":15545:15549   */\n      dup2\n        /* \"#utility.yul\":15419:15550   */\n      tag_525\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":15411:15550   */\n      swap1\n      pop\n        /* \"#utility.yul\":15138:15557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15563:16005   */\n    tag_404:\n        /* \"#utility.yul\":15712:15716   */\n      0x00\n        /* \"#utility.yul\":15750:15752   */\n      0x60\n        /* \"#utility.yul\":15739:15748   */\n      dup3\n        /* \"#utility.yul\":15735:15753   */\n      add\n        /* \"#utility.yul\":15727:15753   */\n      swap1\n      pop\n        /* \"#utility.yul\":15763:15834   */\n      tag_671\n        /* \"#utility.yul\":15831:15832   */\n      0x00\n        /* \"#utility.yul\":15820:15829   */\n      dup4\n        /* \"#utility.yul\":15816:15833   */\n      add\n        /* \"#utility.yul\":15807:15813   */\n      dup7\n        /* \"#utility.yul\":15763:15834   */\n      tag_510\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":15844:15916   */\n      tag_672\n        /* \"#utility.yul\":15912:15914   */\n      0x20\n        /* \"#utility.yul\":15901:15910   */\n      dup4\n        /* \"#utility.yul\":15897:15915   */\n      add\n        /* \"#utility.yul\":15888:15894   */\n      dup6\n        /* \"#utility.yul\":15844:15916   */\n      tag_505\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":15926:15998   */\n      tag_673\n        /* \"#utility.yul\":15994:15996   */\n      0x40\n        /* \"#utility.yul\":15983:15992   */\n      dup4\n        /* \"#utility.yul\":15979:15997   */\n      add\n        /* \"#utility.yul\":15970:15976   */\n      dup5\n        /* \"#utility.yul\":15926:15998   */\n      tag_505\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":15563:16005   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16011:16343   */\n    tag_448:\n        /* \"#utility.yul\":16132:16136   */\n      0x00\n        /* \"#utility.yul\":16170:16172   */\n      0x40\n        /* \"#utility.yul\":16159:16168   */\n      dup3\n        /* \"#utility.yul\":16155:16173   */\n      add\n        /* \"#utility.yul\":16147:16173   */\n      swap1\n      pop\n        /* \"#utility.yul\":16183:16254   */\n      tag_675\n        /* \"#utility.yul\":16251:16252   */\n      0x00\n        /* \"#utility.yul\":16240:16249   */\n      dup4\n        /* \"#utility.yul\":16236:16253   */\n      add\n        /* \"#utility.yul\":16227:16233   */\n      dup6\n        /* \"#utility.yul\":16183:16254   */\n      tag_510\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":16264:16336   */\n      tag_676\n        /* \"#utility.yul\":16332:16334   */\n      0x20\n        /* \"#utility.yul\":16321:16330   */\n      dup4\n        /* \"#utility.yul\":16317:16335   */\n      add\n        /* \"#utility.yul\":16308:16314   */\n      dup5\n        /* \"#utility.yul\":16264:16336   */\n      tag_496\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":16011:16343   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16349:16529   */\n    tag_526:\n        /* \"#utility.yul\":16397:16474   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16394:16395   */\n      0x00\n        /* \"#utility.yul\":16387:16475   */\n      mstore\n        /* \"#utility.yul\":16494:16498   */\n      0x11\n        /* \"#utility.yul\":16491:16492   */\n      0x04\n        /* \"#utility.yul\":16484:16499   */\n      mstore\n        /* \"#utility.yul\":16518:16522   */\n      0x24\n        /* \"#utility.yul\":16515:16516   */\n      0x00\n        /* \"#utility.yul\":16508:16523   */\n      revert\n        /* \"#utility.yul\":16535:16726   */\n    tag_452:\n        /* \"#utility.yul\":16575:16578   */\n      0x00\n        /* \"#utility.yul\":16594:16614   */\n      tag_679\n        /* \"#utility.yul\":16612:16613   */\n      dup3\n        /* \"#utility.yul\":16594:16614   */\n      tag_502\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":16589:16614   */\n      swap2\n      pop\n        /* \"#utility.yul\":16628:16648   */\n      tag_680\n        /* \"#utility.yul\":16646:16647   */\n      dup4\n        /* \"#utility.yul\":16628:16648   */\n      tag_502\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":16623:16648   */\n      swap3\n      pop\n        /* \"#utility.yul\":16671:16672   */\n      dup3\n        /* \"#utility.yul\":16668:16669   */\n      dup3\n        /* \"#utility.yul\":16664:16673   */\n      add\n        /* \"#utility.yul\":16657:16673   */\n      swap1\n      pop\n        /* \"#utility.yul\":16692:16695   */\n      dup1\n        /* \"#utility.yul\":16689:16690   */\n      dup3\n        /* \"#utility.yul\":16686:16696   */\n      gt\n        /* \"#utility.yul\":16683:16719   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":16699:16717   */\n      tag_682\n      tag_526\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":16683:16719   */\n    tag_681:\n        /* \"#utility.yul\":16535:16726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16732:16926   */\n    tag_468:\n        /* \"#utility.yul\":16772:16776   */\n      0x00\n        /* \"#utility.yul\":16792:16812   */\n      tag_684\n        /* \"#utility.yul\":16810:16811   */\n      dup3\n        /* \"#utility.yul\":16792:16812   */\n      tag_502\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":16787:16812   */\n      swap2\n      pop\n        /* \"#utility.yul\":16826:16846   */\n      tag_685\n        /* \"#utility.yul\":16844:16845   */\n      dup4\n        /* \"#utility.yul\":16826:16846   */\n      tag_502\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":16821:16846   */\n      swap3\n      pop\n        /* \"#utility.yul\":16870:16871   */\n      dup3\n        /* \"#utility.yul\":16867:16868   */\n      dup3\n        /* \"#utility.yul\":16863:16872   */\n      sub\n        /* \"#utility.yul\":16855:16872   */\n      swap1\n      pop\n        /* \"#utility.yul\":16894:16895   */\n      dup2\n        /* \"#utility.yul\":16888:16892   */\n      dup2\n        /* \"#utility.yul\":16885:16896   */\n      gt\n        /* \"#utility.yul\":16882:16919   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":16899:16917   */\n      tag_687\n      tag_526\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":16882:16919   */\n    tag_686:\n        /* \"#utility.yul\":16732:16926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16932:17112   */\n    tag_473:\n        /* \"#utility.yul\":16980:17057   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16977:16978   */\n      0x00\n        /* \"#utility.yul\":16970:17058   */\n      mstore\n        /* \"#utility.yul\":17077:17081   */\n      0x32\n        /* \"#utility.yul\":17074:17075   */\n      0x04\n        /* \"#utility.yul\":17067:17082   */\n      mstore\n        /* \"#utility.yul\":17101:17105   */\n      0x24\n        /* \"#utility.yul\":17098:17099   */\n      0x00\n        /* \"#utility.yul\":17091:17106   */\n      revert\n        /* \"#utility.yul\":17118:17298   */\n    tag_480:\n        /* \"#utility.yul\":17166:17243   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17163:17164   */\n      0x00\n        /* \"#utility.yul\":17156:17244   */\n      mstore\n        /* \"#utility.yul\":17263:17267   */\n      0x31\n        /* \"#utility.yul\":17260:17261   */\n      0x04\n        /* \"#utility.yul\":17253:17268   */\n      mstore\n        /* \"#utility.yul\":17287:17291   */\n      0x24\n        /* \"#utility.yul\":17284:17285   */\n      0x00\n        /* \"#utility.yul\":17277:17292   */\n      revert\n\n    auxdata: 0xa2646970667358221220f31b5309d1693d5e37ce7e37b580bbcb57512310b3baf8fac321aa345ecd65af64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2063": {
									"entryPoint": null,
									"id": 2063,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_429": {
									"entryPoint": null,
									"id": 429,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_463": {
									"entryPoint": 1875,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 2181,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2149,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 527,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1018": {
									"entryPoint": 773,
									"id": 1018,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1294": {
									"entryPoint": 1331,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_525": {
									"entryPoint": 332,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_985": {
									"entryPoint": 1338,
									"id": 985,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addBlacklistManager_2374": {
									"entryPoint": 1101,
									"id": 2374,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addBurner_2322": {
									"entryPoint": 971,
									"id": 2322,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addFreezer_2348": {
									"entryPoint": 1036,
									"id": 2348,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addMinter_2296": {
									"entryPoint": 906,
									"id": 2296,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRecoverer_2400": {
									"entryPoint": 1166,
									"id": 2400,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2120,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2028,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1231,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_446": {
									"entryPoint": 2080,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 2652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3710,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3167,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 3109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2936,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 3105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11214:12",
										"nodeType": "YulBlock",
										"src": "0:11214:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "423:28:12",
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:12",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:12:12",
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nativeSrc": "433:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nativeSrc": "546:28:12",
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:12",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:12",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nativeSrc": "556:12:12",
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nativeSrc": "556:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nativeSrc": "628:54:12",
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nativeSrc": "638:38:12",
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:12",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nativeSrc": "652:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:12",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nativeSrc": "668:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nativeSrc": "648:28:12",
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:12",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:12",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nativeSrc": "716:152:12",
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:12",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:12",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nativeSrc": "726:88:12",
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nativeSrc": "726:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:12",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:12",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nativeSrc": "823:15:12",
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nativeSrc": "823:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:12",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:12",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nativeSrc": "847:15:12",
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nativeSrc": "847:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nativeSrc": "917:238:12",
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nativeSrc": "927:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nativeSrc": "957:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nativeSrc": "945:40:12",
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:12",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:12",
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nativeSrc": "1098:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nativeSrc": "1098:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:12",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nativeSrc": "1036:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nativeSrc": "1072:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nativeSrc": "1033:62:12",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nativeSrc": "1030:88:12",
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nativeSrc": "1127:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nativeSrc": "1127:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:12",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:12",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nativeSrc": "1202:88:12",
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nativeSrc": "1212:30:12",
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nativeSrc": "1222:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nativeSrc": "1251:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nativeSrc": "1251:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:12",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:12",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nativeSrc": "1363:241:12",
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:12",
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nativeSrc": "1470:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nativeSrc": "1470:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nativeSrc": "1437:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nativeSrc": "1434:56:12",
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nativeSrc": "1500:37:12",
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nativeSrc": "1508:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nativeSrc": "1574:23:12",
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nativeSrc": "1582:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:12",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:12",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nativeSrc": "1672:77:12",
													"nodeType": "YulBlock",
													"src": "1672:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:12"
																},
																"nativeSrc": "1683:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:12"
															},
															"nativeSrc": "1683:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:12"
																		},
																		"nativeSrc": "1722:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:12"
																},
																"nativeSrc": "1715:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:12"
															},
															"nativeSrc": "1715:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:12",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:12",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:12",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:139:12"
											},
											{
												"body": {
													"nativeSrc": "1850:339:12",
													"nodeType": "YulBlock",
													"src": "1850:339:12",
													"statements": [
														{
															"nativeSrc": "1860:75:12",
															"nodeType": "YulAssignment",
															"src": "1860:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:12"
																		},
																		"nativeSrc": "1885:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:12"
																},
																"nativeSrc": "1869:66:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:12"
																},
																"nativeSrc": "1944:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:12"
															},
															"nativeSrc": "1944:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:12"
														},
														{
															"nativeSrc": "1974:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:12"
																},
																"nativeSrc": "1985:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:12",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:12",
																"nodeType": "YulBlock",
																"src": "2039:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:12"
																			},
																			"nativeSrc": "2041:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:12"
																		},
																		"nativeSrc": "2041:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:12"
																		},
																		"nativeSrc": "2016:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:12"
																},
																"nativeSrc": "2013:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:12"
															},
															"nativeSrc": "2010:112:12",
															"nodeType": "YulIf",
															"src": "2010:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:12"
																},
																"nativeSrc": "2131:52:12",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:12"
															},
															"nativeSrc": "2131:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:12",
														"nodeType": "YulTypedName",
														"src": "1823:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:12",
														"nodeType": "YulTypedName",
														"src": "1828:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:12",
														"nodeType": "YulTypedName",
														"src": "1836:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:12",
														"nodeType": "YulTypedName",
														"src": "1844:5:12",
														"type": ""
													}
												],
												"src": "1755:434:12"
											},
											{
												"body": {
													"nativeSrc": "2282:282:12",
													"nodeType": "YulBlock",
													"src": "2282:282:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:12",
																"nodeType": "YulBlock",
																"src": "2331:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:12"
																			},
																			"nativeSrc": "2333:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:12"
																		},
																		"nativeSrc": "2333:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:12"
																				},
																				"nativeSrc": "2306:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:12"
																		},
																		"nativeSrc": "2302:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:12"
																},
																"nativeSrc": "2295:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:12"
															},
															"nativeSrc": "2292:122:12",
															"nodeType": "YulIf",
															"src": "2292:122:12"
														},
														{
															"nativeSrc": "2423:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:12"
																},
																"nativeSrc": "2437:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:12",
															"nodeType": "YulAssignment",
															"src": "2459:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:12"
																		},
																		"nativeSrc": "2527:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:12"
																},
																"nativeSrc": "2468:90:12",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:12",
														"nodeType": "YulTypedName",
														"src": "2260:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:12",
														"nodeType": "YulTypedName",
														"src": "2268:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:12",
														"nodeType": "YulTypedName",
														"src": "2276:5:12",
														"type": ""
													}
												],
												"src": "2209:355:12"
											},
											{
												"body": {
													"nativeSrc": "2615:32:12",
													"nodeType": "YulBlock",
													"src": "2615:32:12",
													"statements": [
														{
															"nativeSrc": "2625:16:12",
															"nodeType": "YulAssignment",
															"src": "2625:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:12",
																"nodeType": "YulIdentifier",
																"src": "2636:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:12",
														"nodeType": "YulTypedName",
														"src": "2597:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:12",
														"nodeType": "YulTypedName",
														"src": "2607:7:12",
														"type": ""
													}
												],
												"src": "2570:77:12"
											},
											{
												"body": {
													"nativeSrc": "2696:79:12",
													"nodeType": "YulBlock",
													"src": "2696:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:12",
																"nodeType": "YulBlock",
																"src": "2753:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:12"
																			},
																			"nativeSrc": "2755:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:12"
																		},
																		"nativeSrc": "2755:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:12"
																				},
																				"nativeSrc": "2726:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:12"
																		},
																		"nativeSrc": "2716:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:12"
																},
																"nativeSrc": "2709:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:12"
															},
															"nativeSrc": "2706:63:12",
															"nodeType": "YulIf",
															"src": "2706:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:12",
														"nodeType": "YulTypedName",
														"src": "2689:5:12",
														"type": ""
													}
												],
												"src": "2653:122:12"
											},
											{
												"body": {
													"nativeSrc": "2844:80:12",
													"nodeType": "YulBlock",
													"src": "2844:80:12",
													"statements": [
														{
															"nativeSrc": "2854:22:12",
															"nodeType": "YulAssignment",
															"src": "2854:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:12"
																},
																"nativeSrc": "2863:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:12"
																},
																"nativeSrc": "2885:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:12"
															},
															"nativeSrc": "2885:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:12",
														"nodeType": "YulTypedName",
														"src": "2822:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:12",
														"nodeType": "YulTypedName",
														"src": "2830:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:12",
														"nodeType": "YulTypedName",
														"src": "2838:5:12",
														"type": ""
													}
												],
												"src": "2781:143:12"
											},
											{
												"body": {
													"nativeSrc": "3061:878:12",
													"nodeType": "YulBlock",
													"src": "3061:878:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3107:83:12",
																"nodeType": "YulBlock",
																"src": "3107:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3109:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3109:77:12"
																			},
																			"nativeSrc": "3109:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3109:79:12"
																		},
																		"nativeSrc": "3109:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3109:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3082:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3082:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3091:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3078:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:12"
																		},
																		"nativeSrc": "3078:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3103:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3074:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:12"
																},
																"nativeSrc": "3074:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3074:32:12"
															},
															"nativeSrc": "3071:119:12",
															"nodeType": "YulIf",
															"src": "3071:119:12"
														},
														{
															"nativeSrc": "3200:291:12",
															"nodeType": "YulBlock",
															"src": "3200:291:12",
															"statements": [
																{
																	"nativeSrc": "3215:38:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3215:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3239:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3239:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3250:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3250:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3235:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3235:3:12"
																				},
																				"nativeSrc": "3235:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3235:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3229:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3229:5:12"
																		},
																		"nativeSrc": "3229:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3219:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3219:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3300:83:12",
																		"nodeType": "YulBlock",
																		"src": "3300:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3302:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3302:77:12"
																					},
																					"nativeSrc": "3302:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3302:79:12"
																				},
																				"nativeSrc": "3302:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3302:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3272:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3272:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3280:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3280:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3269:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3269:2:12"
																		},
																		"nativeSrc": "3269:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:30:12"
																	},
																	"nativeSrc": "3266:117:12",
																	"nodeType": "YulIf",
																	"src": "3266:117:12"
																},
																{
																	"nativeSrc": "3397:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3397:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3453:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3453:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3464:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3464:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3449:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3449:3:12"
																				},
																				"nativeSrc": "3449:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3449:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3473:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3473:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3407:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3407:41:12"
																		},
																		"nativeSrc": "3407:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3407:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3397:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3397:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3501:292:12",
															"nodeType": "YulBlock",
															"src": "3501:292:12",
															"statements": [
																{
																	"nativeSrc": "3516:39:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3516:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3540:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3551:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3551:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3536:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:12"
																				},
																				"nativeSrc": "3536:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3536:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3530:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3530:5:12"
																		},
																		"nativeSrc": "3530:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3530:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3520:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3520:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3602:83:12",
																		"nodeType": "YulBlock",
																		"src": "3602:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3604:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3604:77:12"
																					},
																					"nativeSrc": "3604:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3604:79:12"
																				},
																				"nativeSrc": "3604:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3604:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3574:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3574:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3582:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3582:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3571:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3571:2:12"
																		},
																		"nativeSrc": "3571:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3571:30:12"
																	},
																	"nativeSrc": "3568:117:12",
																	"nodeType": "YulIf",
																	"src": "3568:117:12"
																},
																{
																	"nativeSrc": "3699:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3699:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3755:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3755:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3766:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3766:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3751:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3751:3:12"
																				},
																				"nativeSrc": "3751:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3751:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3775:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3775:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3709:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3709:41:12"
																		},
																		"nativeSrc": "3709:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3709:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3699:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3699:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3803:129:12",
															"nodeType": "YulBlock",
															"src": "3803:129:12",
															"statements": [
																{
																	"nativeSrc": "3818:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3818:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3832:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3822:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3822:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3848:74:12",
																	"nodeType": "YulAssignment",
																	"src": "3848:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3894:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3894:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3905:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3905:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3890:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3890:3:12"
																				},
																				"nativeSrc": "3890:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3890:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3914:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3914:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3858:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "3858:31:12"
																		},
																		"nativeSrc": "3858:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3858:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3848:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3848:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "2930:1009:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3015:9:12",
														"nodeType": "YulTypedName",
														"src": "3015:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3026:7:12",
														"nodeType": "YulTypedName",
														"src": "3026:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3038:6:12",
														"nodeType": "YulTypedName",
														"src": "3038:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3046:6:12",
														"nodeType": "YulTypedName",
														"src": "3046:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3054:6:12",
														"nodeType": "YulTypedName",
														"src": "3054:6:12",
														"type": ""
													}
												],
												"src": "2930:1009:12"
											},
											{
												"body": {
													"nativeSrc": "4004:40:12",
													"nodeType": "YulBlock",
													"src": "4004:40:12",
													"statements": [
														{
															"nativeSrc": "4015:22:12",
															"nodeType": "YulAssignment",
															"src": "4015:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4031:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4031:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4025:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4025:5:12"
																},
																"nativeSrc": "4025:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4025:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4015:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3945:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3987:5:12",
														"nodeType": "YulTypedName",
														"src": "3987:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3997:6:12",
														"nodeType": "YulTypedName",
														"src": "3997:6:12",
														"type": ""
													}
												],
												"src": "3945:99:12"
											},
											{
												"body": {
													"nativeSrc": "4078:152:12",
													"nodeType": "YulBlock",
													"src": "4078:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4095:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4095:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4098:77:12",
																		"nodeType": "YulLiteral",
																		"src": "4098:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4088:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:12"
																},
																"nativeSrc": "4088:88:12",
																"nodeType": "YulFunctionCall",
																"src": "4088:88:12"
															},
															"nativeSrc": "4088:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "4088:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4192:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4192:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4195:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4195:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4185:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:12"
																},
																"nativeSrc": "4185:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4185:15:12"
															},
															"nativeSrc": "4185:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4185:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4216:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4216:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4219:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4219:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4209:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4209:6:12"
																},
																"nativeSrc": "4209:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4209:15:12"
															},
															"nativeSrc": "4209:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4209:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4050:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4050:180:12"
											},
											{
												"body": {
													"nativeSrc": "4287:269:12",
													"nodeType": "YulBlock",
													"src": "4287:269:12",
													"statements": [
														{
															"nativeSrc": "4297:22:12",
															"nodeType": "YulAssignment",
															"src": "4297:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4311:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4311:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4317:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4307:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4307:3:12"
																},
																"nativeSrc": "4307:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4307:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4297:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4297:6:12"
																}
															]
														},
														{
															"nativeSrc": "4328:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4328:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4358:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4358:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4364:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4364:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4354:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4354:3:12"
																},
																"nativeSrc": "4354:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4354:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4332:18:12",
																	"nodeType": "YulTypedName",
																	"src": "4332:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4405:51:12",
																"nodeType": "YulBlock",
																"src": "4405:51:12",
																"statements": [
																	{
																		"nativeSrc": "4419:27:12",
																		"nodeType": "YulAssignment",
																		"src": "4419:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4433:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4441:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4441:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4429:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4429:3:12"
																			},
																			"nativeSrc": "4429:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4429:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4419:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4419:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4385:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4385:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4378:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4378:6:12"
																},
																"nativeSrc": "4378:26:12",
																"nodeType": "YulFunctionCall",
																"src": "4378:26:12"
															},
															"nativeSrc": "4375:81:12",
															"nodeType": "YulIf",
															"src": "4375:81:12"
														},
														{
															"body": {
																"nativeSrc": "4508:42:12",
																"nodeType": "YulBlock",
																"src": "4508:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4522:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4522:16:12"
																			},
																			"nativeSrc": "4522:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4522:18:12"
																		},
																		"nativeSrc": "4522:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4522:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4472:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4472:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4495:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4495:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4503:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4503:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4492:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4492:2:12"
																		},
																		"nativeSrc": "4492:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4492:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4469:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4469:2:12"
																},
																"nativeSrc": "4469:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4469:38:12"
															},
															"nativeSrc": "4466:84:12",
															"nodeType": "YulIf",
															"src": "4466:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4236:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4271:4:12",
														"nodeType": "YulTypedName",
														"src": "4271:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4280:6:12",
														"nodeType": "YulTypedName",
														"src": "4280:6:12",
														"type": ""
													}
												],
												"src": "4236:320:12"
											},
											{
												"body": {
													"nativeSrc": "4616:87:12",
													"nodeType": "YulBlock",
													"src": "4616:87:12",
													"statements": [
														{
															"nativeSrc": "4626:11:12",
															"nodeType": "YulAssignment",
															"src": "4626:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "4634:3:12",
																"nodeType": "YulIdentifier",
																"src": "4634:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4626:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4626:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4654:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4654:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4657:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4657:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4647:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:12"
																},
																"nativeSrc": "4647:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4647:14:12"
															},
															"nativeSrc": "4647:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "4647:14:12"
														},
														{
															"nativeSrc": "4670:26:12",
															"nodeType": "YulAssignment",
															"src": "4670:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4688:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4688:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4691:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4691:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4678:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4678:9:12"
																},
																"nativeSrc": "4678:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4678:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4670:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4670:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4562:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4603:3:12",
														"nodeType": "YulTypedName",
														"src": "4603:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4611:4:12",
														"nodeType": "YulTypedName",
														"src": "4611:4:12",
														"type": ""
													}
												],
												"src": "4562:141:12"
											},
											{
												"body": {
													"nativeSrc": "4753:49:12",
													"nodeType": "YulBlock",
													"src": "4753:49:12",
													"statements": [
														{
															"nativeSrc": "4763:33:12",
															"nodeType": "YulAssignment",
															"src": "4763:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4781:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4781:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4788:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4788:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4777:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4777:3:12"
																		},
																		"nativeSrc": "4777:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4777:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4793:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4773:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:12"
																},
																"nativeSrc": "4773:23:12",
																"nodeType": "YulFunctionCall",
																"src": "4773:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4763:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4709:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4736:5:12",
														"nodeType": "YulTypedName",
														"src": "4736:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4746:6:12",
														"nodeType": "YulTypedName",
														"src": "4746:6:12",
														"type": ""
													}
												],
												"src": "4709:93:12"
											},
											{
												"body": {
													"nativeSrc": "4861:54:12",
													"nodeType": "YulBlock",
													"src": "4861:54:12",
													"statements": [
														{
															"nativeSrc": "4871:37:12",
															"nodeType": "YulAssignment",
															"src": "4871:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4896:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4896:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4902:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4902:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4892:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4892:3:12"
																},
																"nativeSrc": "4892:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4892:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4871:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4871:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4808:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4836:4:12",
														"nodeType": "YulTypedName",
														"src": "4836:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4842:5:12",
														"nodeType": "YulTypedName",
														"src": "4842:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4852:8:12",
														"nodeType": "YulTypedName",
														"src": "4852:8:12",
														"type": ""
													}
												],
												"src": "4808:107:12"
											},
											{
												"body": {
													"nativeSrc": "4997:317:12",
													"nodeType": "YulBlock",
													"src": "4997:317:12",
													"statements": [
														{
															"nativeSrc": "5007:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5007:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5028:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5028:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5040:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5040:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5024:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:12"
																},
																"nativeSrc": "5024:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5024:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5011:9:12",
																	"nodeType": "YulTypedName",
																	"src": "5011:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5051:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5051:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5082:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5082:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5093:66:12",
																		"nodeType": "YulLiteral",
																		"src": "5093:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5063:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5063:18:12"
																},
																"nativeSrc": "5063:97:12",
																"nodeType": "YulFunctionCall",
																"src": "5063:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5055:4:12",
																	"nodeType": "YulTypedName",
																	"src": "5055:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5169:51:12",
															"nodeType": "YulAssignment",
															"src": "5169:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5200:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5211:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "5211:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5181:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5181:18:12"
																},
																"nativeSrc": "5181:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5181:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5169:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "5169:8:12"
																}
															]
														},
														{
															"nativeSrc": "5229:30:12",
															"nodeType": "YulAssignment",
															"src": "5229:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5242:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5242:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5253:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5253:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5249:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5249:3:12"
																		},
																		"nativeSrc": "5249:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5249:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5238:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5238:3:12"
																},
																"nativeSrc": "5238:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5238:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5229:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5229:5:12"
																}
															]
														},
														{
															"nativeSrc": "5268:40:12",
															"nodeType": "YulAssignment",
															"src": "5268:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5281:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5281:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5292:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "5292:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5302:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5302:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5288:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:12"
																		},
																		"nativeSrc": "5288:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5278:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5278:2:12"
																},
																"nativeSrc": "5278:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5278:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5268:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4921:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4958:5:12",
														"nodeType": "YulTypedName",
														"src": "4958:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4965:10:12",
														"nodeType": "YulTypedName",
														"src": "4965:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4977:8:12",
														"nodeType": "YulTypedName",
														"src": "4977:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4990:6:12",
														"nodeType": "YulTypedName",
														"src": "4990:6:12",
														"type": ""
													}
												],
												"src": "4921:393:12"
											},
											{
												"body": {
													"nativeSrc": "5352:28:12",
													"nodeType": "YulBlock",
													"src": "5352:28:12",
													"statements": [
														{
															"nativeSrc": "5362:12:12",
															"nodeType": "YulAssignment",
															"src": "5362:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5369:5:12",
																"nodeType": "YulIdentifier",
																"src": "5369:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5362:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5320:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5338:5:12",
														"nodeType": "YulTypedName",
														"src": "5338:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5348:3:12",
														"nodeType": "YulTypedName",
														"src": "5348:3:12",
														"type": ""
													}
												],
												"src": "5320:60:12"
											},
											{
												"body": {
													"nativeSrc": "5446:82:12",
													"nodeType": "YulBlock",
													"src": "5446:82:12",
													"statements": [
														{
															"nativeSrc": "5456:66:12",
															"nodeType": "YulAssignment",
															"src": "5456:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5514:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5514:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5496:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5496:17:12"
																				},
																				"nativeSrc": "5496:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5496:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5487:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "5487:8:12"
																		},
																		"nativeSrc": "5487:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5487:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5469:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5469:17:12"
																},
																"nativeSrc": "5469:53:12",
																"nodeType": "YulFunctionCall",
																"src": "5469:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5456:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5456:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5386:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5426:5:12",
														"nodeType": "YulTypedName",
														"src": "5426:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5436:9:12",
														"nodeType": "YulTypedName",
														"src": "5436:9:12",
														"type": ""
													}
												],
												"src": "5386:142:12"
											},
											{
												"body": {
													"nativeSrc": "5581:28:12",
													"nodeType": "YulBlock",
													"src": "5581:28:12",
													"statements": [
														{
															"nativeSrc": "5591:12:12",
															"nodeType": "YulAssignment",
															"src": "5591:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5598:5:12",
																"nodeType": "YulIdentifier",
																"src": "5598:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5591:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5534:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5567:5:12",
														"nodeType": "YulTypedName",
														"src": "5567:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5577:3:12",
														"nodeType": "YulTypedName",
														"src": "5577:3:12",
														"type": ""
													}
												],
												"src": "5534:75:12"
											},
											{
												"body": {
													"nativeSrc": "5691:193:12",
													"nodeType": "YulBlock",
													"src": "5691:193:12",
													"statements": [
														{
															"nativeSrc": "5701:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5701:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5756:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "5756:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5725:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5725:30:12"
																},
																"nativeSrc": "5725:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5725:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5705:16:12",
																	"nodeType": "YulTypedName",
																	"src": "5705:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5780:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5780:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5820:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "5820:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5814:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5814:5:12"
																				},
																				"nativeSrc": "5814:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5814:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5827:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5827:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5859:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "5859:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5835:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "5835:23:12"
																				},
																				"nativeSrc": "5835:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5835:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5786:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "5786:27:12"
																		},
																		"nativeSrc": "5786:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5786:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5773:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:12"
																},
																"nativeSrc": "5773:105:12",
																"nodeType": "YulFunctionCall",
																"src": "5773:105:12"
															},
															"nativeSrc": "5773:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "5773:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5615:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5668:4:12",
														"nodeType": "YulTypedName",
														"src": "5668:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5674:6:12",
														"nodeType": "YulTypedName",
														"src": "5674:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5682:7:12",
														"nodeType": "YulTypedName",
														"src": "5682:7:12",
														"type": ""
													}
												],
												"src": "5615:269:12"
											},
											{
												"body": {
													"nativeSrc": "5939:24:12",
													"nodeType": "YulBlock",
													"src": "5939:24:12",
													"statements": [
														{
															"nativeSrc": "5949:8:12",
															"nodeType": "YulAssignment",
															"src": "5949:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5956:1:12",
																"nodeType": "YulLiteral",
																"src": "5956:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5949:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5890:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5935:3:12",
														"nodeType": "YulTypedName",
														"src": "5935:3:12",
														"type": ""
													}
												],
												"src": "5890:73:12"
											},
											{
												"body": {
													"nativeSrc": "6022:136:12",
													"nodeType": "YulBlock",
													"src": "6022:136:12",
													"statements": [
														{
															"nativeSrc": "6032:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6032:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6046:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6046:30:12"
																},
																"nativeSrc": "6046:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6046:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6036:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6036:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6131:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6131:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6137:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6137:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6145:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6145:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6087:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6087:43:12"
																},
																"nativeSrc": "6087:65:12",
																"nodeType": "YulFunctionCall",
																"src": "6087:65:12"
															},
															"nativeSrc": "6087:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "6087:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5969:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6008:4:12",
														"nodeType": "YulTypedName",
														"src": "6008:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6014:6:12",
														"nodeType": "YulTypedName",
														"src": "6014:6:12",
														"type": ""
													}
												],
												"src": "5969:189:12"
											},
											{
												"body": {
													"nativeSrc": "6214:136:12",
													"nodeType": "YulBlock",
													"src": "6214:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6281:63:12",
																"nodeType": "YulBlock",
																"src": "6281:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6325:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6325:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6332:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6332:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6295:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "6295:29:12"
																			},
																			"nativeSrc": "6295:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6295:39:12"
																		},
																		"nativeSrc": "6295:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6295:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6234:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6234:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6241:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6231:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6231:2:12"
																},
																"nativeSrc": "6231:14:12",
																"nodeType": "YulFunctionCall",
																"src": "6231:14:12"
															},
															"nativeSrc": "6224:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6246:26:12",
																"nodeType": "YulBlock",
																"src": "6246:26:12",
																"statements": [
																	{
																		"nativeSrc": "6248:22:12",
																		"nodeType": "YulAssignment",
																		"src": "6248:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6261:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6261:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6268:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6268:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6257:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6257:3:12"
																			},
																			"nativeSrc": "6257:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6257:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6248:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6248:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6228:2:12",
																"nodeType": "YulBlock",
																"src": "6228:2:12",
																"statements": []
															},
															"src": "6224:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6164:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6202:5:12",
														"nodeType": "YulTypedName",
														"src": "6202:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6209:3:12",
														"nodeType": "YulTypedName",
														"src": "6209:3:12",
														"type": ""
													}
												],
												"src": "6164:186:12"
											},
											{
												"body": {
													"nativeSrc": "6435:464:12",
													"nodeType": "YulBlock",
													"src": "6435:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6461:431:12",
																"nodeType": "YulBlock",
																"src": "6461:431:12",
																"statements": [
																	{
																		"nativeSrc": "6475:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6475:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6523:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6523:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6491:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "6491:31:12"
																			},
																			"nativeSrc": "6491:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6479:8:12",
																				"nodeType": "YulTypedName",
																				"src": "6479:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6542:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6542:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6565:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "6565:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6593:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6593:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6575:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "6575:17:12"
																					},
																					"nativeSrc": "6575:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6575:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6561:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6561:3:12"
																			},
																			"nativeSrc": "6561:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6561:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6546:11:12",
																				"nodeType": "YulTypedName",
																				"src": "6546:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6762:27:12",
																			"nodeType": "YulBlock",
																			"src": "6762:27:12",
																			"statements": [
																				{
																					"nativeSrc": "6764:23:12",
																					"nodeType": "YulAssignment",
																					"src": "6764:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6779:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "6779:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6764:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "6764:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6746:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "6746:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6758:2:12",
																					"nodeType": "YulLiteral",
																					"src": "6758:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6743:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6743:2:12"
																			},
																			"nativeSrc": "6743:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6743:18:12"
																		},
																		"nativeSrc": "6740:49:12",
																		"nodeType": "YulIf",
																		"src": "6740:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6831:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "6831:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6848:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "6848:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6876:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "6876:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6858:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "6858:17:12"
																							},
																							"nativeSrc": "6858:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6858:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6844:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "6844:3:12"
																					},
																					"nativeSrc": "6844:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6844:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6802:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "6802:28:12"
																			},
																			"nativeSrc": "6802:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6802:80:12"
																		},
																		"nativeSrc": "6802:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6802:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6452:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6452:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6457:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6457:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6449:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6449:2:12"
																},
																"nativeSrc": "6449:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6449:11:12"
															},
															"nativeSrc": "6446:446:12",
															"nodeType": "YulIf",
															"src": "6446:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6356:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6411:5:12",
														"nodeType": "YulTypedName",
														"src": "6411:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6418:3:12",
														"nodeType": "YulTypedName",
														"src": "6418:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6423:10:12",
														"nodeType": "YulTypedName",
														"src": "6423:10:12",
														"type": ""
													}
												],
												"src": "6356:543:12"
											},
											{
												"body": {
													"nativeSrc": "6968:54:12",
													"nodeType": "YulBlock",
													"src": "6968:54:12",
													"statements": [
														{
															"nativeSrc": "6978:37:12",
															"nodeType": "YulAssignment",
															"src": "6978:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7003:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7003:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7009:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7009:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6999:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6999:3:12"
																},
																"nativeSrc": "6999:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6999:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6978:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "6978:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6905:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6943:4:12",
														"nodeType": "YulTypedName",
														"src": "6943:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6949:5:12",
														"nodeType": "YulTypedName",
														"src": "6949:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6959:8:12",
														"nodeType": "YulTypedName",
														"src": "6959:8:12",
														"type": ""
													}
												],
												"src": "6905:117:12"
											},
											{
												"body": {
													"nativeSrc": "7079:118:12",
													"nodeType": "YulBlock",
													"src": "7079:118:12",
													"statements": [
														{
															"nativeSrc": "7089:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7089:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7138:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7138:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7141:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7141:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7134:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7134:3:12"
																				},
																				"nativeSrc": "7134:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7134:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7153:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7153:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7149:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7149:3:12"
																				},
																				"nativeSrc": "7149:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7149:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7105:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "7105:28:12"
																		},
																		"nativeSrc": "7105:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7101:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7101:3:12"
																},
																"nativeSrc": "7101:56:12",
																"nodeType": "YulFunctionCall",
																"src": "7101:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7093:4:12",
																	"nodeType": "YulTypedName",
																	"src": "7093:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7166:25:12",
															"nodeType": "YulAssignment",
															"src": "7166:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7180:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7180:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7186:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7186:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7176:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7176:3:12"
																},
																"nativeSrc": "7176:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7176:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7166:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7166:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7028:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7056:4:12",
														"nodeType": "YulTypedName",
														"src": "7056:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7062:5:12",
														"nodeType": "YulTypedName",
														"src": "7062:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7072:6:12",
														"nodeType": "YulTypedName",
														"src": "7072:6:12",
														"type": ""
													}
												],
												"src": "7028:169:12"
											},
											{
												"body": {
													"nativeSrc": "7283:214:12",
													"nodeType": "YulBlock",
													"src": "7283:214:12",
													"statements": [
														{
															"nativeSrc": "7416:37:12",
															"nodeType": "YulAssignment",
															"src": "7416:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7443:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7443:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7449:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7449:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7424:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "7424:18:12"
																},
																"nativeSrc": "7424:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7424:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7416:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7416:4:12"
																}
															]
														},
														{
															"nativeSrc": "7462:29:12",
															"nodeType": "YulAssignment",
															"src": "7462:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7473:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7473:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7483:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7483:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7486:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7486:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7479:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:12"
																		},
																		"nativeSrc": "7479:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7479:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7470:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7470:2:12"
																},
																"nativeSrc": "7470:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7470:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7462:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7462:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7202:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7264:4:12",
														"nodeType": "YulTypedName",
														"src": "7264:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7270:3:12",
														"nodeType": "YulTypedName",
														"src": "7270:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7278:4:12",
														"nodeType": "YulTypedName",
														"src": "7278:4:12",
														"type": ""
													}
												],
												"src": "7202:295:12"
											},
											{
												"body": {
													"nativeSrc": "7594:1303:12",
													"nodeType": "YulBlock",
													"src": "7594:1303:12",
													"statements": [
														{
															"nativeSrc": "7605:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7605:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7652:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7652:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7619:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "7619:32:12"
																},
																"nativeSrc": "7619:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7619:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7609:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7609:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7741:22:12",
																"nodeType": "YulBlock",
																"src": "7741:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7743:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7743:16:12"
																			},
																			"nativeSrc": "7743:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7743:18:12"
																		},
																		"nativeSrc": "7743:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7743:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7713:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7713:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7721:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7721:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7710:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7710:2:12"
																},
																"nativeSrc": "7710:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7710:30:12"
															},
															"nativeSrc": "7707:56:12",
															"nodeType": "YulIf",
															"src": "7707:56:12"
														},
														{
															"nativeSrc": "7773:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7773:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7819:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7819:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7813:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "7813:5:12"
																		},
																		"nativeSrc": "7813:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7813:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7787:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "7787:25:12"
																},
																"nativeSrc": "7787:38:12",
																"nodeType": "YulFunctionCall",
																"src": "7787:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7777:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7777:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7918:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7918:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7924:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7932:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7932:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7872:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "7872:45:12"
																},
																"nativeSrc": "7872:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7872:67:12"
															},
															"nativeSrc": "7872:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "7872:67:12"
														},
														{
															"nativeSrc": "7949:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7949:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "7966:1:12",
																"nodeType": "YulLiteral",
																"src": "7966:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7953:9:12",
																	"nodeType": "YulTypedName",
																	"src": "7953:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7977:17:12",
															"nodeType": "YulAssignment",
															"src": "7977:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "7990:4:12",
																"nodeType": "YulLiteral",
																"src": "7990:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7977:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "7977:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8041:611:12",
																		"nodeType": "YulBlock",
																		"src": "8041:611:12",
																		"statements": [
																			{
																				"nativeSrc": "8055:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8055:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8074:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "8074:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8086:4:12",
																									"nodeType": "YulLiteral",
																									"src": "8086:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8082:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "8082:3:12"
																							},
																							"nativeSrc": "8082:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8082:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8070:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8070:3:12"
																					},
																					"nativeSrc": "8070:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8070:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8059:7:12",
																						"nodeType": "YulTypedName",
																						"src": "8059:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8106:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8106:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8152:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8152:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8120:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "8120:31:12"
																					},
																					"nativeSrc": "8120:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8120:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8110:6:12",
																						"nodeType": "YulTypedName",
																						"src": "8110:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8170:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8170:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8179:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8179:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8174:1:12",
																						"nodeType": "YulTypedName",
																						"src": "8174:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8238:163:12",
																					"nodeType": "YulBlock",
																					"src": "8238:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8263:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8263:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8281:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "8281:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8286:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "8286:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8277:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "8277:3:12"
																												},
																												"nativeSrc": "8277:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "8277:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8271:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "8271:5:12"
																										},
																										"nativeSrc": "8271:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8271:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8256:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8256:6:12"
																								},
																								"nativeSrc": "8256:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8256:42:12"
																							},
																							"nativeSrc": "8256:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "8256:42:12"
																						},
																						{
																							"nativeSrc": "8315:24:12",
																							"nodeType": "YulAssignment",
																							"src": "8315:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8329:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8329:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8337:1:12",
																										"nodeType": "YulLiteral",
																										"src": "8337:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8325:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8325:3:12"
																								},
																								"nativeSrc": "8325:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8325:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8315:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8315:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8356:31:12",
																							"nodeType": "YulAssignment",
																							"src": "8356:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8373:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "8373:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8384:2:12",
																										"nodeType": "YulLiteral",
																										"src": "8384:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8369:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8369:3:12"
																								},
																								"nativeSrc": "8369:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8369:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8356:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "8356:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8204:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "8204:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8207:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "8207:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8201:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "8201:2:12"
																					},
																					"nativeSrc": "8201:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8201:14:12"
																				},
																				"nativeSrc": "8193:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8216:21:12",
																					"nodeType": "YulBlock",
																					"src": "8216:21:12",
																					"statements": [
																						{
																							"nativeSrc": "8218:17:12",
																							"nodeType": "YulAssignment",
																							"src": "8218:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8227:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "8227:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8230:4:12",
																										"nodeType": "YulLiteral",
																										"src": "8230:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8223:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8223:3:12"
																								},
																								"nativeSrc": "8223:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8223:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8218:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "8218:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8197:3:12",
																					"nodeType": "YulBlock",
																					"src": "8197:3:12",
																					"statements": []
																				},
																				"src": "8193:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "8437:156:12",
																					"nodeType": "YulBlock",
																					"src": "8437:156:12",
																					"statements": [
																						{
																							"nativeSrc": "8455:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8455:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8482:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8482:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8487:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8487:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8478:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8478:3:12"
																										},
																										"nativeSrc": "8478:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8478:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8472:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8472:5:12"
																								},
																								"nativeSrc": "8472:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8472:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8459:9:12",
																									"nodeType": "YulTypedName",
																									"src": "8459:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8522:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8522:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8549:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8549:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8564:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "8564:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8572:4:12",
																														"nodeType": "YulLiteral",
																														"src": "8572:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8560:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "8560:3:12"
																												},
																												"nativeSrc": "8560:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "8560:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8530:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "8530:18:12"
																										},
																										"nativeSrc": "8530:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8530:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8515:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8515:6:12"
																								},
																								"nativeSrc": "8515:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8515:64:12"
																							},
																							"nativeSrc": "8515:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "8515:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8420:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "8420:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8429:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "8429:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8417:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "8417:2:12"
																					},
																					"nativeSrc": "8417:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8417:19:12"
																				},
																				"nativeSrc": "8414:179:12",
																				"nodeType": "YulIf",
																				"src": "8414:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8613:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8613:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8627:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "8627:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8635:1:12",
																											"nodeType": "YulLiteral",
																											"src": "8635:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8623:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "8623:3:12"
																									},
																									"nativeSrc": "8623:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "8623:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8639:1:12",
																									"nodeType": "YulLiteral",
																									"src": "8639:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8619:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "8619:3:12"
																							},
																							"nativeSrc": "8619:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8619:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8606:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8606:6:12"
																					},
																					"nativeSrc": "8606:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8606:36:12"
																				},
																				"nativeSrc": "8606:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8606:36:12"
																			}
																		]
																	},
																	"nativeSrc": "8034:618:12",
																	"nodeType": "YulCase",
																	"src": "8034:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8039:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8039:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8669:222:12",
																		"nodeType": "YulBlock",
																		"src": "8669:222:12",
																		"statements": [
																			{
																				"nativeSrc": "8683:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8683:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8696:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8696:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8687:5:12",
																						"nodeType": "YulTypedName",
																						"src": "8687:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8720:67:12",
																					"nodeType": "YulBlock",
																					"src": "8720:67:12",
																					"statements": [
																						{
																							"nativeSrc": "8738:35:12",
																							"nodeType": "YulAssignment",
																							"src": "8738:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8757:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8757:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8762:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8762:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8753:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8753:3:12"
																										},
																										"nativeSrc": "8753:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8753:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8747:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8747:5:12"
																								},
																								"nativeSrc": "8747:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8747:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8738:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8738:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8713:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8713:6:12"
																				},
																				"nativeSrc": "8710:77:12",
																				"nodeType": "YulIf",
																				"src": "8710:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8807:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8807:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8866:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8866:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8873:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8873:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8813:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "8813:52:12"
																							},
																							"nativeSrc": "8813:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8813:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8800:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8800:6:12"
																					},
																					"nativeSrc": "8800:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8800:81:12"
																				},
																				"nativeSrc": "8800:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8800:81:12"
																			}
																		]
																	},
																	"nativeSrc": "8661:230:12",
																	"nodeType": "YulCase",
																	"src": "8661:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8014:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8014:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8022:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8022:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8011:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8011:2:12"
																},
																"nativeSrc": "8011:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8011:14:12"
															},
															"nativeSrc": "8004:887:12",
															"nodeType": "YulSwitch",
															"src": "8004:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7502:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7583:4:12",
														"nodeType": "YulTypedName",
														"src": "7583:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7589:3:12",
														"nodeType": "YulTypedName",
														"src": "7589:3:12",
														"type": ""
													}
												],
												"src": "7502:1395:12"
											},
											{
												"body": {
													"nativeSrc": "8948:81:12",
													"nodeType": "YulBlock",
													"src": "8948:81:12",
													"statements": [
														{
															"nativeSrc": "8958:65:12",
															"nodeType": "YulAssignment",
															"src": "8958:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8973:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8973:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8980:42:12",
																		"nodeType": "YulLiteral",
																		"src": "8980:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8969:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8969:3:12"
																},
																"nativeSrc": "8969:54:12",
																"nodeType": "YulFunctionCall",
																"src": "8969:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8958:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "8958:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8903:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8930:5:12",
														"nodeType": "YulTypedName",
														"src": "8930:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8940:7:12",
														"nodeType": "YulTypedName",
														"src": "8940:7:12",
														"type": ""
													}
												],
												"src": "8903:126:12"
											},
											{
												"body": {
													"nativeSrc": "9080:51:12",
													"nodeType": "YulBlock",
													"src": "9080:51:12",
													"statements": [
														{
															"nativeSrc": "9090:35:12",
															"nodeType": "YulAssignment",
															"src": "9090:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9119:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9119:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9101:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9101:17:12"
																},
																"nativeSrc": "9101:24:12",
																"nodeType": "YulFunctionCall",
																"src": "9101:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9090:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "9090:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9035:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9062:5:12",
														"nodeType": "YulTypedName",
														"src": "9062:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9072:7:12",
														"nodeType": "YulTypedName",
														"src": "9072:7:12",
														"type": ""
													}
												],
												"src": "9035:96:12"
											},
											{
												"body": {
													"nativeSrc": "9202:53:12",
													"nodeType": "YulBlock",
													"src": "9202:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9219:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9219:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9242:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9242:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9224:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9224:17:12"
																		},
																		"nativeSrc": "9224:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9224:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9212:6:12"
																},
																"nativeSrc": "9212:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9212:37:12"
															},
															"nativeSrc": "9212:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9212:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9137:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9190:5:12",
														"nodeType": "YulTypedName",
														"src": "9190:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9197:3:12",
														"nodeType": "YulTypedName",
														"src": "9197:3:12",
														"type": ""
													}
												],
												"src": "9137:118:12"
											},
											{
												"body": {
													"nativeSrc": "9359:124:12",
													"nodeType": "YulBlock",
													"src": "9359:124:12",
													"statements": [
														{
															"nativeSrc": "9369:26:12",
															"nodeType": "YulAssignment",
															"src": "9369:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9381:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9381:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9392:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9392:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9377:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9377:3:12"
																},
																"nativeSrc": "9377:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9377:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9369:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9369:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9449:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9449:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9462:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9462:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9473:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9473:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9458:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:12"
																		},
																		"nativeSrc": "9458:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9458:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9405:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9405:43:12"
																},
																"nativeSrc": "9405:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9405:71:12"
															},
															"nativeSrc": "9405:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9405:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9261:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9331:9:12",
														"nodeType": "YulTypedName",
														"src": "9331:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9343:6:12",
														"nodeType": "YulTypedName",
														"src": "9343:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9354:4:12",
														"nodeType": "YulTypedName",
														"src": "9354:4:12",
														"type": ""
													}
												],
												"src": "9261:222:12"
											},
											{
												"body": {
													"nativeSrc": "9517:152:12",
													"nodeType": "YulBlock",
													"src": "9517:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9534:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9534:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9537:77:12",
																		"nodeType": "YulLiteral",
																		"src": "9537:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9527:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9527:6:12"
																},
																"nativeSrc": "9527:88:12",
																"nodeType": "YulFunctionCall",
																"src": "9527:88:12"
															},
															"nativeSrc": "9527:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "9527:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9631:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9631:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9634:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9634:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9624:6:12"
																},
																"nativeSrc": "9624:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9624:15:12"
															},
															"nativeSrc": "9624:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9624:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9655:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9655:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9658:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9658:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9648:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9648:6:12"
																},
																"nativeSrc": "9648:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9648:15:12"
															},
															"nativeSrc": "9648:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9648:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9489:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9489:180:12"
											},
											{
												"body": {
													"nativeSrc": "9719:147:12",
													"nodeType": "YulBlock",
													"src": "9719:147:12",
													"statements": [
														{
															"nativeSrc": "9729:25:12",
															"nodeType": "YulAssignment",
															"src": "9729:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9752:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9752:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9734:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9734:17:12"
																},
																"nativeSrc": "9734:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9734:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9729:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9729:1:12"
																}
															]
														},
														{
															"nativeSrc": "9763:25:12",
															"nodeType": "YulAssignment",
															"src": "9763:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9786:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9786:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9768:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9768:17:12"
																},
																"nativeSrc": "9768:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9768:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9763:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9763:1:12"
																}
															]
														},
														{
															"nativeSrc": "9797:16:12",
															"nodeType": "YulAssignment",
															"src": "9797:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9808:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9808:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9811:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9811:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9804:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9804:3:12"
																},
																"nativeSrc": "9804:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9804:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9797:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9797:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9837:22:12",
																"nodeType": "YulBlock",
																"src": "9837:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9839:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9839:16:12"
																			},
																			"nativeSrc": "9839:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9839:18:12"
																		},
																		"nativeSrc": "9839:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9839:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9829:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9829:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9832:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9832:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9826:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9826:2:12"
																},
																"nativeSrc": "9826:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9826:10:12"
															},
															"nativeSrc": "9823:36:12",
															"nodeType": "YulIf",
															"src": "9823:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9675:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9706:1:12",
														"nodeType": "YulTypedName",
														"src": "9706:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9709:1:12",
														"nodeType": "YulTypedName",
														"src": "9709:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9715:3:12",
														"nodeType": "YulTypedName",
														"src": "9715:3:12",
														"type": ""
													}
												],
												"src": "9675:191:12"
											},
											{
												"body": {
													"nativeSrc": "9937:53:12",
													"nodeType": "YulBlock",
													"src": "9937:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9954:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9954:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9977:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9977:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9959:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9959:17:12"
																		},
																		"nativeSrc": "9959:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9959:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9947:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9947:6:12"
																},
																"nativeSrc": "9947:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9947:37:12"
															},
															"nativeSrc": "9947:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9947:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9872:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9925:5:12",
														"nodeType": "YulTypedName",
														"src": "9925:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9932:3:12",
														"nodeType": "YulTypedName",
														"src": "9932:3:12",
														"type": ""
													}
												],
												"src": "9872:118:12"
											},
											{
												"body": {
													"nativeSrc": "10150:288:12",
													"nodeType": "YulBlock",
													"src": "10150:288:12",
													"statements": [
														{
															"nativeSrc": "10160:26:12",
															"nodeType": "YulAssignment",
															"src": "10160:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10172:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10172:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10183:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10183:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10168:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10168:3:12"
																},
																"nativeSrc": "10168:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10168:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10160:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10160:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10240:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10240:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10253:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10253:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10264:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10264:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10249:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10249:3:12"
																		},
																		"nativeSrc": "10249:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10249:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10196:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10196:43:12"
																},
																"nativeSrc": "10196:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10196:71:12"
															},
															"nativeSrc": "10196:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10196:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10321:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10321:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10334:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10334:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10345:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10345:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10330:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10330:3:12"
																		},
																		"nativeSrc": "10330:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10330:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10277:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10277:43:12"
																},
																"nativeSrc": "10277:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10277:72:12"
															},
															"nativeSrc": "10277:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10277:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10403:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10403:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10416:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10416:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10427:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10427:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10412:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10412:3:12"
																		},
																		"nativeSrc": "10412:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10412:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10359:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10359:43:12"
																},
																"nativeSrc": "10359:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10359:72:12"
															},
															"nativeSrc": "10359:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10359:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9996:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10106:9:12",
														"nodeType": "YulTypedName",
														"src": "10106:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10118:6:12",
														"nodeType": "YulTypedName",
														"src": "10118:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10126:6:12",
														"nodeType": "YulTypedName",
														"src": "10126:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10134:6:12",
														"nodeType": "YulTypedName",
														"src": "10134:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10145:4:12",
														"nodeType": "YulTypedName",
														"src": "10145:4:12",
														"type": ""
													}
												],
												"src": "9996:442:12"
											},
											{
												"body": {
													"nativeSrc": "10542:124:12",
													"nodeType": "YulBlock",
													"src": "10542:124:12",
													"statements": [
														{
															"nativeSrc": "10552:26:12",
															"nodeType": "YulAssignment",
															"src": "10552:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10564:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10564:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10575:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10575:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10560:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10560:3:12"
																},
																"nativeSrc": "10560:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10560:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10552:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10552:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10632:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10632:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10645:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10645:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10656:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10656:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10641:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10641:3:12"
																		},
																		"nativeSrc": "10641:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10641:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10588:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10588:43:12"
																},
																"nativeSrc": "10588:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10588:71:12"
															},
															"nativeSrc": "10588:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10588:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10444:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10514:9:12",
														"nodeType": "YulTypedName",
														"src": "10514:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10526:6:12",
														"nodeType": "YulTypedName",
														"src": "10526:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10537:4:12",
														"nodeType": "YulTypedName",
														"src": "10537:4:12",
														"type": ""
													}
												],
												"src": "10444:222:12"
											},
											{
												"body": {
													"nativeSrc": "10717:32:12",
													"nodeType": "YulBlock",
													"src": "10717:32:12",
													"statements": [
														{
															"nativeSrc": "10727:16:12",
															"nodeType": "YulAssignment",
															"src": "10727:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "10738:5:12",
																"nodeType": "YulIdentifier",
																"src": "10738:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10727:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "10727:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "10672:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10699:5:12",
														"nodeType": "YulTypedName",
														"src": "10699:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10709:7:12",
														"nodeType": "YulTypedName",
														"src": "10709:7:12",
														"type": ""
													}
												],
												"src": "10672:77:12"
											},
											{
												"body": {
													"nativeSrc": "10820:53:12",
													"nodeType": "YulBlock",
													"src": "10820:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10837:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10837:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10860:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10860:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "10842:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "10842:17:12"
																		},
																		"nativeSrc": "10842:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10842:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10830:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10830:6:12"
																},
																"nativeSrc": "10830:37:12",
																"nodeType": "YulFunctionCall",
																"src": "10830:37:12"
															},
															"nativeSrc": "10830:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "10830:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "10755:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10808:5:12",
														"nodeType": "YulTypedName",
														"src": "10808:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10815:3:12",
														"nodeType": "YulTypedName",
														"src": "10815:3:12",
														"type": ""
													}
												],
												"src": "10755:118:12"
											},
											{
												"body": {
													"nativeSrc": "11005:206:12",
													"nodeType": "YulBlock",
													"src": "11005:206:12",
													"statements": [
														{
															"nativeSrc": "11015:26:12",
															"nodeType": "YulAssignment",
															"src": "11015:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11027:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11027:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11038:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11038:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11023:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11023:3:12"
																},
																"nativeSrc": "11023:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11023:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11015:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11015:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11095:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11095:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11108:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11108:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11119:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11119:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11104:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11104:3:12"
																		},
																		"nativeSrc": "11104:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11104:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11051:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11051:43:12"
																},
																"nativeSrc": "11051:71:12",
																"nodeType": "YulFunctionCall",
																"src": "11051:71:12"
															},
															"nativeSrc": "11051:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "11051:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11176:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11189:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11189:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11200:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11200:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11185:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11185:3:12"
																		},
																		"nativeSrc": "11185:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11185:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "11132:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11132:43:12"
																},
																"nativeSrc": "11132:72:12",
																"nodeType": "YulFunctionCall",
																"src": "11132:72:12"
															},
															"nativeSrc": "11132:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "11132:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "10879:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10969:9:12",
														"nodeType": "YulTypedName",
														"src": "10969:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10981:6:12",
														"nodeType": "YulTypedName",
														"src": "10981:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10989:6:12",
														"nodeType": "YulTypedName",
														"src": "10989:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11000:4:12",
														"nodeType": "YulTypedName",
														"src": "11000:4:12",
														"type": ""
													}
												],
												"src": "10879:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161384938038061384983398181016040528101906100319190610a5c565b33838381600390816100439190610ce8565b5080600490816100539190610ce8565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd9190610df6565b60405180910390fd5b6100d58161014c60201b60201c565b506100e85f801b3361020f60201b60201c565b506100f9338261030560201b60201c565b6101083361038a60201b60201c565b610117336103cb60201b60201c565b6101263361040c60201b60201c565b6101353361044d60201b60201c565b6101443361048e60201b60201c565b505050610f0b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f61022083836104cf60201b60201c565b6102fb57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061029861053360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506102ff565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610375575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161036c9190610df6565b60405180910390fd5b6103865f838361053a60201b60201c565b5050565b61039861075360201b60201c565b6103c87f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826107ec60201b60201c565b50565b6103d961075360201b60201c565b6104097f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848826107ec60201b60201c565b50565b61041a61075360201b60201c565b61044a7f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363826107ec60201b60201c565b50565b61045b61075360201b60201c565b61048b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee826107ec60201b60201c565b50565b61049c61075360201b60201c565b6104cc7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066826107ec60201b60201c565b50565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361058a578060025f82825461057e9190610e3c565b92505081905550610658565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610613578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161060a93929190610e7e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361069f578060025f82825403925050819055506106e9565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107469190610eb3565b60405180910390a3505050565b61076161053360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1661078561082060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146107ea576107ae61053360201b60201c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107e19190610df6565b60405180910390fd5b565b6107fb8261084860201b60201c565b61080a8161086560201b60201c565b61081a838361020f60201b60201c565b50505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8381526020019081526020015f20600101549050919050565b6108828161087761053360201b60201c565b61088560201b60201c565b50565b61089582826104cf60201b60201c565b6108d85780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016108cf929190610ee4565b60405180910390fd5b5050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61093b826108f5565b810181811067ffffffffffffffff8211171561095a57610959610905565b5b80604052505050565b5f61096c6108dc565b90506109788282610932565b919050565b5f67ffffffffffffffff82111561099757610996610905565b5b6109a0826108f5565b9050602081019050919050565b8281835e5f83830152505050565b5f6109cd6109c88461097d565b610963565b9050828152602081018484840111156109e9576109e86108f1565b5b6109f48482856109ad565b509392505050565b5f82601f830112610a1057610a0f6108ed565b5b8151610a208482602086016109bb565b91505092915050565b5f819050919050565b610a3b81610a29565b8114610a45575f80fd5b50565b5f81519050610a5681610a32565b92915050565b5f805f60608486031215610a7357610a726108e5565b5b5f84015167ffffffffffffffff811115610a9057610a8f6108e9565b5b610a9c868287016109fc565b935050602084015167ffffffffffffffff811115610abd57610abc6108e9565b5b610ac9868287016109fc565b9250506040610ada86828701610a48565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610b3257607f821691505b602082108103610b4557610b44610aee565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610ba77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b6c565b610bb18683610b6c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610bec610be7610be284610a29565b610bc9565b610a29565b9050919050565b5f819050919050565b610c0583610bd2565b610c19610c1182610bf3565b848454610b78565b825550505050565b5f90565b610c2d610c21565b610c38818484610bfc565b505050565b5b81811015610c5b57610c505f82610c25565b600181019050610c3e565b5050565b601f821115610ca057610c7181610b4b565b610c7a84610b5d565b81016020851015610c89578190505b610c9d610c9585610b5d565b830182610c3d565b50505b505050565b5f82821c905092915050565b5f610cc05f1984600802610ca5565b1980831691505092915050565b5f610cd88383610cb1565b9150826002028217905092915050565b610cf182610ae4565b67ffffffffffffffff811115610d0a57610d09610905565b5b610d148254610b1b565b610d1f828285610c5f565b5f60209050601f831160018114610d50575f8415610d3e578287015190505b610d488582610ccd565b865550610daf565b601f198416610d5e86610b4b565b5f5b82811015610d8557848901518255600182019150602085019450602081019050610d60565b86831015610da25784890151610d9e601f891682610cb1565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610de082610db7565b9050919050565b610df081610dd6565b82525050565b5f602082019050610e095f830184610de7565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e4682610a29565b9150610e5183610a29565b9250828201905080821115610e6957610e68610e0f565b5b92915050565b610e7881610a29565b82525050565b5f606082019050610e915f830186610de7565b610e9e6020830185610e6f565b610eab6040830184610e6f565b949350505050565b5f602082019050610ec65f830184610e6f565b92915050565b5f819050919050565b610ede81610ecc565b82525050565b5f604082019050610ef75f830185610de7565b610f046020830184610ed5565b9392505050565b61293180610f185f395ff3fe608060405234801561000f575f80fd5b5060043610610267575f3560e01c806370a082311161014f578063a9059cbb116100c1578063dd62ed3e11610085578063dd62ed3e14610707578063e583983614610737578063f26c159f14610767578063f2fde38b14610783578063f44637ba1461079f578063fe575a87146107bb57610267565b8063a9059cbb14610665578063c2134b2314610695578063d1c2de0a146106b1578063d5391393146106cd578063d547741f146106eb57610267565b8063939bcbc911610113578063939bcbc9146105b757806395d89b41146105d5578063974b368c146105f3578063983b2d561461060f5780639dc29fac1461062b578063a217fddf1461064757610267565b806370a0823114610513578063715018a614610543578063788649ea1461054d5780638da5cb5b1461056957806391d148541461058757610267565b8063282c51f3116101e857806336568abe116101ac57806336568abe1461046957806340c10f1914610485578063410b2424146104a157806344337ea1146104bf578063526606c9146104db578063537df3b6146104f757610267565b8063282c51f3146103d95780632acd2000146103f75780632f2ff15d146104135780633092afd51461042f578063313ce5671461044b57610267565b80630eff2afc1161022f5780630eff2afc1461032357806318160ddd1461033f5780631ec82cb81461035d57806323b872dd14610379578063248a9ca3146103a957610267565b806301ffc9a71461026b578063028468581461029b57806306a85f0f146102b757806306fdde03146102d5578063095ea7b3146102f3575b5f80fd5b610285600480360381019061028091906120c3565b6107eb565b6040516102929190612108565b60405180910390f35b6102b560048036038101906102b0919061217b565b610864565b005b6102bf610899565b6040516102cc91906121be565b60405180910390f35b6102dd6108bd565b6040516102ea9190612247565b60405180910390f35b61030d6004803603810190610308919061229a565b61094d565b60405161031a9190612108565b60405180910390f35b61033d6004803603810190610338919061217b565b61096f565b005b6103476109a4565b60405161035491906122e7565b60405180910390f35b61037760048036038101906103729190612300565b6109ad565b005b610393600480360381019061038e9190612300565b6109e8565b6040516103a09190612108565b60405180910390f35b6103c360048036038101906103be919061237a565b610a16565b6040516103d091906121be565b60405180910390f35b6103e1610a33565b6040516103ee91906121be565b60405180910390f35b610411600480360381019061040c919061217b565b610a57565b005b61042d600480360381019061042891906123a5565b610a8c565b005b6104496004803603810190610444919061217b565b610aae565b005b610453610ae3565b60405161046091906123fe565b60405180910390f35b610483600480360381019061047e91906123a5565b610aeb565b005b61049f600480360381019061049a919061229a565b610b66565b005b6104a9610b9f565b6040516104b691906121be565b60405180910390f35b6104d960048036038101906104d4919061217b565b610bc3565b005b6104f560048036038101906104f0919061217b565b610c5a565b005b610511600480360381019061050c919061217b565b610c8f565b005b61052d6004803603810190610528919061217b565b610d25565b60405161053a91906122e7565b60405180910390f35b61054b610d6a565b005b6105676004803603810190610562919061217b565b610d7d565b005b610571610e13565b60405161057e9190612426565b60405180910390f35b6105a1600480360381019061059c91906123a5565b610e3b565b6040516105ae9190612108565b60405180910390f35b6105bf610e9f565b6040516105cc91906121be565b60405180910390f35b6105dd610ec3565b6040516105ea9190612247565b60405180910390f35b61060d6004803603810190610608919061217b565b610f53565b005b6106296004803603810190610624919061217b565b610f88565b005b6106456004803603810190610640919061229a565b610fbd565b005b61064f610ff6565b60405161065c91906121be565b60405180910390f35b61067f600480360381019061067a919061229a565b610ffc565b60405161068c9190612108565b60405180910390f35b6106af60048036038101906106aa919061217b565b611117565b005b6106cb60048036038101906106c6919061217b565b61114c565b005b6106d5611181565b6040516106e291906121be565b60405180910390f35b610705600480360381019061070091906123a5565b6111a5565b005b610721600480360381019061071c919061243f565b6111c7565b60405161072e91906122e7565b60405180910390f35b610751600480360381019061074c919061217b565b611249565b60405161075e9190612108565b60405180910390f35b610781600480360381019061077c919061217b565b611265565b005b61079d6004803603810190610798919061217b565b6112fc565b005b6107b960048036038101906107b4919061217b565b611380565b005b6107d560048036038101906107d0919061217b565b6113b5565b6040516107e29190612108565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061085d575061085c826113d1565b5b9050919050565b61086c61143a565b6108967f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848826111a5565b50565b7f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d36381565b6060600380546108cc906124aa565b80601f01602080910402602001604051908101604052809291908181526020018280546108f8906124aa565b80156109435780601f1061091a57610100808354040283529160200191610943565b820191905f5260205f20905b81548152906001019060200180831161092657829003601f168201915b5050505050905090565b5f806109576114c1565b90506109648185856114c8565b600191505092915050565b61097761143a565b6109a17ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee82610a8c565b50565b5f600254905090565b7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e0666109d7816114da565b6109e28484846114ee565b50505050565b5f806109f26114c1565b90506109ff8582856115de565b610a0a8585856114ee565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b610a5f61143a565b610a897f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363826111a5565b50565b610a9582610a16565b610a9e816114da565b610aa88383611670565b50505050565b610ab661143a565b610ae07f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826111a5565b50565b5f6012905090565b610af36114c1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b57576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b61828261175a565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610b90816114da565b610b9a8383611844565b505050565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee81565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee610bed816114da565b610c018260096118c390919063ffffffff16565b15610c41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3890612524565b60405180910390fd5b610c558260096118f090919063ffffffff16565b505050565b610c6261143a565b610c8c7f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d36382610a8c565b50565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee610cb9816114da565b610ccd8260096118c390919063ffffffff16565b610d0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d039061258c565b60405180910390fd5b610d2082600961191d90919063ffffffff16565b505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610d7261143a565b610d7b5f61194a565b565b7f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363610da7816114da565b610dbb8260076118c390919063ffffffff16565b610dfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df1906125f4565b60405180910390fd5b610e0e82600761191d90919063ffffffff16565b505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e06681565b606060048054610ed2906124aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610efe906124aa565b8015610f495780601f10610f2057610100808354040283529160200191610f49565b820191905f5260205f20905b815481529060010190602001808311610f2c57829003601f168201915b5050505050905090565b610f5b61143a565b610f857ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee826111a5565b50565b610f9061143a565b610fba7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682610a8c565b50565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848610fe7816114da565b610ff18383611a0d565b505050565b5f801b81565b5f806110066114c1565b905061101c8160076118c390919063ffffffff16565b1561105c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110539061265c565b60405180910390fd5b6110708160096118c390919063ffffffff16565b156110b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a7906126c4565b60405180910390fd5b6110c48460096118c390919063ffffffff16565b15611104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fb9061272c565b60405180910390fd5b61110e8484611a8c565b91505092915050565b61111f61143a565b6111497f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e06682610a8c565b50565b61115461143a565b61117e7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066826111a5565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6111ae82610a16565b6111b7816114da565b6111c1838361175a565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f61125e8260076118c390919063ffffffff16565b9050919050565b7f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d36361128f816114da565b6112a38260076118c390919063ffffffff16565b156112e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112da90612794565b60405180910390fd5b6112f78260076118f090919063ffffffff16565b505050565b61130461143a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611374575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161136b9190612426565b60405180910390fd5b61137d8161194a565b50565b61138861143a565b6113b27f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84882610a8c565b50565b5f6113ca8260096118c390919063ffffffff16565b9050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6114426114c1565b73ffffffffffffffffffffffffffffffffffffffff16611460610e13565b73ffffffffffffffffffffffffffffffffffffffff16146114bf576114836114c1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114b69190612426565b60405180910390fd5b565b5f33905090565b6114d58383836001611aae565b505050565b6114eb816114e66114c1565b611c7d565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361155e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115559190612426565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115ce575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115c59190612426565b60405180910390fd5b6115d9838383611cce565b505050565b5f6115e984846111c7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461166a578181101561165b578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611652939291906127b2565b60405180910390fd5b61166984848484035f611aae565b5b50505050565b5f61167b8383610e3b565b61175057600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506116ed6114c1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611754565b5f90505b92915050565b5f6117658383610e3b565b1561183a575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117d76114c1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061183e565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118b4575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118ab9190612426565b60405180910390fd5b6118bf5f8383611cce565b5050565b5f6118e8835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611ee7565b905092915050565b5f611915835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611f07565b905092915050565b5f611942835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611f6e565b905092915050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a7d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a749190612426565b60405180910390fd5b611a88825f83611cce565b5050565b5f80611a966114c1565b9050611aa38185856114ee565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b1e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611b159190612426565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b8e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611b859190612426565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611c77578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611c6e91906122e7565b60405180910390a35b50505050565b611c878282610e3b565b611cca5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611cc19291906127e7565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d1e578060025f828254611d12919061283b565b92505081905550611dec565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611da7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611d9e939291906127b2565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e33578060025f8282540392505081905550611e7d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611eda91906122e7565b60405180910390a3505050565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f611f128383611ee7565b611f6457825f0182908060018154018082558091505060019003905f5260205f20015f9091909190915055825f0180549050836001015f8481526020019081526020015f208190555060019050611f68565b5f90505b92915050565b5f80836001015f8481526020019081526020015f205490505f811461205f575f600182611f9b919061286e565b90505f6001865f0180549050611fb1919061286e565b9050808214612017575f865f018281548110611fd057611fcf6128a1565b5b905f5260205f200154905080875f018481548110611ff157611ff06128a1565b5b905f5260205f20018190555083876001015f8381526020019081526020015f2081905550505b855f0180548061202a576120296128ce565b5b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f905560019350505050612064565b5f9150505b92915050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120a28161206e565b81146120ac575f80fd5b50565b5f813590506120bd81612099565b92915050565b5f602082840312156120d8576120d761206a565b5b5f6120e5848285016120af565b91505092915050565b5f8115159050919050565b612102816120ee565b82525050565b5f60208201905061211b5f8301846120f9565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61214a82612121565b9050919050565b61215a81612140565b8114612164575f80fd5b50565b5f8135905061217581612151565b92915050565b5f602082840312156121905761218f61206a565b5b5f61219d84828501612167565b91505092915050565b5f819050919050565b6121b8816121a6565b82525050565b5f6020820190506121d15f8301846121af565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612219826121d7565b61222381856121e1565b93506122338185602086016121f1565b61223c816121ff565b840191505092915050565b5f6020820190508181035f83015261225f818461220f565b905092915050565b5f819050919050565b61227981612267565b8114612283575f80fd5b50565b5f8135905061229481612270565b92915050565b5f80604083850312156122b0576122af61206a565b5b5f6122bd85828601612167565b92505060206122ce85828601612286565b9150509250929050565b6122e181612267565b82525050565b5f6020820190506122fa5f8301846122d8565b92915050565b5f805f606084860312156123175761231661206a565b5b5f61232486828701612167565b935050602061233586828701612167565b925050604061234686828701612286565b9150509250925092565b612359816121a6565b8114612363575f80fd5b50565b5f8135905061237481612350565b92915050565b5f6020828403121561238f5761238e61206a565b5b5f61239c84828501612366565b91505092915050565b5f80604083850312156123bb576123ba61206a565b5b5f6123c885828601612366565b92505060206123d985828601612167565b9150509250929050565b5f60ff82169050919050565b6123f8816123e3565b82525050565b5f6020820190506124115f8301846123ef565b92915050565b61242081612140565b82525050565b5f6020820190506124395f830184612417565b92915050565b5f80604083850312156124555761245461206a565b5b5f61246285828601612167565b925050602061247385828601612167565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124c157607f821691505b6020821081036124d4576124d361247d565b5b50919050565b7f4163636f756e7420697320616c726561647920626c61636b6c697374656400005f82015250565b5f61250e601e836121e1565b9150612519826124da565b602082019050919050565b5f6020820190508181035f83015261253b81612502565b9050919050565b7f4163636f756e74206973206e6f7420626c61636b6c69737465640000000000005f82015250565b5f612576601a836121e1565b915061258182612542565b602082019050919050565b5f6020820190508181035f8301526125a38161256a565b9050919050565b7f4163636f756e74206973206e6f742066726f7a656e00000000000000000000005f82015250565b5f6125de6015836121e1565b91506125e9826125aa565b602082019050919050565b5f6020820190508181035f83015261260b816125d2565b9050919050565b7f53656e646572206163636f756e742069732066726f7a656e00000000000000005f82015250565b5f6126466018836121e1565b915061265182612612565b602082019050919050565b5f6020820190508181035f8301526126738161263a565b9050919050565b7f53656e646572206163636f756e7420697320626c61636b6c69737465640000005f82015250565b5f6126ae601d836121e1565b91506126b98261267a565b602082019050919050565b5f6020820190508181035f8301526126db816126a2565b9050919050565b7f526563697069656e74206163636f756e7420697320626c61636b6c69737465645f82015250565b5f6127166020836121e1565b9150612721826126e2565b602082019050919050565b5f6020820190508181035f8301526127438161270a565b9050919050565b7f4163636f756e7420697320616c72656164792066726f7a656e000000000000005f82015250565b5f61277e6019836121e1565b91506127898261274a565b602082019050919050565b5f6020820190508181035f8301526127ab81612772565b9050919050565b5f6060820190506127c55f830186612417565b6127d260208301856122d8565b6127df60408301846122d8565b949350505050565b5f6040820190506127fa5f830185612417565b61280760208301846121af565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61284582612267565b915061285083612267565b92508282019050808211156128685761286761280e565b5b92915050565b5f61287882612267565b915061288383612267565b925082820390508181111561289b5761289a61280e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea2646970667358221220f31b5309d1693d5e37ce7e37b580bbcb57512310b3baf8fac321aa345ecd65af64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3849 CODESIZE SUB DUP1 PUSH2 0x3849 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xA5C JUMP JUMPDEST CALLER DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0x14C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xE8 PUSH0 DUP1 SHL CALLER PUSH2 0x20F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xF9 CALLER DUP3 PUSH2 0x305 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x108 CALLER PUSH2 0x38A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x117 CALLER PUSH2 0x3CB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x126 CALLER PUSH2 0x40C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x135 CALLER PUSH2 0x44D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x144 CALLER PUSH2 0x48E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0xF0B JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x220 DUP4 DUP4 PUSH2 0x4CF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2FB JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x298 PUSH2 0x533 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2FF JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x375 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x386 PUSH0 DUP4 DUP4 PUSH2 0x53A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x398 PUSH2 0x753 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3C8 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x7EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x753 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x409 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0x7EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x41A PUSH2 0x753 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x44A PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 DUP3 PUSH2 0x7EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x45B PUSH2 0x753 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x48B PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP3 PUSH2 0x7EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x49C PUSH2 0x753 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x4CC PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP3 PUSH2 0x7EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x658 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x613 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x69F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6E9 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x761 PUSH2 0x533 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x785 PUSH2 0x820 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7EA JUMPI PUSH2 0x7AE PUSH2 0x533 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x7FB DUP3 PUSH2 0x848 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x80A DUP2 PUSH2 0x865 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x81A DUP4 DUP4 PUSH2 0x20F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x882 DUP2 PUSH2 0x877 PUSH2 0x533 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x885 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x895 DUP3 DUP3 PUSH2 0x4CF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x8D8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CF SWAP3 SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x93B DUP3 PUSH2 0x8F5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x95A JUMPI PUSH2 0x959 PUSH2 0x905 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x96C PUSH2 0x8DC JUMP JUMPDEST SWAP1 POP PUSH2 0x978 DUP3 DUP3 PUSH2 0x932 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x905 JUMP JUMPDEST JUMPDEST PUSH2 0x9A0 DUP3 PUSH2 0x8F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9CD PUSH2 0x9C8 DUP5 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x9E9 JUMPI PUSH2 0x9E8 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST PUSH2 0x9F4 DUP5 DUP3 DUP6 PUSH2 0x9AD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA10 JUMPI PUSH2 0xA0F PUSH2 0x8ED JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xA20 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x9BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3B DUP2 PUSH2 0xA29 JUMP JUMPDEST DUP2 EQ PUSH2 0xA45 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA56 DUP2 PUSH2 0xA32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA73 JUMPI PUSH2 0xA72 PUSH2 0x8E5 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA90 JUMPI PUSH2 0xA8F PUSH2 0x8E9 JUMP JUMPDEST JUMPDEST PUSH2 0xA9C DUP7 DUP3 DUP8 ADD PUSH2 0x9FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xABD JUMPI PUSH2 0xABC PUSH2 0x8E9 JUMP JUMPDEST JUMPDEST PUSH2 0xAC9 DUP7 DUP3 DUP8 ADD PUSH2 0x9FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xADA DUP7 DUP3 DUP8 ADD PUSH2 0xA48 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xB32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xBA7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xBB1 DUP7 DUP4 PUSH2 0xB6C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBEC PUSH2 0xBE7 PUSH2 0xBE2 DUP5 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC05 DUP4 PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0xC19 PUSH2 0xC11 DUP3 PUSH2 0xBF3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xB78 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xC2D PUSH2 0xC21 JUMP JUMPDEST PUSH2 0xC38 DUP2 DUP5 DUP5 PUSH2 0xBFC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC5B JUMPI PUSH2 0xC50 PUSH0 DUP3 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xC71 DUP2 PUSH2 0xB4B JUMP JUMPDEST PUSH2 0xC7A DUP5 PUSH2 0xB5D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xC89 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xC9D PUSH2 0xC95 DUP6 PUSH2 0xB5D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xC3D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xCA5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCD8 DUP4 DUP4 PUSH2 0xCB1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF1 DUP3 PUSH2 0xAE4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD0A JUMPI PUSH2 0xD09 PUSH2 0x905 JUMP JUMPDEST JUMPDEST PUSH2 0xD14 DUP3 SLOAD PUSH2 0xB1B JUMP JUMPDEST PUSH2 0xD1F DUP3 DUP3 DUP6 PUSH2 0xC5F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD50 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xD3E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xD48 DUP6 DUP3 PUSH2 0xCCD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xDAF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xD5E DUP7 PUSH2 0xB4B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD85 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD60 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xDA2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xD9E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xCB1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE0 DUP3 PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF0 DUP2 PUSH2 0xDD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE09 PUSH0 DUP4 ADD DUP5 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE46 DUP3 PUSH2 0xA29 JUMP JUMPDEST SWAP2 POP PUSH2 0xE51 DUP4 PUSH2 0xA29 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE69 JUMPI PUSH2 0xE68 PUSH2 0xE0F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE78 DUP2 PUSH2 0xA29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE91 PUSH0 DUP4 ADD DUP7 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0xE9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0xEAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE6F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC6 PUSH0 DUP4 ADD DUP5 PUSH2 0xE6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDE DUP2 PUSH2 0xECC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEF7 PUSH0 DUP4 ADD DUP6 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0xF04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xED5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2931 DUP1 PUSH2 0xF18 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x267 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x707 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xF26C159F EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0xF44637BA EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x7BB JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xC2134B23 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xD1C2DE0A EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6EB JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0x939BCBC9 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x939BCBC9 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0x974B368C EQ PUSH2 0x5F3 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x647 JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x788649EA EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x587 JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0x282C51F3 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x410B2424 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x526606C9 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x4F7 JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x2ACD2000 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x44B JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0xEFF2AFC GT PUSH2 0x22F JUMPI DUP1 PUSH4 0xEFF2AFC EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x1EC82CB8 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3A9 JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x2846858 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x6A85F0F EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x347 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x2300 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x2300 JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x237A JUMP JUMPDEST PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xA57 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xAAE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x453 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A9 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xBC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xC5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x511 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xC8F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH2 0xD6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x571 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BF PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DD PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x629 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xF88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x645 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST PUSH2 0xFBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64F PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x1117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x114C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D5 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x705 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH2 0x11A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x243F JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x751 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x1249 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x781 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x1265 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x12FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x1380 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x85D JUMPI POP PUSH2 0x85C DUP3 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C PUSH2 0x143A JUMP JUMPDEST PUSH2 0x896 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0x11A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8CC SWAP1 PUSH2 0x24AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F8 SWAP1 PUSH2 0x24AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x943 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x91A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x943 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x926 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x957 PUSH2 0x14C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x964 DUP2 DUP6 DUP6 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x977 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x9A1 PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP3 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 PUSH2 0x9D7 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0x9E2 DUP5 DUP5 DUP5 PUSH2 0x14EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9F2 PUSH2 0x14C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x9FF DUP6 DUP3 DUP6 PUSH2 0x15DE JUMP JUMPDEST PUSH2 0xA0A DUP6 DUP6 DUP6 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0xA5F PUSH2 0x143A JUMP JUMPDEST PUSH2 0xA89 PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 DUP3 PUSH2 0x11A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA95 DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xAA8 DUP4 DUP4 PUSH2 0x1670 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAB6 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xAE0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x11A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAF3 PUSH2 0x14C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB61 DUP3 DUP3 PUSH2 0x175A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xB90 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xB9A DUP4 DUP4 PUSH2 0x1844 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP2 JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE PUSH2 0xBED DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xC01 DUP3 PUSH1 0x9 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xC41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC38 SWAP1 PUSH2 0x2524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC55 DUP3 PUSH1 0x9 PUSH2 0x18F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC62 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xC8C PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 DUP3 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE PUSH2 0xCB9 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xCCD DUP3 PUSH1 0x9 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD03 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD20 DUP3 PUSH1 0x9 PUSH2 0x191D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xD7B PUSH0 PUSH2 0x194A JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 PUSH2 0xDA7 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xDBB DUP3 PUSH1 0x7 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF1 SWAP1 PUSH2 0x25F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0E DUP3 PUSH1 0x7 PUSH2 0x191D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xED2 SWAP1 PUSH2 0x24AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEFE SWAP1 PUSH2 0x24AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF49 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF20 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF49 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF2C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF5B PUSH2 0x143A JUMP JUMPDEST PUSH2 0xF85 PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP3 PUSH2 0x11A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF90 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xFBA PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0xFE7 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xFF1 DUP4 DUP4 PUSH2 0x1A0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1006 PUSH2 0x14C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x101C DUP2 PUSH1 0x7 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1053 SWAP1 PUSH2 0x265C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1070 DUP2 PUSH1 0x9 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A7 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C4 DUP5 PUSH1 0x9 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1104 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FB SWAP1 PUSH2 0x272C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x110E DUP5 DUP5 PUSH2 0x1A8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x111F PUSH2 0x143A JUMP JUMPDEST PUSH2 0x1149 PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP3 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1154 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x117E PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP3 PUSH2 0x11A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x11AE DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x11B7 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0x11C1 DUP4 DUP4 PUSH2 0x175A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x125E DUP3 PUSH1 0x7 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 PUSH2 0x128F DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0x12A3 DUP3 PUSH1 0x7 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DA SWAP1 PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F7 DUP3 PUSH1 0x7 PUSH2 0x18F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1304 PUSH2 0x143A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1374 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x137D DUP2 PUSH2 0x194A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1388 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x13B2 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x13CA DUP3 PUSH1 0x9 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1442 PUSH2 0x14C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1460 PUSH2 0xE13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14BF JUMPI PUSH2 0x1483 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B6 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14D5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1AAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14EB DUP2 PUSH2 0x14E6 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x1C7D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x155E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1555 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C5 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D9 DUP4 DUP4 DUP4 PUSH2 0x1CCE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15E9 DUP5 DUP5 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x166A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x165B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1652 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1669 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x167B DUP4 DUP4 PUSH2 0xE3B JUMP JUMPDEST PUSH2 0x1750 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x16ED PUSH2 0x14C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1754 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1765 DUP4 DUP4 PUSH2 0xE3B JUMP JUMPDEST ISZERO PUSH2 0x183A JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x17D7 PUSH2 0x14C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x183E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AB SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18BF PUSH0 DUP4 DUP4 PUSH2 0x1CCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18E8 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1EE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1915 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1F07 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1942 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1F6E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A7D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A74 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A88 DUP3 PUSH0 DUP4 PUSH2 0x1CCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1A96 PUSH2 0x14C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AA3 DUP2 DUP6 DUP6 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B1E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B15 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B85 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1C77 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C6E SWAP2 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C87 DUP3 DUP3 PUSH2 0xE3B JUMP JUMPDEST PUSH2 0x1CCA JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC1 SWAP3 SWAP2 SWAP1 PUSH2 0x27E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D1E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D12 SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1DEC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1DA7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E33 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E7D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EDA SWAP2 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F12 DUP4 DUP4 PUSH2 0x1EE7 JUMP JUMPDEST PUSH2 0x1F64 JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1F68 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x205F JUMPI PUSH0 PUSH1 0x1 DUP3 PUSH2 0x1F9B SWAP2 SWAP1 PUSH2 0x286E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP7 PUSH0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1FB1 SWAP2 SWAP1 PUSH2 0x286E JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x2017 JUMPI PUSH0 DUP7 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1FD0 JUMPI PUSH2 0x1FCF PUSH2 0x28A1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FF1 JUMPI PUSH2 0x1FF0 PUSH2 0x28A1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH0 ADD DUP1 SLOAD DUP1 PUSH2 0x202A JUMPI PUSH2 0x2029 PUSH2 0x28CE JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2064 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A2 DUP2 PUSH2 0x206E JUMP JUMPDEST DUP2 EQ PUSH2 0x20AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20BD DUP2 PUSH2 0x2099 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D8 JUMPI PUSH2 0x20D7 PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20E5 DUP5 DUP3 DUP6 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2102 DUP2 PUSH2 0x20EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x211B PUSH0 DUP4 ADD DUP5 PUSH2 0x20F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x214A DUP3 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215A DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP2 EQ PUSH2 0x2164 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2175 DUP2 PUSH2 0x2151 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2190 JUMPI PUSH2 0x218F PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x219D DUP5 DUP3 DUP6 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B8 DUP2 PUSH2 0x21A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2219 DUP3 PUSH2 0x21D7 JUMP JUMPDEST PUSH2 0x2223 DUP2 DUP6 PUSH2 0x21E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2233 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21F1 JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH2 0x21FF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x225F DUP2 DUP5 PUSH2 0x220F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2279 DUP2 PUSH2 0x2267 JUMP JUMPDEST DUP2 EQ PUSH2 0x2283 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2294 DUP2 PUSH2 0x2270 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22B0 JUMPI PUSH2 0x22AF PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22BD DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22CE DUP6 DUP3 DUP7 ADD PUSH2 0x2286 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E1 DUP2 PUSH2 0x2267 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22FA PUSH0 DUP4 ADD DUP5 PUSH2 0x22D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2317 JUMPI PUSH2 0x2316 PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2324 DUP7 DUP3 DUP8 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2335 DUP7 DUP3 DUP8 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2346 DUP7 DUP3 DUP8 ADD PUSH2 0x2286 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2359 DUP2 PUSH2 0x21A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2363 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2374 DUP2 PUSH2 0x2350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x238F JUMPI PUSH2 0x238E PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239C DUP5 DUP3 DUP6 ADD PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23BB JUMPI PUSH2 0x23BA PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23C8 DUP6 DUP3 DUP7 ADD PUSH2 0x2366 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23D9 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F8 DUP2 PUSH2 0x23E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2411 PUSH0 DUP4 ADD DUP5 PUSH2 0x23EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2420 DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2439 PUSH0 DUP4 ADD DUP5 PUSH2 0x2417 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2455 JUMPI PUSH2 0x2454 PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2462 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2473 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24D4 JUMPI PUSH2 0x24D3 PUSH2 0x247D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C726561647920626C61636B6C69737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x250E PUSH1 0x1E DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2519 DUP3 PUSH2 0x24DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x253B DUP2 PUSH2 0x2502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F7420626C61636B6C6973746564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2576 PUSH1 0x1A DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2581 DUP3 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25A3 DUP2 PUSH2 0x256A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F742066726F7A656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25DE PUSH1 0x15 DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x25E9 DUP3 PUSH2 0x25AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x260B DUP2 PUSH2 0x25D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206163636F756E742069732066726F7A656E0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2646 PUSH1 0x18 DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2651 DUP3 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2673 DUP2 PUSH2 0x263A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206163636F756E7420697320626C61636B6C6973746564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26AE PUSH1 0x1D DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP3 PUSH2 0x267A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26DB DUP2 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E74206163636F756E7420697320626C61636B6C6973746564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2716 PUSH1 0x20 DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2721 DUP3 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2743 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C72656164792066726F7A656E00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x277E PUSH1 0x19 DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2789 DUP3 PUSH2 0x274A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27AB DUP2 PUSH2 0x2772 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27C5 PUSH0 DUP4 ADD DUP7 PUSH2 0x2417 JUMP JUMPDEST PUSH2 0x27D2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x27DF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22D8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27FA PUSH0 DUP4 ADD DUP6 PUSH2 0x2417 JUMP JUMPDEST PUSH2 0x2807 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2845 DUP3 PUSH2 0x2267 JUMP JUMPDEST SWAP2 POP PUSH2 0x2850 DUP4 PUSH2 0x2267 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2868 JUMPI PUSH2 0x2867 PUSH2 0x280E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2878 DUP3 PUSH2 0x2267 JUMP JUMPDEST SWAP2 POP PUSH2 0x2883 DUP4 PUSH2 0x2267 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x289B JUMPI PUSH2 0x289A PUSH2 0x280E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SHL MSTORE8 MULMOD 0xD1 PUSH10 0x3D5E37CE7E37B580BBCB JUMPI MLOAD 0x23 LT 0xB3 0xBA 0xF8 STATICCALL 0xC3 0x21 0xAA CALLVALUE MCOPY 0xCD PUSH6 0xAF64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "314:6054:11:-:0;;;1131:401;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1245:10;1213:4;1219:6;1970:5:4;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1273:42:11::2;2232:4:0;1284:18:11::0;::::2;1304:10;1273;;;:42;;:::i;:::-;;1326:24;1332:10;1344:5;1326;;;:24;;:::i;:::-;1361:21;1371:10;1361:9;;;:21;;:::i;:::-;1393;1403:10;1393:9;;;:21;;:::i;:::-;1425:22;1436:10;1425;;;:22;;:::i;:::-;1458:31;1478:10;1458:19;;;:31;;:::i;:::-;1500:24;1513:10;1500:12;;;:24;;:::i;:::-;1131:401:::0;;;314:6054;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;4551:103:11:-;1531:13:2;:11;;;:13;;:::i;:::-;4615:31:11::1;510:24;4638:7;4615:9;;;:31;;:::i;:::-;4551:103:::0;:::o;4913:::-;1531:13:2;:11;;;:13;;:::i;:::-;4977:31:11::1;579:24;5000:7;4977:9;;;:31;;:::i;:::-;4913:103:::0;:::o;5276:105::-;1531:13:2;:11;;;:13;;:::i;:::-;5341:32:11::1;649:25;5365:7;5341:9;;;:32;;:::i;:::-;5276:105:::0;:::o;5654:124::-;1531:13:2;:11;;;:13;;:::i;:::-;5728:42:11::1;730:35;5762:7;5728:9;;;:42;;:::i;:::-;5654:124:::0;:::o;6070:107::-;1531:13:2;:11;;;:13;;:::i;:::-;6137:32:11::1;811:25;6161:7;6137:9;;;:32;;:::i;:::-;6070:107:::0;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;6271:1107:4:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1796:162:2:-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;4226:136:0:-;4300:18;4313:4;4300:12;;;:18;;:::i;:::-;2464:16;2475:4;2464:10;;;:16;;:::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;;;:25;;:::i;:::-;;4226:136:::0;;;:::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;3199:103::-;3265:30;3276:4;3282:12;:10;;;:12;;:::i;:::-;3265:10;;;:30;;:::i;:::-;3199:103;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;;;:22;;:::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1009::-;3038:6;3046;3054;3103:2;3091:9;3082:7;3078:23;3074:32;3071:119;;;3109:79;;:::i;:::-;3071:119;3250:1;3239:9;3235:17;3229:24;3280:18;3272:6;3269:30;3266:117;;;3302:79;;:::i;:::-;3266:117;3407:74;3473:7;3464:6;3453:9;3449:22;3407:74;:::i;:::-;3397:84;;3200:291;3551:2;3540:9;3536:18;3530:25;3582:18;3574:6;3571:30;3568:117;;;3604:79;;:::i;:::-;3568:117;3709:74;3775:7;3766:6;3755:9;3751:22;3709:74;:::i;:::-;3699:84;;3501:292;3832:2;3858:64;3914:7;3905:6;3894:9;3890:22;3858:64;:::i;:::-;3848:74;;3803:129;2930:1009;;;;;:::o;3945:99::-;3997:6;4031:5;4025:12;4015:22;;3945:99;;;:::o;4050:180::-;4098:77;4095:1;4088:88;4195:4;4192:1;4185:15;4219:4;4216:1;4209:15;4236:320;4280:6;4317:1;4311:4;4307:12;4297:22;;4364:1;4358:4;4354:12;4385:18;4375:81;;4441:4;4433:6;4429:17;4419:27;;4375:81;4503:2;4495:6;4492:14;4472:18;4469:38;4466:84;;4522:18;;:::i;:::-;4466:84;4287:269;4236:320;;;:::o;4562:141::-;4611:4;4634:3;4626:11;;4657:3;4654:1;4647:14;4691:4;4688:1;4678:18;4670:26;;4562:141;;;:::o;4709:93::-;4746:6;4793:2;4788;4781:5;4777:14;4773:23;4763:33;;4709:93;;;:::o;4808:107::-;4852:8;4902:5;4896:4;4892:16;4871:37;;4808:107;;;;:::o;4921:393::-;4990:6;5040:1;5028:10;5024:18;5063:97;5093:66;5082:9;5063:97;:::i;:::-;5181:39;5211:8;5200:9;5181:39;:::i;:::-;5169:51;;5253:4;5249:9;5242:5;5238:21;5229:30;;5302:4;5292:8;5288:19;5281:5;5278:30;5268:40;;4997:317;;4921:393;;;;;:::o;5320:60::-;5348:3;5369:5;5362:12;;5320:60;;;:::o;5386:142::-;5436:9;5469:53;5487:34;5496:24;5514:5;5496:24;:::i;:::-;5487:34;:::i;:::-;5469:53;:::i;:::-;5456:66;;5386:142;;;:::o;5534:75::-;5577:3;5598:5;5591:12;;5534:75;;;:::o;5615:269::-;5725:39;5756:7;5725:39;:::i;:::-;5786:91;5835:41;5859:16;5835:41;:::i;:::-;5827:6;5820:4;5814:11;5786:91;:::i;:::-;5780:4;5773:105;5691:193;5615:269;;;:::o;5890:73::-;5935:3;5890:73;:::o;5969:189::-;6046:32;;:::i;:::-;6087:65;6145:6;6137;6131:4;6087:65;:::i;:::-;6022:136;5969:189;;:::o;6164:186::-;6224:120;6241:3;6234:5;6231:14;6224:120;;;6295:39;6332:1;6325:5;6295:39;:::i;:::-;6268:1;6261:5;6257:13;6248:22;;6224:120;;;6164:186;;:::o;6356:543::-;6457:2;6452:3;6449:11;6446:446;;;6491:38;6523:5;6491:38;:::i;:::-;6575:29;6593:10;6575:29;:::i;:::-;6565:8;6561:44;6758:2;6746:10;6743:18;6740:49;;;6779:8;6764:23;;6740:49;6802:80;6858:22;6876:3;6858:22;:::i;:::-;6848:8;6844:37;6831:11;6802:80;:::i;:::-;6461:431;;6446:446;6356:543;;;:::o;6905:117::-;6959:8;7009:5;7003:4;6999:16;6978:37;;6905:117;;;;:::o;7028:169::-;7072:6;7105:51;7153:1;7149:6;7141:5;7138:1;7134:13;7105:51;:::i;:::-;7101:56;7186:4;7180;7176:15;7166:25;;7079:118;7028:169;;;;:::o;7202:295::-;7278:4;7424:29;7449:3;7443:4;7424:29;:::i;:::-;7416:37;;7486:3;7483:1;7479:11;7473:4;7470:21;7462:29;;7202:295;;;;:::o;7502:1395::-;7619:37;7652:3;7619:37;:::i;:::-;7721:18;7713:6;7710:30;7707:56;;;7743:18;;:::i;:::-;7707:56;7787:38;7819:4;7813:11;7787:38;:::i;:::-;7872:67;7932:6;7924;7918:4;7872:67;:::i;:::-;7966:1;7990:4;7977:17;;8022:2;8014:6;8011:14;8039:1;8034:618;;;;8696:1;8713:6;8710:77;;;8762:9;8757:3;8753:19;8747:26;8738:35;;8710:77;8813:67;8873:6;8866:5;8813:67;:::i;:::-;8807:4;8800:81;8669:222;8004:887;;8034:618;8086:4;8082:9;8074:6;8070:22;8120:37;8152:4;8120:37;:::i;:::-;8179:1;8193:208;8207:7;8204:1;8201:14;8193:208;;;8286:9;8281:3;8277:19;8271:26;8263:6;8256:42;8337:1;8329:6;8325:14;8315:24;;8384:2;8373:9;8369:18;8356:31;;8230:4;8227:1;8223:12;8218:17;;8193:208;;;8429:6;8420:7;8417:19;8414:179;;;8487:9;8482:3;8478:19;8472:26;8530:48;8572:4;8564:6;8560:17;8549:9;8530:48;:::i;:::-;8522:6;8515:64;8437:156;8414:179;8639:1;8635;8627:6;8623:14;8619:22;8613:4;8606:36;8041:611;;;8004:887;;7594:1303;;;7502:1395;;:::o;8903:126::-;8940:7;8980:42;8973:5;8969:54;8958:65;;8903:126;;;:::o;9035:96::-;9072:7;9101:24;9119:5;9101:24;:::i;:::-;9090:35;;9035:96;;;:::o;9137:118::-;9224:24;9242:5;9224:24;:::i;:::-;9219:3;9212:37;9137:118;;:::o;9261:222::-;9354:4;9392:2;9381:9;9377:18;9369:26;;9405:71;9473:1;9462:9;9458:17;9449:6;9405:71;:::i;:::-;9261:222;;;;:::o;9489:180::-;9537:77;9534:1;9527:88;9634:4;9631:1;9624:15;9658:4;9655:1;9648:15;9675:191;9715:3;9734:20;9752:1;9734:20;:::i;:::-;9729:25;;9768:20;9786:1;9768:20;:::i;:::-;9763:25;;9811:1;9808;9804:9;9797:16;;9832:3;9829:1;9826:10;9823:36;;;9839:18;;:::i;:::-;9823:36;9675:191;;;;:::o;9872:118::-;9959:24;9977:5;9959:24;:::i;:::-;9954:3;9947:37;9872:118;;:::o;9996:442::-;10145:4;10183:2;10172:9;10168:18;10160:26;;10196:71;10264:1;10253:9;10249:17;10240:6;10196:71;:::i;:::-;10277:72;10345:2;10334:9;10330:18;10321:6;10277:72;:::i;:::-;10359;10427:2;10416:9;10412:18;10403:6;10359:72;:::i;:::-;9996:442;;;;;;:::o;10444:222::-;10537:4;10575:2;10564:9;10560:18;10552:26;;10588:71;10656:1;10645:9;10641:17;10632:6;10588:71;:::i;:::-;10444:222;;;;:::o;10672:77::-;10709:7;10738:5;10727:16;;10672:77;;;:::o;10755:118::-;10842:24;10860:5;10842:24;:::i;:::-;10837:3;10830:37;10755:118;;:::o;10879:332::-;11000:4;11038:2;11027:9;11023:18;11015:26;;11051:71;11119:1;11108:9;11104:17;11095:6;11051:71;:::i;:::-;11132:72;11200:2;11189:9;11185:18;11176:6;11132:72;:::i;:::-;10879:332;;;;;:::o;314:6054:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BLACKLIST_MANAGER_ROLE_1997": {
									"entryPoint": 2975,
									"id": 1997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BURNER_ROLE_1987": {
									"entryPoint": 2611,
									"id": 1987,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 4086,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FREEZER_ROLE_1992": {
									"entryPoint": 2201,
									"id": 1992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1982": {
									"entryPoint": 4481,
									"id": 1982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RECOVER_ROLE_2002": {
									"entryPoint": 3743,
									"id": 2002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_1401": {
									"entryPoint": 7943,
									"id": 1401,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_approve_1069": {
									"entryPoint": 5320,
									"id": 1069,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1129": {
									"entryPoint": 6830,
									"id": 1129,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1051": {
									"entryPoint": 6669,
									"id": 1051,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_463": {
									"entryPoint": 5178,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 7293,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 5338,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_contains_1504": {
									"entryPoint": 7911,
									"id": 1504,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_256": {
									"entryPoint": 5744,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1018": {
									"entryPoint": 6212,
									"id": 1018,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1294": {
									"entryPoint": 5313,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_remove_1485": {
									"entryPoint": 8046,
									"id": 1485,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 5978,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1177": {
									"entryPoint": 5598,
									"id": 1177,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_525": {
									"entryPoint": 6474,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_908": {
									"entryPoint": 5358,
									"id": 908,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_985": {
									"entryPoint": 7374,
									"id": 985,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addBlacklistManager_2374": {
									"entryPoint": 2415,
									"id": 2374,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addBurner_2322": {
									"entryPoint": 4992,
									"id": 2322,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addFreezer_2348": {
									"entryPoint": 3162,
									"id": 2348,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addMinter_2296": {
									"entryPoint": 3976,
									"id": 2296,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRecoverer_2400": {
									"entryPoint": 4375,
									"id": 2400,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addToBlacklist_2179": {
									"entryPoint": 3011,
									"id": 2179,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1701": {
									"entryPoint": 6384,
									"id": 1701,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_805": {
									"entryPoint": 4551,
									"id": 805,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_829": {
									"entryPoint": 2381,
									"id": 829,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_764": {
									"entryPoint": 3365,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_2095": {
									"entryPoint": 4029,
									"id": 2095,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@contains_1755": {
									"entryPoint": 6339,
									"id": 1755,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_742": {
									"entryPoint": 2787,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@freezeAccount_2119": {
									"entryPoint": 4709,
									"id": 2119,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2582,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2700,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3643,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isBlacklisted_2215": {
									"entryPoint": 5045,
									"id": 2215,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isFrozen_2155": {
									"entryPoint": 4681,
									"id": 2155,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2079": {
									"entryPoint": 2918,
									"id": 2079,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_724": {
									"entryPoint": 2237,
									"id": 724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_446": {
									"entryPoint": 3603,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recover_2234": {
									"entryPoint": 2477,
									"id": 2234,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@removeBlacklistManager_2387": {
									"entryPoint": 3923,
									"id": 2387,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeBurner_2335": {
									"entryPoint": 2148,
									"id": 2335,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeFreezer_2361": {
									"entryPoint": 2647,
									"id": 2361,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeFromBlacklist_2202": {
									"entryPoint": 3215,
									"id": 2202,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeMinter_2309": {
									"entryPoint": 2734,
									"id": 2309,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeRecoverer_2413": {
									"entryPoint": 4428,
									"id": 2413,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_1728": {
									"entryPoint": 6429,
									"id": 1728,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_477": {
									"entryPoint": 3434,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 2795,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4517,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1335": {
									"entryPoint": 5073,
									"id": 1335,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 2027,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_733": {
									"entryPoint": 3779,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_751": {
									"entryPoint": 2468,
									"id": 751,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_861": {
									"entryPoint": 2536,
									"id": 861,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_505": {
									"entryPoint": 4860,
									"id": 505,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_2283": {
									"entryPoint": 4092,
									"id": 2283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_788": {
									"entryPoint": 6796,
									"id": 788,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unfreezeAccount_2142": {
									"entryPoint": 3453,
									"id": 2142,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 9062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 8623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 10215,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10162,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8689,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9341,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10446,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10401,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6": {
									"entryPoint": 9746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab": {
									"entryPoint": 9954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a": {
									"entryPoint": 9434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c": {
									"entryPoint": 9850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21": {
									"entryPoint": 9642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9": {
									"entryPoint": 9538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d": {
									"entryPoint": 10058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 9040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17301:12",
										"nodeType": "YulBlock",
										"src": "0:17301:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1563:81:12",
													"nodeType": "YulBlock",
													"src": "1563:81:12",
													"statements": [
														{
															"nativeSrc": "1573:65:12",
															"nodeType": "YulAssignment",
															"src": "1573:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:12"
																},
																"nativeSrc": "1584:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:12",
														"nodeType": "YulTypedName",
														"src": "1545:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:12",
														"nodeType": "YulTypedName",
														"src": "1555:7:12",
														"type": ""
													}
												],
												"src": "1518:126:12"
											},
											{
												"body": {
													"nativeSrc": "1695:51:12",
													"nodeType": "YulBlock",
													"src": "1695:51:12",
													"statements": [
														{
															"nativeSrc": "1705:35:12",
															"nodeType": "YulAssignment",
															"src": "1705:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:12"
																},
																"nativeSrc": "1716:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:12",
														"nodeType": "YulTypedName",
														"src": "1677:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:12",
														"nodeType": "YulTypedName",
														"src": "1687:7:12",
														"type": ""
													}
												],
												"src": "1650:96:12"
											},
											{
												"body": {
													"nativeSrc": "1795:79:12",
													"nodeType": "YulBlock",
													"src": "1795:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:12",
																"nodeType": "YulBlock",
																"src": "1852:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:12"
																			},
																			"nativeSrc": "1854:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:12"
																		},
																		"nativeSrc": "1854:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:12"
																				},
																				"nativeSrc": "1825:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:12"
																		},
																		"nativeSrc": "1815:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:12"
																},
																"nativeSrc": "1808:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:12"
															},
															"nativeSrc": "1805:63:12",
															"nodeType": "YulIf",
															"src": "1805:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:12",
														"nodeType": "YulTypedName",
														"src": "1788:5:12",
														"type": ""
													}
												],
												"src": "1752:122:12"
											},
											{
												"body": {
													"nativeSrc": "1932:87:12",
													"nodeType": "YulBlock",
													"src": "1932:87:12",
													"statements": [
														{
															"nativeSrc": "1942:29:12",
															"nodeType": "YulAssignment",
															"src": "1942:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:12"
																},
																"nativeSrc": "1951:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:12"
																},
																"nativeSrc": "1980:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:12"
															},
															"nativeSrc": "1980:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:12",
														"nodeType": "YulTypedName",
														"src": "1910:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:12",
														"nodeType": "YulTypedName",
														"src": "1918:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:12",
														"nodeType": "YulTypedName",
														"src": "1926:5:12",
														"type": ""
													}
												],
												"src": "1880:139:12"
											},
											{
												"body": {
													"nativeSrc": "2091:263:12",
													"nodeType": "YulBlock",
													"src": "2091:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2137:83:12",
																"nodeType": "YulBlock",
																"src": "2137:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2139:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:12"
																			},
																			"nativeSrc": "2139:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:12"
																		},
																		"nativeSrc": "2139:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2112:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2108:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:12"
																		},
																		"nativeSrc": "2108:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2104:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:12"
																},
																"nativeSrc": "2104:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2104:32:12"
															},
															"nativeSrc": "2101:119:12",
															"nodeType": "YulIf",
															"src": "2101:119:12"
														},
														{
															"nativeSrc": "2230:117:12",
															"nodeType": "YulBlock",
															"src": "2230:117:12",
															"statements": [
																{
																	"nativeSrc": "2245:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2259:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2249:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2274:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2274:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2309:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2320:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2305:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:12"
																				},
																				"nativeSrc": "2305:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2329:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2284:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:12"
																		},
																		"nativeSrc": "2284:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2274:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:12",
														"nodeType": "YulTypedName",
														"src": "2061:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:12",
														"nodeType": "YulTypedName",
														"src": "2072:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:12",
														"nodeType": "YulTypedName",
														"src": "2084:6:12",
														"type": ""
													}
												],
												"src": "2025:329:12"
											},
											{
												"body": {
													"nativeSrc": "2405:32:12",
													"nodeType": "YulBlock",
													"src": "2405:32:12",
													"statements": [
														{
															"nativeSrc": "2415:16:12",
															"nodeType": "YulAssignment",
															"src": "2415:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2426:5:12",
																"nodeType": "YulIdentifier",
																"src": "2426:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2415:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2415:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2360:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2387:5:12",
														"nodeType": "YulTypedName",
														"src": "2387:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2397:7:12",
														"nodeType": "YulTypedName",
														"src": "2397:7:12",
														"type": ""
													}
												],
												"src": "2360:77:12"
											},
											{
												"body": {
													"nativeSrc": "2508:53:12",
													"nodeType": "YulBlock",
													"src": "2508:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2525:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2548:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2548:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2530:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2530:17:12"
																		},
																		"nativeSrc": "2530:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:12"
																},
																"nativeSrc": "2518:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2518:37:12"
															},
															"nativeSrc": "2518:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2518:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2443:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:12",
														"nodeType": "YulTypedName",
														"src": "2496:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2503:3:12",
														"nodeType": "YulTypedName",
														"src": "2503:3:12",
														"type": ""
													}
												],
												"src": "2443:118:12"
											},
											{
												"body": {
													"nativeSrc": "2665:124:12",
													"nodeType": "YulBlock",
													"src": "2665:124:12",
													"statements": [
														{
															"nativeSrc": "2675:26:12",
															"nodeType": "YulAssignment",
															"src": "2675:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2687:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2683:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:12"
																},
																"nativeSrc": "2683:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2683:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2675:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2755:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2755:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:12"
																		},
																		"nativeSrc": "2764:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2711:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2711:43:12"
																},
																"nativeSrc": "2711:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2711:71:12"
															},
															"nativeSrc": "2711:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "2711:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2567:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2637:9:12",
														"nodeType": "YulTypedName",
														"src": "2637:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2649:6:12",
														"nodeType": "YulTypedName",
														"src": "2649:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2660:4:12",
														"nodeType": "YulTypedName",
														"src": "2660:4:12",
														"type": ""
													}
												],
												"src": "2567:222:12"
											},
											{
												"body": {
													"nativeSrc": "2854:40:12",
													"nodeType": "YulBlock",
													"src": "2854:40:12",
													"statements": [
														{
															"nativeSrc": "2865:22:12",
															"nodeType": "YulAssignment",
															"src": "2865:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2881:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2881:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2875:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2875:5:12"
																},
																"nativeSrc": "2875:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2875:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2865:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2865:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2795:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2837:5:12",
														"nodeType": "YulTypedName",
														"src": "2837:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2847:6:12",
														"nodeType": "YulTypedName",
														"src": "2847:6:12",
														"type": ""
													}
												],
												"src": "2795:99:12"
											},
											{
												"body": {
													"nativeSrc": "2996:73:12",
													"nodeType": "YulBlock",
													"src": "2996:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3013:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3013:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3018:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3018:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3006:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3006:6:12"
																},
																"nativeSrc": "3006:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3006:19:12"
															},
															"nativeSrc": "3006:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "3006:19:12"
														},
														{
															"nativeSrc": "3034:29:12",
															"nodeType": "YulAssignment",
															"src": "3034:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3053:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3053:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3058:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3058:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3049:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:12"
																},
																"nativeSrc": "3049:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3049:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3034:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "3034:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2900:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2968:3:12",
														"nodeType": "YulTypedName",
														"src": "2968:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2973:6:12",
														"nodeType": "YulTypedName",
														"src": "2973:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2984:11:12",
														"nodeType": "YulTypedName",
														"src": "2984:11:12",
														"type": ""
													}
												],
												"src": "2900:169:12"
											},
											{
												"body": {
													"nativeSrc": "3137:77:12",
													"nodeType": "YulBlock",
													"src": "3137:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3154:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3154:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3159:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3164:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3164:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3148:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3148:5:12"
																},
																"nativeSrc": "3148:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3148:23:12"
															},
															"nativeSrc": "3148:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "3148:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3191:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3191:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3196:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3187:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3187:3:12"
																		},
																		"nativeSrc": "3187:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3187:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3205:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3205:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3180:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:12"
																},
																"nativeSrc": "3180:27:12",
																"nodeType": "YulFunctionCall",
																"src": "3180:27:12"
															},
															"nativeSrc": "3180:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "3180:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3075:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3119:3:12",
														"nodeType": "YulTypedName",
														"src": "3119:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3124:3:12",
														"nodeType": "YulTypedName",
														"src": "3124:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3129:6:12",
														"nodeType": "YulTypedName",
														"src": "3129:6:12",
														"type": ""
													}
												],
												"src": "3075:139:12"
											},
											{
												"body": {
													"nativeSrc": "3268:54:12",
													"nodeType": "YulBlock",
													"src": "3268:54:12",
													"statements": [
														{
															"nativeSrc": "3278:38:12",
															"nodeType": "YulAssignment",
															"src": "3278:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3296:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3296:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3303:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3303:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3292:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3292:3:12"
																		},
																		"nativeSrc": "3292:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3292:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3312:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3312:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3308:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:12"
																		},
																		"nativeSrc": "3308:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3288:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3288:3:12"
																},
																"nativeSrc": "3288:28:12",
																"nodeType": "YulFunctionCall",
																"src": "3288:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3278:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3220:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3251:5:12",
														"nodeType": "YulTypedName",
														"src": "3251:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3261:6:12",
														"nodeType": "YulTypedName",
														"src": "3261:6:12",
														"type": ""
													}
												],
												"src": "3220:102:12"
											},
											{
												"body": {
													"nativeSrc": "3420:285:12",
													"nodeType": "YulBlock",
													"src": "3420:285:12",
													"statements": [
														{
															"nativeSrc": "3430:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3430:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3477:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3477:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3444:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3444:32:12"
																},
																"nativeSrc": "3444:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3444:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3434:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3434:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3492:78:12",
															"nodeType": "YulAssignment",
															"src": "3492:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3558:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3558:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3563:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3563:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3499:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "3499:58:12"
																},
																"nativeSrc": "3499:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3499:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3492:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3492:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3618:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3618:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3614:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3614:3:12"
																		},
																		"nativeSrc": "3614:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3614:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3632:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3632:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3637:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3637:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3579:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "3579:34:12"
																},
																"nativeSrc": "3579:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3579:65:12"
															},
															"nativeSrc": "3579:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3579:65:12"
														},
														{
															"nativeSrc": "3653:46:12",
															"nodeType": "YulAssignment",
															"src": "3653:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3664:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3664:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3691:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3691:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3669:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "3669:21:12"
																		},
																		"nativeSrc": "3669:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3669:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3660:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3660:3:12"
																},
																"nativeSrc": "3660:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3660:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3653:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3653:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3328:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3401:5:12",
														"nodeType": "YulTypedName",
														"src": "3401:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3408:3:12",
														"nodeType": "YulTypedName",
														"src": "3408:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3416:3:12",
														"nodeType": "YulTypedName",
														"src": "3416:3:12",
														"type": ""
													}
												],
												"src": "3328:377:12"
											},
											{
												"body": {
													"nativeSrc": "3829:195:12",
													"nodeType": "YulBlock",
													"src": "3829:195:12",
													"statements": [
														{
															"nativeSrc": "3839:26:12",
															"nodeType": "YulAssignment",
															"src": "3839:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3851:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3851:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3862:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3862:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3847:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3847:3:12"
																},
																"nativeSrc": "3847:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3847:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3839:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3839:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3886:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3886:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3897:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3897:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3882:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3882:3:12"
																		},
																		"nativeSrc": "3882:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3882:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3905:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3905:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3911:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3911:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3901:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:12"
																		},
																		"nativeSrc": "3901:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3875:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3875:6:12"
																},
																"nativeSrc": "3875:47:12",
																"nodeType": "YulFunctionCall",
																"src": "3875:47:12"
															},
															"nativeSrc": "3875:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "3875:47:12"
														},
														{
															"nativeSrc": "3931:86:12",
															"nodeType": "YulAssignment",
															"src": "3931:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4003:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4012:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4012:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3939:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "3939:63:12"
																},
																"nativeSrc": "3939:78:12",
																"nodeType": "YulFunctionCall",
																"src": "3939:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3931:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3931:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3711:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3801:9:12",
														"nodeType": "YulTypedName",
														"src": "3801:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3813:6:12",
														"nodeType": "YulTypedName",
														"src": "3813:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3824:4:12",
														"nodeType": "YulTypedName",
														"src": "3824:4:12",
														"type": ""
													}
												],
												"src": "3711:313:12"
											},
											{
												"body": {
													"nativeSrc": "4075:32:12",
													"nodeType": "YulBlock",
													"src": "4075:32:12",
													"statements": [
														{
															"nativeSrc": "4085:16:12",
															"nodeType": "YulAssignment",
															"src": "4085:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "4096:5:12",
																"nodeType": "YulIdentifier",
																"src": "4096:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4085:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4085:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4030:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4057:5:12",
														"nodeType": "YulTypedName",
														"src": "4057:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4067:7:12",
														"nodeType": "YulTypedName",
														"src": "4067:7:12",
														"type": ""
													}
												],
												"src": "4030:77:12"
											},
											{
												"body": {
													"nativeSrc": "4156:79:12",
													"nodeType": "YulBlock",
													"src": "4156:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4213:16:12",
																"nodeType": "YulBlock",
																"src": "4213:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4222:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4222:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4225:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4225:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4215:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4215:6:12"
																			},
																			"nativeSrc": "4215:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4215:12:12"
																		},
																		"nativeSrc": "4215:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4215:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4179:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4179:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4204:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4204:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4186:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "4186:17:12"
																				},
																				"nativeSrc": "4186:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4186:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4176:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4176:2:12"
																		},
																		"nativeSrc": "4176:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4169:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:12"
																},
																"nativeSrc": "4169:43:12",
																"nodeType": "YulFunctionCall",
																"src": "4169:43:12"
															},
															"nativeSrc": "4166:63:12",
															"nodeType": "YulIf",
															"src": "4166:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4113:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:12",
														"nodeType": "YulTypedName",
														"src": "4149:5:12",
														"type": ""
													}
												],
												"src": "4113:122:12"
											},
											{
												"body": {
													"nativeSrc": "4293:87:12",
													"nodeType": "YulBlock",
													"src": "4293:87:12",
													"statements": [
														{
															"nativeSrc": "4303:29:12",
															"nodeType": "YulAssignment",
															"src": "4303:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4325:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4325:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4312:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4312:12:12"
																},
																"nativeSrc": "4312:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4312:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4303:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4303:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4368:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4368:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4341:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "4341:26:12"
																},
																"nativeSrc": "4341:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4341:33:12"
															},
															"nativeSrc": "4341:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4341:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4241:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4271:6:12",
														"nodeType": "YulTypedName",
														"src": "4271:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4279:3:12",
														"nodeType": "YulTypedName",
														"src": "4279:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4287:5:12",
														"nodeType": "YulTypedName",
														"src": "4287:5:12",
														"type": ""
													}
												],
												"src": "4241:139:12"
											},
											{
												"body": {
													"nativeSrc": "4469:391:12",
													"nodeType": "YulBlock",
													"src": "4469:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4515:83:12",
																"nodeType": "YulBlock",
																"src": "4515:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4517:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4517:77:12"
																			},
																			"nativeSrc": "4517:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4517:79:12"
																		},
																		"nativeSrc": "4517:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4517:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4490:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4490:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4499:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4499:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4486:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4486:3:12"
																		},
																		"nativeSrc": "4486:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4486:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4511:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4511:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4482:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4482:3:12"
																},
																"nativeSrc": "4482:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4482:32:12"
															},
															"nativeSrc": "4479:119:12",
															"nodeType": "YulIf",
															"src": "4479:119:12"
														},
														{
															"nativeSrc": "4608:117:12",
															"nodeType": "YulBlock",
															"src": "4608:117:12",
															"statements": [
																{
																	"nativeSrc": "4623:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4623:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4637:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4637:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4627:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4627:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4652:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4652:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4687:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4687:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4698:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4698:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4683:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4683:3:12"
																				},
																				"nativeSrc": "4683:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4683:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4707:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4707:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4662:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4662:20:12"
																		},
																		"nativeSrc": "4662:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4662:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4652:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4652:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4735:118:12",
															"nodeType": "YulBlock",
															"src": "4735:118:12",
															"statements": [
																{
																	"nativeSrc": "4750:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4750:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4764:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4764:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4754:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4754:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4780:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4780:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4815:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4815:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4826:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4826:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4811:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4811:3:12"
																				},
																				"nativeSrc": "4811:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4811:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4835:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4835:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4790:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4790:20:12"
																		},
																		"nativeSrc": "4790:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4790:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4780:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4780:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4386:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4431:9:12",
														"nodeType": "YulTypedName",
														"src": "4431:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4442:7:12",
														"nodeType": "YulTypedName",
														"src": "4442:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4454:6:12",
														"nodeType": "YulTypedName",
														"src": "4454:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4462:6:12",
														"nodeType": "YulTypedName",
														"src": "4462:6:12",
														"type": ""
													}
												],
												"src": "4386:474:12"
											},
											{
												"body": {
													"nativeSrc": "4931:53:12",
													"nodeType": "YulBlock",
													"src": "4931:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4948:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4948:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4971:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4971:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4953:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4953:17:12"
																		},
																		"nativeSrc": "4953:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4953:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4941:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4941:6:12"
																},
																"nativeSrc": "4941:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4941:37:12"
															},
															"nativeSrc": "4941:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4941:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4866:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4919:5:12",
														"nodeType": "YulTypedName",
														"src": "4919:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4926:3:12",
														"nodeType": "YulTypedName",
														"src": "4926:3:12",
														"type": ""
													}
												],
												"src": "4866:118:12"
											},
											{
												"body": {
													"nativeSrc": "5088:124:12",
													"nodeType": "YulBlock",
													"src": "5088:124:12",
													"statements": [
														{
															"nativeSrc": "5098:26:12",
															"nodeType": "YulAssignment",
															"src": "5098:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5110:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5110:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5121:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5121:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5106:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5106:3:12"
																},
																"nativeSrc": "5106:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5106:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5098:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5178:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5178:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5191:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5191:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5202:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5202:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5187:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5187:3:12"
																		},
																		"nativeSrc": "5187:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5187:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5134:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5134:43:12"
																},
																"nativeSrc": "5134:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5134:71:12"
															},
															"nativeSrc": "5134:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5134:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4990:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5060:9:12",
														"nodeType": "YulTypedName",
														"src": "5060:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5072:6:12",
														"nodeType": "YulTypedName",
														"src": "5072:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5083:4:12",
														"nodeType": "YulTypedName",
														"src": "5083:4:12",
														"type": ""
													}
												],
												"src": "4990:222:12"
											},
											{
												"body": {
													"nativeSrc": "5318:519:12",
													"nodeType": "YulBlock",
													"src": "5318:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5364:83:12",
																"nodeType": "YulBlock",
																"src": "5364:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5366:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5366:77:12"
																			},
																			"nativeSrc": "5366:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5366:79:12"
																		},
																		"nativeSrc": "5366:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5366:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5339:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5339:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5348:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5348:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5335:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5335:3:12"
																		},
																		"nativeSrc": "5335:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5335:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5360:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5360:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5331:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:12"
																},
																"nativeSrc": "5331:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5331:32:12"
															},
															"nativeSrc": "5328:119:12",
															"nodeType": "YulIf",
															"src": "5328:119:12"
														},
														{
															"nativeSrc": "5457:117:12",
															"nodeType": "YulBlock",
															"src": "5457:117:12",
															"statements": [
																{
																	"nativeSrc": "5472:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5472:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5486:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5486:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5476:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5476:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5501:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5501:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5536:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5536:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5547:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5547:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5532:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5532:3:12"
																				},
																				"nativeSrc": "5532:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5532:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5556:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5556:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5511:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5511:20:12"
																		},
																		"nativeSrc": "5511:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5511:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5501:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5501:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5584:118:12",
															"nodeType": "YulBlock",
															"src": "5584:118:12",
															"statements": [
																{
																	"nativeSrc": "5599:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5599:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5613:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5613:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5603:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5603:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5629:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5629:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5664:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5664:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5675:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5675:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5660:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5660:3:12"
																				},
																				"nativeSrc": "5660:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5660:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5684:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5684:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5639:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5639:20:12"
																		},
																		"nativeSrc": "5639:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5639:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5629:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5629:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5712:118:12",
															"nodeType": "YulBlock",
															"src": "5712:118:12",
															"statements": [
																{
																	"nativeSrc": "5727:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5727:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5741:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5741:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5731:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5731:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5757:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5757:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5792:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5792:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5803:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5803:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5788:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5788:3:12"
																				},
																				"nativeSrc": "5788:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5788:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5812:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5812:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5767:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5767:20:12"
																		},
																		"nativeSrc": "5767:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5767:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5757:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5757:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5218:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5272:9:12",
														"nodeType": "YulTypedName",
														"src": "5272:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5283:7:12",
														"nodeType": "YulTypedName",
														"src": "5283:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5295:6:12",
														"nodeType": "YulTypedName",
														"src": "5295:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5303:6:12",
														"nodeType": "YulTypedName",
														"src": "5303:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5311:6:12",
														"nodeType": "YulTypedName",
														"src": "5311:6:12",
														"type": ""
													}
												],
												"src": "5218:619:12"
											},
											{
												"body": {
													"nativeSrc": "5886:79:12",
													"nodeType": "YulBlock",
													"src": "5886:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5943:16:12",
																"nodeType": "YulBlock",
																"src": "5943:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5952:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5952:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5955:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5955:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5945:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5945:6:12"
																			},
																			"nativeSrc": "5945:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5945:12:12"
																		},
																		"nativeSrc": "5945:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5945:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5909:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5909:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5934:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5934:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5916:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5916:17:12"
																				},
																				"nativeSrc": "5916:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5916:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5906:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5906:2:12"
																		},
																		"nativeSrc": "5906:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5906:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5899:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5899:6:12"
																},
																"nativeSrc": "5899:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5899:43:12"
															},
															"nativeSrc": "5896:63:12",
															"nodeType": "YulIf",
															"src": "5896:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5843:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5879:5:12",
														"nodeType": "YulTypedName",
														"src": "5879:5:12",
														"type": ""
													}
												],
												"src": "5843:122:12"
											},
											{
												"body": {
													"nativeSrc": "6023:87:12",
													"nodeType": "YulBlock",
													"src": "6023:87:12",
													"statements": [
														{
															"nativeSrc": "6033:29:12",
															"nodeType": "YulAssignment",
															"src": "6033:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6055:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6055:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6042:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6042:12:12"
																},
																"nativeSrc": "6042:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6042:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6033:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6033:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6098:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6098:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "6071:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "6071:26:12"
																},
																"nativeSrc": "6071:33:12",
																"nodeType": "YulFunctionCall",
																"src": "6071:33:12"
															},
															"nativeSrc": "6071:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "6071:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5971:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6001:6:12",
														"nodeType": "YulTypedName",
														"src": "6001:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6009:3:12",
														"nodeType": "YulTypedName",
														"src": "6009:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6017:5:12",
														"nodeType": "YulTypedName",
														"src": "6017:5:12",
														"type": ""
													}
												],
												"src": "5971:139:12"
											},
											{
												"body": {
													"nativeSrc": "6182:263:12",
													"nodeType": "YulBlock",
													"src": "6182:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6228:83:12",
																"nodeType": "YulBlock",
																"src": "6228:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6230:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6230:77:12"
																			},
																			"nativeSrc": "6230:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6230:79:12"
																		},
																		"nativeSrc": "6230:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6230:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6203:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6203:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6212:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6212:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6199:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6199:3:12"
																		},
																		"nativeSrc": "6199:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6199:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6224:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6224:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6195:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6195:3:12"
																},
																"nativeSrc": "6195:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6195:32:12"
															},
															"nativeSrc": "6192:119:12",
															"nodeType": "YulIf",
															"src": "6192:119:12"
														},
														{
															"nativeSrc": "6321:117:12",
															"nodeType": "YulBlock",
															"src": "6321:117:12",
															"statements": [
																{
																	"nativeSrc": "6336:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6336:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6350:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6350:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6340:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6340:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6365:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6365:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6400:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6400:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6411:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6411:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6396:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6396:3:12"
																				},
																				"nativeSrc": "6396:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6396:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6420:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6420:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6375:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6375:20:12"
																		},
																		"nativeSrc": "6375:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6375:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6365:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6365:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "6116:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6152:9:12",
														"nodeType": "YulTypedName",
														"src": "6152:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6163:7:12",
														"nodeType": "YulTypedName",
														"src": "6163:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6175:6:12",
														"nodeType": "YulTypedName",
														"src": "6175:6:12",
														"type": ""
													}
												],
												"src": "6116:329:12"
											},
											{
												"body": {
													"nativeSrc": "6534:391:12",
													"nodeType": "YulBlock",
													"src": "6534:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6580:83:12",
																"nodeType": "YulBlock",
																"src": "6580:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6582:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6582:77:12"
																			},
																			"nativeSrc": "6582:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6582:79:12"
																		},
																		"nativeSrc": "6582:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6582:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6555:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6555:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6551:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6551:3:12"
																		},
																		"nativeSrc": "6551:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6551:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6576:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6576:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6547:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6547:3:12"
																},
																"nativeSrc": "6547:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6547:32:12"
															},
															"nativeSrc": "6544:119:12",
															"nodeType": "YulIf",
															"src": "6544:119:12"
														},
														{
															"nativeSrc": "6673:117:12",
															"nodeType": "YulBlock",
															"src": "6673:117:12",
															"statements": [
																{
																	"nativeSrc": "6688:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6688:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6702:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6702:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6692:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6692:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6717:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6717:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6752:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6752:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6763:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6763:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6748:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6748:3:12"
																				},
																				"nativeSrc": "6748:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6748:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6772:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6772:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6727:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6727:20:12"
																		},
																		"nativeSrc": "6727:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6717:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6717:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6800:118:12",
															"nodeType": "YulBlock",
															"src": "6800:118:12",
															"statements": [
																{
																	"nativeSrc": "6815:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6815:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6829:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6819:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6819:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6845:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6845:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6880:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6880:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6891:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6891:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6876:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6876:3:12"
																				},
																				"nativeSrc": "6876:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6876:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6900:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6900:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6855:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6855:20:12"
																		},
																		"nativeSrc": "6855:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6855:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6845:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6845:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6451:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6496:9:12",
														"nodeType": "YulTypedName",
														"src": "6496:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6507:7:12",
														"nodeType": "YulTypedName",
														"src": "6507:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6519:6:12",
														"nodeType": "YulTypedName",
														"src": "6519:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6527:6:12",
														"nodeType": "YulTypedName",
														"src": "6527:6:12",
														"type": ""
													}
												],
												"src": "6451:474:12"
											},
											{
												"body": {
													"nativeSrc": "6974:43:12",
													"nodeType": "YulBlock",
													"src": "6974:43:12",
													"statements": [
														{
															"nativeSrc": "6984:27:12",
															"nodeType": "YulAssignment",
															"src": "6984:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6999:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6999:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7006:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7006:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6995:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:12"
																},
																"nativeSrc": "6995:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6995:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6984:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6984:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6931:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6956:5:12",
														"nodeType": "YulTypedName",
														"src": "6956:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6966:7:12",
														"nodeType": "YulTypedName",
														"src": "6966:7:12",
														"type": ""
													}
												],
												"src": "6931:86:12"
											},
											{
												"body": {
													"nativeSrc": "7084:51:12",
													"nodeType": "YulBlock",
													"src": "7084:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7101:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7101:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7122:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7122:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7106:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "7106:15:12"
																		},
																		"nativeSrc": "7106:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7106:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7094:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:12"
																},
																"nativeSrc": "7094:35:12",
																"nodeType": "YulFunctionCall",
																"src": "7094:35:12"
															},
															"nativeSrc": "7094:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "7094:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7023:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7072:5:12",
														"nodeType": "YulTypedName",
														"src": "7072:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7079:3:12",
														"nodeType": "YulTypedName",
														"src": "7079:3:12",
														"type": ""
													}
												],
												"src": "7023:112:12"
											},
											{
												"body": {
													"nativeSrc": "7235:120:12",
													"nodeType": "YulBlock",
													"src": "7235:120:12",
													"statements": [
														{
															"nativeSrc": "7245:26:12",
															"nodeType": "YulAssignment",
															"src": "7245:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7257:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7257:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7268:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7268:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7253:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:12"
																},
																"nativeSrc": "7253:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7253:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7245:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7245:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7321:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7334:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7345:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7345:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7330:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:12"
																		},
																		"nativeSrc": "7330:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7281:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "7281:39:12"
																},
																"nativeSrc": "7281:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7281:67:12"
															},
															"nativeSrc": "7281:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "7281:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7141:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7207:9:12",
														"nodeType": "YulTypedName",
														"src": "7207:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7219:6:12",
														"nodeType": "YulTypedName",
														"src": "7219:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7230:4:12",
														"nodeType": "YulTypedName",
														"src": "7230:4:12",
														"type": ""
													}
												],
												"src": "7141:214:12"
											},
											{
												"body": {
													"nativeSrc": "7426:53:12",
													"nodeType": "YulBlock",
													"src": "7426:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7443:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7443:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7466:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7466:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7448:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "7448:17:12"
																		},
																		"nativeSrc": "7448:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7448:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7436:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:12"
																},
																"nativeSrc": "7436:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7436:37:12"
															},
															"nativeSrc": "7436:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "7436:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7361:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7414:5:12",
														"nodeType": "YulTypedName",
														"src": "7414:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7421:3:12",
														"nodeType": "YulTypedName",
														"src": "7421:3:12",
														"type": ""
													}
												],
												"src": "7361:118:12"
											},
											{
												"body": {
													"nativeSrc": "7583:124:12",
													"nodeType": "YulBlock",
													"src": "7583:124:12",
													"statements": [
														{
															"nativeSrc": "7593:26:12",
															"nodeType": "YulAssignment",
															"src": "7593:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7605:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7605:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7616:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7616:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7601:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7601:3:12"
																},
																"nativeSrc": "7601:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7601:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7593:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7593:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7673:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7673:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7686:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7686:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7697:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7697:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7682:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7682:3:12"
																		},
																		"nativeSrc": "7682:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7682:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7629:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7629:43:12"
																},
																"nativeSrc": "7629:71:12",
																"nodeType": "YulFunctionCall",
																"src": "7629:71:12"
															},
															"nativeSrc": "7629:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "7629:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7485:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7555:9:12",
														"nodeType": "YulTypedName",
														"src": "7555:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7567:6:12",
														"nodeType": "YulTypedName",
														"src": "7567:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7578:4:12",
														"nodeType": "YulTypedName",
														"src": "7578:4:12",
														"type": ""
													}
												],
												"src": "7485:222:12"
											},
											{
												"body": {
													"nativeSrc": "7796:391:12",
													"nodeType": "YulBlock",
													"src": "7796:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7842:83:12",
																"nodeType": "YulBlock",
																"src": "7842:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7844:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7844:77:12"
																			},
																			"nativeSrc": "7844:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7844:79:12"
																		},
																		"nativeSrc": "7844:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7844:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7817:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7817:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7826:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7826:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7813:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7813:3:12"
																		},
																		"nativeSrc": "7813:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7813:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7838:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7838:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7809:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7809:3:12"
																},
																"nativeSrc": "7809:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7809:32:12"
															},
															"nativeSrc": "7806:119:12",
															"nodeType": "YulIf",
															"src": "7806:119:12"
														},
														{
															"nativeSrc": "7935:117:12",
															"nodeType": "YulBlock",
															"src": "7935:117:12",
															"statements": [
																{
																	"nativeSrc": "7950:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7950:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7964:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7964:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7954:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7954:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7979:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7979:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8014:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8014:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8025:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8025:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8010:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8010:3:12"
																				},
																				"nativeSrc": "8010:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8010:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8034:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8034:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7989:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7989:20:12"
																		},
																		"nativeSrc": "7989:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7989:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7979:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7979:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8062:118:12",
															"nodeType": "YulBlock",
															"src": "8062:118:12",
															"statements": [
																{
																	"nativeSrc": "8077:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8077:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8091:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8091:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8081:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8081:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8107:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8107:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8142:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8142:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8153:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8153:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8138:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8138:3:12"
																				},
																				"nativeSrc": "8138:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8138:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8162:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8162:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8117:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8117:20:12"
																		},
																		"nativeSrc": "8117:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8117:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8107:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8107:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7713:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7758:9:12",
														"nodeType": "YulTypedName",
														"src": "7758:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7769:7:12",
														"nodeType": "YulTypedName",
														"src": "7769:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7781:6:12",
														"nodeType": "YulTypedName",
														"src": "7781:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7789:6:12",
														"nodeType": "YulTypedName",
														"src": "7789:6:12",
														"type": ""
													}
												],
												"src": "7713:474:12"
											},
											{
												"body": {
													"nativeSrc": "8221:152:12",
													"nodeType": "YulBlock",
													"src": "8221:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8238:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8238:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8241:77:12",
																		"nodeType": "YulLiteral",
																		"src": "8241:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8231:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8231:6:12"
																},
																"nativeSrc": "8231:88:12",
																"nodeType": "YulFunctionCall",
																"src": "8231:88:12"
															},
															"nativeSrc": "8231:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "8231:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8335:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8335:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8338:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8338:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8328:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8328:6:12"
																},
																"nativeSrc": "8328:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8328:15:12"
															},
															"nativeSrc": "8328:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8328:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8359:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8359:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8362:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8362:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8352:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8352:6:12"
																},
																"nativeSrc": "8352:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8352:15:12"
															},
															"nativeSrc": "8352:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8352:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8193:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8193:180:12"
											},
											{
												"body": {
													"nativeSrc": "8430:269:12",
													"nodeType": "YulBlock",
													"src": "8430:269:12",
													"statements": [
														{
															"nativeSrc": "8440:22:12",
															"nodeType": "YulAssignment",
															"src": "8440:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8454:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8454:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8460:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8460:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8450:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8450:3:12"
																},
																"nativeSrc": "8450:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8450:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8440:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8440:6:12"
																}
															]
														},
														{
															"nativeSrc": "8471:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8471:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8501:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8501:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8507:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8507:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8497:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8497:3:12"
																},
																"nativeSrc": "8497:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8497:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8475:18:12",
																	"nodeType": "YulTypedName",
																	"src": "8475:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8548:51:12",
																"nodeType": "YulBlock",
																"src": "8548:51:12",
																"statements": [
																	{
																		"nativeSrc": "8562:27:12",
																		"nodeType": "YulAssignment",
																		"src": "8562:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8576:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8576:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8584:4:12",
																					"nodeType": "YulLiteral",
																					"src": "8584:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8572:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8572:3:12"
																			},
																			"nativeSrc": "8572:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8572:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8562:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8562:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8528:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8528:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8521:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8521:6:12"
																},
																"nativeSrc": "8521:26:12",
																"nodeType": "YulFunctionCall",
																"src": "8521:26:12"
															},
															"nativeSrc": "8518:81:12",
															"nodeType": "YulIf",
															"src": "8518:81:12"
														},
														{
															"body": {
																"nativeSrc": "8651:42:12",
																"nodeType": "YulBlock",
																"src": "8651:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8665:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8665:16:12"
																			},
																			"nativeSrc": "8665:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8665:18:12"
																		},
																		"nativeSrc": "8665:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8665:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8615:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8615:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8638:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8638:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8646:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8646:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8635:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8635:2:12"
																		},
																		"nativeSrc": "8635:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8635:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8612:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8612:2:12"
																},
																"nativeSrc": "8612:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8612:38:12"
															},
															"nativeSrc": "8609:84:12",
															"nodeType": "YulIf",
															"src": "8609:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8379:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8414:4:12",
														"nodeType": "YulTypedName",
														"src": "8414:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8423:6:12",
														"nodeType": "YulTypedName",
														"src": "8423:6:12",
														"type": ""
													}
												],
												"src": "8379:320:12"
											},
											{
												"body": {
													"nativeSrc": "8811:74:12",
													"nodeType": "YulBlock",
													"src": "8811:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8833:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8833:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8841:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8841:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8829:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8829:3:12"
																		},
																		"nativeSrc": "8829:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8829:14:12"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c726561647920626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "8845:32:12",
																		"nodeType": "YulLiteral",
																		"src": "8845:32:12",
																		"type": "",
																		"value": "Account is already blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8822:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8822:6:12"
																},
																"nativeSrc": "8822:56:12",
																"nodeType": "YulFunctionCall",
																"src": "8822:56:12"
															},
															"nativeSrc": "8822:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "8822:56:12"
														}
													]
												},
												"name": "store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
												"nativeSrc": "8705:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8803:6:12",
														"nodeType": "YulTypedName",
														"src": "8803:6:12",
														"type": ""
													}
												],
												"src": "8705:180:12"
											},
											{
												"body": {
													"nativeSrc": "9037:220:12",
													"nodeType": "YulBlock",
													"src": "9037:220:12",
													"statements": [
														{
															"nativeSrc": "9047:74:12",
															"nodeType": "YulAssignment",
															"src": "9047:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9113:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9113:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9118:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9118:2:12",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9054:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9054:58:12"
																},
																"nativeSrc": "9054:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9054:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9047:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9047:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9219:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9219:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
																	"nativeSrc": "9130:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9130:88:12"
																},
																"nativeSrc": "9130:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9130:93:12"
															},
															"nativeSrc": "9130:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9130:93:12"
														},
														{
															"nativeSrc": "9232:19:12",
															"nodeType": "YulAssignment",
															"src": "9232:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9243:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9243:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9248:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9248:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9239:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9239:3:12"
																},
																"nativeSrc": "9239:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9239:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9232:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9232:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8891:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9025:3:12",
														"nodeType": "YulTypedName",
														"src": "9025:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9033:3:12",
														"nodeType": "YulTypedName",
														"src": "9033:3:12",
														"type": ""
													}
												],
												"src": "8891:366:12"
											},
											{
												"body": {
													"nativeSrc": "9434:248:12",
													"nodeType": "YulBlock",
													"src": "9434:248:12",
													"statements": [
														{
															"nativeSrc": "9444:26:12",
															"nodeType": "YulAssignment",
															"src": "9444:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9456:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9456:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9467:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9467:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9452:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9452:3:12"
																},
																"nativeSrc": "9452:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9452:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9444:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9444:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9487:3:12"
																		},
																		"nativeSrc": "9487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9487:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9510:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9510:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9516:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9516:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9506:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9506:3:12"
																		},
																		"nativeSrc": "9506:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9506:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9480:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9480:6:12"
																},
																"nativeSrc": "9480:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9480:47:12"
															},
															"nativeSrc": "9480:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9480:47:12"
														},
														{
															"nativeSrc": "9536:139:12",
															"nodeType": "YulAssignment",
															"src": "9536:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9670:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9670:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9544:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9544:124:12"
																},
																"nativeSrc": "9544:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9544:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9536:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9536:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9263:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9414:9:12",
														"nodeType": "YulTypedName",
														"src": "9414:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9429:4:12",
														"nodeType": "YulTypedName",
														"src": "9429:4:12",
														"type": ""
													}
												],
												"src": "9263:419:12"
											},
											{
												"body": {
													"nativeSrc": "9794:70:12",
													"nodeType": "YulBlock",
													"src": "9794:70:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9816:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9816:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9824:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9824:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9812:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9812:3:12"
																		},
																		"nativeSrc": "9812:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9812:14:12"
																	},
																	{
																		"hexValue": "4163636f756e74206973206e6f7420626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "9828:28:12",
																		"nodeType": "YulLiteral",
																		"src": "9828:28:12",
																		"type": "",
																		"value": "Account is not blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9805:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9805:6:12"
																},
																"nativeSrc": "9805:52:12",
																"nodeType": "YulFunctionCall",
																"src": "9805:52:12"
															},
															"nativeSrc": "9805:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "9805:52:12"
														}
													]
												},
												"name": "store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
												"nativeSrc": "9688:176:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9786:6:12",
														"nodeType": "YulTypedName",
														"src": "9786:6:12",
														"type": ""
													}
												],
												"src": "9688:176:12"
											},
											{
												"body": {
													"nativeSrc": "10016:220:12",
													"nodeType": "YulBlock",
													"src": "10016:220:12",
													"statements": [
														{
															"nativeSrc": "10026:74:12",
															"nodeType": "YulAssignment",
															"src": "10026:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10092:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10092:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10097:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10097:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10033:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10033:58:12"
																},
																"nativeSrc": "10033:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10033:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10026:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10026:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10198:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10198:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
																	"nativeSrc": "10109:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10109:88:12"
																},
																"nativeSrc": "10109:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10109:93:12"
															},
															"nativeSrc": "10109:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10109:93:12"
														},
														{
															"nativeSrc": "10211:19:12",
															"nodeType": "YulAssignment",
															"src": "10211:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10222:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10222:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10227:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10227:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10218:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10218:3:12"
																},
																"nativeSrc": "10218:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10218:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10211:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10211:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9870:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10004:3:12",
														"nodeType": "YulTypedName",
														"src": "10004:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10012:3:12",
														"nodeType": "YulTypedName",
														"src": "10012:3:12",
														"type": ""
													}
												],
												"src": "9870:366:12"
											},
											{
												"body": {
													"nativeSrc": "10413:248:12",
													"nodeType": "YulBlock",
													"src": "10413:248:12",
													"statements": [
														{
															"nativeSrc": "10423:26:12",
															"nodeType": "YulAssignment",
															"src": "10423:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10435:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10435:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10446:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10446:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10431:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10431:3:12"
																},
																"nativeSrc": "10431:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10431:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10423:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10423:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10470:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10470:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10481:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10481:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10466:3:12"
																		},
																		"nativeSrc": "10466:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10466:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10489:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10489:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10495:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10495:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10485:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10485:3:12"
																		},
																		"nativeSrc": "10485:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10485:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10459:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10459:6:12"
																},
																"nativeSrc": "10459:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10459:47:12"
															},
															"nativeSrc": "10459:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10459:47:12"
														},
														{
															"nativeSrc": "10515:139:12",
															"nodeType": "YulAssignment",
															"src": "10515:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10649:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10649:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10523:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10523:124:12"
																},
																"nativeSrc": "10523:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10523:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10515:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10515:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10242:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10393:9:12",
														"nodeType": "YulTypedName",
														"src": "10393:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10408:4:12",
														"nodeType": "YulTypedName",
														"src": "10408:4:12",
														"type": ""
													}
												],
												"src": "10242:419:12"
											},
											{
												"body": {
													"nativeSrc": "10773:65:12",
													"nodeType": "YulBlock",
													"src": "10773:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10795:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10795:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10803:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10803:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10791:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10791:3:12"
																		},
																		"nativeSrc": "10791:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10791:14:12"
																	},
																	{
																		"hexValue": "4163636f756e74206973206e6f742066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "10807:23:12",
																		"nodeType": "YulLiteral",
																		"src": "10807:23:12",
																		"type": "",
																		"value": "Account is not frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10784:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10784:6:12"
																},
																"nativeSrc": "10784:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10784:47:12"
															},
															"nativeSrc": "10784:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10784:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
												"nativeSrc": "10667:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10765:6:12",
														"nodeType": "YulTypedName",
														"src": "10765:6:12",
														"type": ""
													}
												],
												"src": "10667:171:12"
											},
											{
												"body": {
													"nativeSrc": "10990:220:12",
													"nodeType": "YulBlock",
													"src": "10990:220:12",
													"statements": [
														{
															"nativeSrc": "11000:74:12",
															"nodeType": "YulAssignment",
															"src": "11000:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11066:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11066:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11071:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11071:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11007:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11007:58:12"
																},
																"nativeSrc": "11007:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11007:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11000:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11000:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11172:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11172:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
																	"nativeSrc": "11083:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11083:88:12"
																},
																"nativeSrc": "11083:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11083:93:12"
															},
															"nativeSrc": "11083:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11083:93:12"
														},
														{
															"nativeSrc": "11185:19:12",
															"nodeType": "YulAssignment",
															"src": "11185:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11196:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11196:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11201:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11201:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11192:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11192:3:12"
																},
																"nativeSrc": "11192:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11192:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11185:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11185:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10844:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10978:3:12",
														"nodeType": "YulTypedName",
														"src": "10978:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10986:3:12",
														"nodeType": "YulTypedName",
														"src": "10986:3:12",
														"type": ""
													}
												],
												"src": "10844:366:12"
											},
											{
												"body": {
													"nativeSrc": "11387:248:12",
													"nodeType": "YulBlock",
													"src": "11387:248:12",
													"statements": [
														{
															"nativeSrc": "11397:26:12",
															"nodeType": "YulAssignment",
															"src": "11397:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11409:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11409:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11420:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11420:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11405:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11405:3:12"
																},
																"nativeSrc": "11405:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11405:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11397:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11397:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11444:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11444:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11455:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11455:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11440:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11440:3:12"
																		},
																		"nativeSrc": "11440:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11440:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11463:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11463:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11469:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11469:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11459:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:12"
																		},
																		"nativeSrc": "11459:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11459:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11433:6:12"
																},
																"nativeSrc": "11433:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11433:47:12"
															},
															"nativeSrc": "11433:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11433:47:12"
														},
														{
															"nativeSrc": "11489:139:12",
															"nodeType": "YulAssignment",
															"src": "11489:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11623:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11623:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11497:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11497:124:12"
																},
																"nativeSrc": "11497:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11497:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11489:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11489:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11216:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11367:9:12",
														"nodeType": "YulTypedName",
														"src": "11367:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11382:4:12",
														"nodeType": "YulTypedName",
														"src": "11382:4:12",
														"type": ""
													}
												],
												"src": "11216:419:12"
											},
											{
												"body": {
													"nativeSrc": "11747:68:12",
													"nodeType": "YulBlock",
													"src": "11747:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11769:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11769:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11777:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11777:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11765:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11765:3:12"
																		},
																		"nativeSrc": "11765:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11765:14:12"
																	},
																	{
																		"hexValue": "53656e646572206163636f756e742069732066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "11781:26:12",
																		"nodeType": "YulLiteral",
																		"src": "11781:26:12",
																		"type": "",
																		"value": "Sender account is frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11758:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11758:6:12"
																},
																"nativeSrc": "11758:50:12",
																"nodeType": "YulFunctionCall",
																"src": "11758:50:12"
															},
															"nativeSrc": "11758:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "11758:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6",
												"nativeSrc": "11641:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11739:6:12",
														"nodeType": "YulTypedName",
														"src": "11739:6:12",
														"type": ""
													}
												],
												"src": "11641:174:12"
											},
											{
												"body": {
													"nativeSrc": "11967:220:12",
													"nodeType": "YulBlock",
													"src": "11967:220:12",
													"statements": [
														{
															"nativeSrc": "11977:74:12",
															"nodeType": "YulAssignment",
															"src": "11977:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12043:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12043:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12048:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12048:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11984:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11984:58:12"
																},
																"nativeSrc": "11984:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11984:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11977:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11977:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12149:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12149:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6",
																	"nativeSrc": "12060:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12060:88:12"
																},
																"nativeSrc": "12060:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12060:93:12"
															},
															"nativeSrc": "12060:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12060:93:12"
														},
														{
															"nativeSrc": "12162:19:12",
															"nodeType": "YulAssignment",
															"src": "12162:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12173:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12173:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12178:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12178:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12169:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12169:3:12"
																},
																"nativeSrc": "12169:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12169:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12162:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12162:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11821:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11955:3:12",
														"nodeType": "YulTypedName",
														"src": "11955:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11963:3:12",
														"nodeType": "YulTypedName",
														"src": "11963:3:12",
														"type": ""
													}
												],
												"src": "11821:366:12"
											},
											{
												"body": {
													"nativeSrc": "12364:248:12",
													"nodeType": "YulBlock",
													"src": "12364:248:12",
													"statements": [
														{
															"nativeSrc": "12374:26:12",
															"nodeType": "YulAssignment",
															"src": "12374:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12386:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12386:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12397:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12397:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12382:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12382:3:12"
																},
																"nativeSrc": "12382:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12382:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12374:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12374:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12421:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12421:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12432:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12432:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12417:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12417:3:12"
																		},
																		"nativeSrc": "12417:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12417:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12440:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12440:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12446:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12446:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12436:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12436:3:12"
																		},
																		"nativeSrc": "12436:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12436:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12410:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12410:6:12"
																},
																"nativeSrc": "12410:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12410:47:12"
															},
															"nativeSrc": "12410:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12410:47:12"
														},
														{
															"nativeSrc": "12466:139:12",
															"nodeType": "YulAssignment",
															"src": "12466:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12600:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12600:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12474:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12474:124:12"
																},
																"nativeSrc": "12474:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12474:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12466:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12466:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12193:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12344:9:12",
														"nodeType": "YulTypedName",
														"src": "12344:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12359:4:12",
														"nodeType": "YulTypedName",
														"src": "12359:4:12",
														"type": ""
													}
												],
												"src": "12193:419:12"
											},
											{
												"body": {
													"nativeSrc": "12724:73:12",
													"nodeType": "YulBlock",
													"src": "12724:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12746:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12746:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12754:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12754:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12742:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12742:3:12"
																		},
																		"nativeSrc": "12742:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12742:14:12"
																	},
																	{
																		"hexValue": "53656e646572206163636f756e7420697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "12758:31:12",
																		"nodeType": "YulLiteral",
																		"src": "12758:31:12",
																		"type": "",
																		"value": "Sender account is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12735:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12735:6:12"
																},
																"nativeSrc": "12735:55:12",
																"nodeType": "YulFunctionCall",
																"src": "12735:55:12"
															},
															"nativeSrc": "12735:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "12735:55:12"
														}
													]
												},
												"name": "store_literal_in_memory_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c",
												"nativeSrc": "12618:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12716:6:12",
														"nodeType": "YulTypedName",
														"src": "12716:6:12",
														"type": ""
													}
												],
												"src": "12618:179:12"
											},
											{
												"body": {
													"nativeSrc": "12949:220:12",
													"nodeType": "YulBlock",
													"src": "12949:220:12",
													"statements": [
														{
															"nativeSrc": "12959:74:12",
															"nodeType": "YulAssignment",
															"src": "12959:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13025:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13025:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13030:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13030:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12966:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12966:58:12"
																},
																"nativeSrc": "12966:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12966:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12959:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12959:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13131:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13131:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c",
																	"nativeSrc": "13042:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13042:88:12"
																},
																"nativeSrc": "13042:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13042:93:12"
															},
															"nativeSrc": "13042:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13042:93:12"
														},
														{
															"nativeSrc": "13144:19:12",
															"nodeType": "YulAssignment",
															"src": "13144:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13155:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13155:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13160:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13160:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13151:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13151:3:12"
																},
																"nativeSrc": "13151:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13151:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13144:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13144:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12803:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12937:3:12",
														"nodeType": "YulTypedName",
														"src": "12937:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12945:3:12",
														"nodeType": "YulTypedName",
														"src": "12945:3:12",
														"type": ""
													}
												],
												"src": "12803:366:12"
											},
											{
												"body": {
													"nativeSrc": "13346:248:12",
													"nodeType": "YulBlock",
													"src": "13346:248:12",
													"statements": [
														{
															"nativeSrc": "13356:26:12",
															"nodeType": "YulAssignment",
															"src": "13356:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13368:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13368:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13379:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13379:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13364:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13364:3:12"
																},
																"nativeSrc": "13364:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13364:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13356:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13356:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13403:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13403:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13414:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13414:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13399:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13399:3:12"
																		},
																		"nativeSrc": "13399:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13399:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13422:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13422:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13428:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13428:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13418:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13418:3:12"
																		},
																		"nativeSrc": "13418:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13418:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13392:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13392:6:12"
																},
																"nativeSrc": "13392:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13392:47:12"
															},
															"nativeSrc": "13392:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13392:47:12"
														},
														{
															"nativeSrc": "13448:139:12",
															"nodeType": "YulAssignment",
															"src": "13448:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13582:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13582:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13456:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13456:124:12"
																},
																"nativeSrc": "13456:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13456:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13448:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13448:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13175:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13326:9:12",
														"nodeType": "YulTypedName",
														"src": "13326:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13341:4:12",
														"nodeType": "YulTypedName",
														"src": "13341:4:12",
														"type": ""
													}
												],
												"src": "13175:419:12"
											},
											{
												"body": {
													"nativeSrc": "13706:76:12",
													"nodeType": "YulBlock",
													"src": "13706:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13728:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13728:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13736:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13736:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13724:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13724:3:12"
																		},
																		"nativeSrc": "13724:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13724:14:12"
																	},
																	{
																		"hexValue": "526563697069656e74206163636f756e7420697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "13740:34:12",
																		"nodeType": "YulLiteral",
																		"src": "13740:34:12",
																		"type": "",
																		"value": "Recipient account is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13717:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13717:6:12"
																},
																"nativeSrc": "13717:58:12",
																"nodeType": "YulFunctionCall",
																"src": "13717:58:12"
															},
															"nativeSrc": "13717:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "13717:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab",
												"nativeSrc": "13600:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13698:6:12",
														"nodeType": "YulTypedName",
														"src": "13698:6:12",
														"type": ""
													}
												],
												"src": "13600:182:12"
											},
											{
												"body": {
													"nativeSrc": "13934:220:12",
													"nodeType": "YulBlock",
													"src": "13934:220:12",
													"statements": [
														{
															"nativeSrc": "13944:74:12",
															"nodeType": "YulAssignment",
															"src": "13944:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14010:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14010:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14015:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14015:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13951:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13951:58:12"
																},
																"nativeSrc": "13951:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13951:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13944:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13944:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14116:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14116:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab",
																	"nativeSrc": "14027:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14027:88:12"
																},
																"nativeSrc": "14027:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14027:93:12"
															},
															"nativeSrc": "14027:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14027:93:12"
														},
														{
															"nativeSrc": "14129:19:12",
															"nodeType": "YulAssignment",
															"src": "14129:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14140:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14140:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14145:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14145:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14136:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14136:3:12"
																},
																"nativeSrc": "14136:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14136:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14129:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14129:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13788:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13922:3:12",
														"nodeType": "YulTypedName",
														"src": "13922:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13930:3:12",
														"nodeType": "YulTypedName",
														"src": "13930:3:12",
														"type": ""
													}
												],
												"src": "13788:366:12"
											},
											{
												"body": {
													"nativeSrc": "14331:248:12",
													"nodeType": "YulBlock",
													"src": "14331:248:12",
													"statements": [
														{
															"nativeSrc": "14341:26:12",
															"nodeType": "YulAssignment",
															"src": "14341:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14353:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14353:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14364:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14364:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14349:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14349:3:12"
																},
																"nativeSrc": "14349:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14349:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14341:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14341:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14388:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14388:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14399:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14399:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14384:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14384:3:12"
																		},
																		"nativeSrc": "14384:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14384:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14407:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14407:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14413:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14413:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14403:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14403:3:12"
																		},
																		"nativeSrc": "14403:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14403:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14377:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14377:6:12"
																},
																"nativeSrc": "14377:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14377:47:12"
															},
															"nativeSrc": "14377:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14377:47:12"
														},
														{
															"nativeSrc": "14433:139:12",
															"nodeType": "YulAssignment",
															"src": "14433:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14567:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14567:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14441:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14441:124:12"
																},
																"nativeSrc": "14441:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14441:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14433:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14433:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14160:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14311:9:12",
														"nodeType": "YulTypedName",
														"src": "14311:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14326:4:12",
														"nodeType": "YulTypedName",
														"src": "14326:4:12",
														"type": ""
													}
												],
												"src": "14160:419:12"
											},
											{
												"body": {
													"nativeSrc": "14691:69:12",
													"nodeType": "YulBlock",
													"src": "14691:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14713:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14713:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14721:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14721:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14709:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14709:3:12"
																		},
																		"nativeSrc": "14709:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14709:14:12"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c72656164792066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "14725:27:12",
																		"nodeType": "YulLiteral",
																		"src": "14725:27:12",
																		"type": "",
																		"value": "Account is already frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14702:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14702:6:12"
																},
																"nativeSrc": "14702:51:12",
																"nodeType": "YulFunctionCall",
																"src": "14702:51:12"
															},
															"nativeSrc": "14702:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "14702:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
												"nativeSrc": "14585:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14683:6:12",
														"nodeType": "YulTypedName",
														"src": "14683:6:12",
														"type": ""
													}
												],
												"src": "14585:175:12"
											},
											{
												"body": {
													"nativeSrc": "14912:220:12",
													"nodeType": "YulBlock",
													"src": "14912:220:12",
													"statements": [
														{
															"nativeSrc": "14922:74:12",
															"nodeType": "YulAssignment",
															"src": "14922:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14988:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14988:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14993:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14993:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14929:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14929:58:12"
																},
																"nativeSrc": "14929:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14929:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14922:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15094:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15094:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
																	"nativeSrc": "15005:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15005:88:12"
																},
																"nativeSrc": "15005:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15005:93:12"
															},
															"nativeSrc": "15005:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15005:93:12"
														},
														{
															"nativeSrc": "15107:19:12",
															"nodeType": "YulAssignment",
															"src": "15107:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15118:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15118:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15123:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15123:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15114:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15114:3:12"
																},
																"nativeSrc": "15114:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15114:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15107:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15107:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14766:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14900:3:12",
														"nodeType": "YulTypedName",
														"src": "14900:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14908:3:12",
														"nodeType": "YulTypedName",
														"src": "14908:3:12",
														"type": ""
													}
												],
												"src": "14766:366:12"
											},
											{
												"body": {
													"nativeSrc": "15309:248:12",
													"nodeType": "YulBlock",
													"src": "15309:248:12",
													"statements": [
														{
															"nativeSrc": "15319:26:12",
															"nodeType": "YulAssignment",
															"src": "15319:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15331:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15331:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15342:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15342:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15327:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15327:3:12"
																},
																"nativeSrc": "15327:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15327:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15319:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15319:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15366:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15366:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15377:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15377:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15362:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15362:3:12"
																		},
																		"nativeSrc": "15362:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15362:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15385:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15385:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15391:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15391:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15381:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15381:3:12"
																		},
																		"nativeSrc": "15381:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15381:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15355:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15355:6:12"
																},
																"nativeSrc": "15355:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15355:47:12"
															},
															"nativeSrc": "15355:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15355:47:12"
														},
														{
															"nativeSrc": "15411:139:12",
															"nodeType": "YulAssignment",
															"src": "15411:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15545:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15545:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15419:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15419:124:12"
																},
																"nativeSrc": "15419:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15419:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15411:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15411:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15138:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15289:9:12",
														"nodeType": "YulTypedName",
														"src": "15289:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15304:4:12",
														"nodeType": "YulTypedName",
														"src": "15304:4:12",
														"type": ""
													}
												],
												"src": "15138:419:12"
											},
											{
												"body": {
													"nativeSrc": "15717:288:12",
													"nodeType": "YulBlock",
													"src": "15717:288:12",
													"statements": [
														{
															"nativeSrc": "15727:26:12",
															"nodeType": "YulAssignment",
															"src": "15727:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15739:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15739:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15750:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15750:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15735:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15735:3:12"
																},
																"nativeSrc": "15735:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15735:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15727:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15727:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15807:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15807:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15820:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15820:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15831:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15831:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15816:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15816:3:12"
																		},
																		"nativeSrc": "15816:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15816:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15763:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15763:43:12"
																},
																"nativeSrc": "15763:71:12",
																"nodeType": "YulFunctionCall",
																"src": "15763:71:12"
															},
															"nativeSrc": "15763:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "15763:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15888:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15888:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15901:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15901:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15912:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15912:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15897:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15897:3:12"
																		},
																		"nativeSrc": "15897:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15897:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15844:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15844:43:12"
																},
																"nativeSrc": "15844:72:12",
																"nodeType": "YulFunctionCall",
																"src": "15844:72:12"
															},
															"nativeSrc": "15844:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "15844:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15970:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15970:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15983:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15983:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15994:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15994:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15979:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15979:3:12"
																		},
																		"nativeSrc": "15979:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15979:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15926:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15926:43:12"
																},
																"nativeSrc": "15926:72:12",
																"nodeType": "YulFunctionCall",
																"src": "15926:72:12"
															},
															"nativeSrc": "15926:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "15926:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15563:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15673:9:12",
														"nodeType": "YulTypedName",
														"src": "15673:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15685:6:12",
														"nodeType": "YulTypedName",
														"src": "15685:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15693:6:12",
														"nodeType": "YulTypedName",
														"src": "15693:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15701:6:12",
														"nodeType": "YulTypedName",
														"src": "15701:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15712:4:12",
														"nodeType": "YulTypedName",
														"src": "15712:4:12",
														"type": ""
													}
												],
												"src": "15563:442:12"
											},
											{
												"body": {
													"nativeSrc": "16137:206:12",
													"nodeType": "YulBlock",
													"src": "16137:206:12",
													"statements": [
														{
															"nativeSrc": "16147:26:12",
															"nodeType": "YulAssignment",
															"src": "16147:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16159:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16159:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16170:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16170:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16155:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16155:3:12"
																},
																"nativeSrc": "16155:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16155:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16147:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16147:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16227:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16227:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16240:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16240:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16251:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16251:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16236:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16236:3:12"
																		},
																		"nativeSrc": "16236:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16236:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16183:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16183:43:12"
																},
																"nativeSrc": "16183:71:12",
																"nodeType": "YulFunctionCall",
																"src": "16183:71:12"
															},
															"nativeSrc": "16183:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "16183:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16308:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16308:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16321:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16321:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16332:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16332:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16317:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16317:3:12"
																		},
																		"nativeSrc": "16317:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16317:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16264:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16264:43:12"
																},
																"nativeSrc": "16264:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16264:72:12"
															},
															"nativeSrc": "16264:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16264:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "16011:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16101:9:12",
														"nodeType": "YulTypedName",
														"src": "16101:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16113:6:12",
														"nodeType": "YulTypedName",
														"src": "16113:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16121:6:12",
														"nodeType": "YulTypedName",
														"src": "16121:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16132:4:12",
														"nodeType": "YulTypedName",
														"src": "16132:4:12",
														"type": ""
													}
												],
												"src": "16011:332:12"
											},
											{
												"body": {
													"nativeSrc": "16377:152:12",
													"nodeType": "YulBlock",
													"src": "16377:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16394:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16394:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16397:77:12",
																		"nodeType": "YulLiteral",
																		"src": "16397:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16387:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16387:6:12"
																},
																"nativeSrc": "16387:88:12",
																"nodeType": "YulFunctionCall",
																"src": "16387:88:12"
															},
															"nativeSrc": "16387:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "16387:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16491:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16491:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16494:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16494:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16484:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16484:6:12"
																},
																"nativeSrc": "16484:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16484:15:12"
															},
															"nativeSrc": "16484:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16484:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16515:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16515:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16518:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16518:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16508:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16508:6:12"
																},
																"nativeSrc": "16508:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16508:15:12"
															},
															"nativeSrc": "16508:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16508:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "16349:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "16349:180:12"
											},
											{
												"body": {
													"nativeSrc": "16579:147:12",
													"nodeType": "YulBlock",
													"src": "16579:147:12",
													"statements": [
														{
															"nativeSrc": "16589:25:12",
															"nodeType": "YulAssignment",
															"src": "16589:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16612:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16612:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16594:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16594:17:12"
																},
																"nativeSrc": "16594:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16594:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16589:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "16589:1:12"
																}
															]
														},
														{
															"nativeSrc": "16623:25:12",
															"nodeType": "YulAssignment",
															"src": "16623:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16646:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16646:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16628:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16628:17:12"
																},
																"nativeSrc": "16628:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16628:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16623:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "16623:1:12"
																}
															]
														},
														{
															"nativeSrc": "16657:16:12",
															"nodeType": "YulAssignment",
															"src": "16657:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16668:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16668:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16671:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16671:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16664:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16664:3:12"
																},
																"nativeSrc": "16664:9:12",
																"nodeType": "YulFunctionCall",
																"src": "16664:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16657:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16657:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16697:22:12",
																"nodeType": "YulBlock",
																"src": "16697:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16699:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "16699:16:12"
																			},
																			"nativeSrc": "16699:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16699:18:12"
																		},
																		"nativeSrc": "16699:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16699:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16689:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16689:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16692:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16692:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16686:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16686:2:12"
																},
																"nativeSrc": "16686:10:12",
																"nodeType": "YulFunctionCall",
																"src": "16686:10:12"
															},
															"nativeSrc": "16683:36:12",
															"nodeType": "YulIf",
															"src": "16683:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16535:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16566:1:12",
														"nodeType": "YulTypedName",
														"src": "16566:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16569:1:12",
														"nodeType": "YulTypedName",
														"src": "16569:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16575:3:12",
														"nodeType": "YulTypedName",
														"src": "16575:3:12",
														"type": ""
													}
												],
												"src": "16535:191:12"
											},
											{
												"body": {
													"nativeSrc": "16777:149:12",
													"nodeType": "YulBlock",
													"src": "16777:149:12",
													"statements": [
														{
															"nativeSrc": "16787:25:12",
															"nodeType": "YulAssignment",
															"src": "16787:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16810:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16810:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16792:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16792:17:12"
																},
																"nativeSrc": "16792:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16792:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16787:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "16787:1:12"
																}
															]
														},
														{
															"nativeSrc": "16821:25:12",
															"nodeType": "YulAssignment",
															"src": "16821:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16844:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16844:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16826:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16826:17:12"
																},
																"nativeSrc": "16826:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16826:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16821:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "16821:1:12"
																}
															]
														},
														{
															"nativeSrc": "16855:17:12",
															"nodeType": "YulAssignment",
															"src": "16855:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16867:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16867:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16870:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16870:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16863:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16863:3:12"
																},
																"nativeSrc": "16863:9:12",
																"nodeType": "YulFunctionCall",
																"src": "16863:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16855:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16855:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16897:22:12",
																"nodeType": "YulBlock",
																"src": "16897:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16899:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "16899:16:12"
																			},
																			"nativeSrc": "16899:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16899:18:12"
																		},
																		"nativeSrc": "16899:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16899:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16888:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16888:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16894:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16894:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16885:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16885:2:12"
																},
																"nativeSrc": "16885:11:12",
																"nodeType": "YulFunctionCall",
																"src": "16885:11:12"
															},
															"nativeSrc": "16882:37:12",
															"nodeType": "YulIf",
															"src": "16882:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16732:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16763:1:12",
														"nodeType": "YulTypedName",
														"src": "16763:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16766:1:12",
														"nodeType": "YulTypedName",
														"src": "16766:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16772:4:12",
														"nodeType": "YulTypedName",
														"src": "16772:4:12",
														"type": ""
													}
												],
												"src": "16732:194:12"
											},
											{
												"body": {
													"nativeSrc": "16960:152:12",
													"nodeType": "YulBlock",
													"src": "16960:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16977:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16977:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16980:77:12",
																		"nodeType": "YulLiteral",
																		"src": "16980:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16970:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16970:6:12"
																},
																"nativeSrc": "16970:88:12",
																"nodeType": "YulFunctionCall",
																"src": "16970:88:12"
															},
															"nativeSrc": "16970:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "16970:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17074:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17074:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17077:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17077:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17067:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17067:6:12"
																},
																"nativeSrc": "17067:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17067:15:12"
															},
															"nativeSrc": "17067:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17067:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17098:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17098:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17101:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17101:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17091:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17091:6:12"
																},
																"nativeSrc": "17091:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17091:15:12"
															},
															"nativeSrc": "17091:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17091:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "16932:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "16932:180:12"
											},
											{
												"body": {
													"nativeSrc": "17146:152:12",
													"nodeType": "YulBlock",
													"src": "17146:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17163:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17163:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17166:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17166:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17156:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17156:6:12"
																},
																"nativeSrc": "17156:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17156:88:12"
															},
															"nativeSrc": "17156:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17156:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17260:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17260:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17263:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17263:4:12",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17253:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17253:6:12"
																},
																"nativeSrc": "17253:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17253:15:12"
															},
															"nativeSrc": "17253:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17253:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17284:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17284:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17287:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17287:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17277:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17277:6:12"
																},
																"nativeSrc": "17277:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17277:15:12"
															},
															"nativeSrc": "17277:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17277:15:12"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "17118:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17118:180:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is already blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is not blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is not frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender account is frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender account is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Recipient account is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is already frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610267575f3560e01c806370a082311161014f578063a9059cbb116100c1578063dd62ed3e11610085578063dd62ed3e14610707578063e583983614610737578063f26c159f14610767578063f2fde38b14610783578063f44637ba1461079f578063fe575a87146107bb57610267565b8063a9059cbb14610665578063c2134b2314610695578063d1c2de0a146106b1578063d5391393146106cd578063d547741f146106eb57610267565b8063939bcbc911610113578063939bcbc9146105b757806395d89b41146105d5578063974b368c146105f3578063983b2d561461060f5780639dc29fac1461062b578063a217fddf1461064757610267565b806370a0823114610513578063715018a614610543578063788649ea1461054d5780638da5cb5b1461056957806391d148541461058757610267565b8063282c51f3116101e857806336568abe116101ac57806336568abe1461046957806340c10f1914610485578063410b2424146104a157806344337ea1146104bf578063526606c9146104db578063537df3b6146104f757610267565b8063282c51f3146103d95780632acd2000146103f75780632f2ff15d146104135780633092afd51461042f578063313ce5671461044b57610267565b80630eff2afc1161022f5780630eff2afc1461032357806318160ddd1461033f5780631ec82cb81461035d57806323b872dd14610379578063248a9ca3146103a957610267565b806301ffc9a71461026b578063028468581461029b57806306a85f0f146102b757806306fdde03146102d5578063095ea7b3146102f3575b5f80fd5b610285600480360381019061028091906120c3565b6107eb565b6040516102929190612108565b60405180910390f35b6102b560048036038101906102b0919061217b565b610864565b005b6102bf610899565b6040516102cc91906121be565b60405180910390f35b6102dd6108bd565b6040516102ea9190612247565b60405180910390f35b61030d6004803603810190610308919061229a565b61094d565b60405161031a9190612108565b60405180910390f35b61033d6004803603810190610338919061217b565b61096f565b005b6103476109a4565b60405161035491906122e7565b60405180910390f35b61037760048036038101906103729190612300565b6109ad565b005b610393600480360381019061038e9190612300565b6109e8565b6040516103a09190612108565b60405180910390f35b6103c360048036038101906103be919061237a565b610a16565b6040516103d091906121be565b60405180910390f35b6103e1610a33565b6040516103ee91906121be565b60405180910390f35b610411600480360381019061040c919061217b565b610a57565b005b61042d600480360381019061042891906123a5565b610a8c565b005b6104496004803603810190610444919061217b565b610aae565b005b610453610ae3565b60405161046091906123fe565b60405180910390f35b610483600480360381019061047e91906123a5565b610aeb565b005b61049f600480360381019061049a919061229a565b610b66565b005b6104a9610b9f565b6040516104b691906121be565b60405180910390f35b6104d960048036038101906104d4919061217b565b610bc3565b005b6104f560048036038101906104f0919061217b565b610c5a565b005b610511600480360381019061050c919061217b565b610c8f565b005b61052d6004803603810190610528919061217b565b610d25565b60405161053a91906122e7565b60405180910390f35b61054b610d6a565b005b6105676004803603810190610562919061217b565b610d7d565b005b610571610e13565b60405161057e9190612426565b60405180910390f35b6105a1600480360381019061059c91906123a5565b610e3b565b6040516105ae9190612108565b60405180910390f35b6105bf610e9f565b6040516105cc91906121be565b60405180910390f35b6105dd610ec3565b6040516105ea9190612247565b60405180910390f35b61060d6004803603810190610608919061217b565b610f53565b005b6106296004803603810190610624919061217b565b610f88565b005b6106456004803603810190610640919061229a565b610fbd565b005b61064f610ff6565b60405161065c91906121be565b60405180910390f35b61067f600480360381019061067a919061229a565b610ffc565b60405161068c9190612108565b60405180910390f35b6106af60048036038101906106aa919061217b565b611117565b005b6106cb60048036038101906106c6919061217b565b61114c565b005b6106d5611181565b6040516106e291906121be565b60405180910390f35b610705600480360381019061070091906123a5565b6111a5565b005b610721600480360381019061071c919061243f565b6111c7565b60405161072e91906122e7565b60405180910390f35b610751600480360381019061074c919061217b565b611249565b60405161075e9190612108565b60405180910390f35b610781600480360381019061077c919061217b565b611265565b005b61079d6004803603810190610798919061217b565b6112fc565b005b6107b960048036038101906107b4919061217b565b611380565b005b6107d560048036038101906107d0919061217b565b6113b5565b6040516107e29190612108565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061085d575061085c826113d1565b5b9050919050565b61086c61143a565b6108967f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848826111a5565b50565b7f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d36381565b6060600380546108cc906124aa565b80601f01602080910402602001604051908101604052809291908181526020018280546108f8906124aa565b80156109435780601f1061091a57610100808354040283529160200191610943565b820191905f5260205f20905b81548152906001019060200180831161092657829003601f168201915b5050505050905090565b5f806109576114c1565b90506109648185856114c8565b600191505092915050565b61097761143a565b6109a17ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee82610a8c565b50565b5f600254905090565b7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e0666109d7816114da565b6109e28484846114ee565b50505050565b5f806109f26114c1565b90506109ff8582856115de565b610a0a8585856114ee565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b610a5f61143a565b610a897f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363826111a5565b50565b610a9582610a16565b610a9e816114da565b610aa88383611670565b50505050565b610ab661143a565b610ae07f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826111a5565b50565b5f6012905090565b610af36114c1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b57576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b61828261175a565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610b90816114da565b610b9a8383611844565b505050565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee81565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee610bed816114da565b610c018260096118c390919063ffffffff16565b15610c41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3890612524565b60405180910390fd5b610c558260096118f090919063ffffffff16565b505050565b610c6261143a565b610c8c7f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d36382610a8c565b50565b7ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee610cb9816114da565b610ccd8260096118c390919063ffffffff16565b610d0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d039061258c565b60405180910390fd5b610d2082600961191d90919063ffffffff16565b505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610d7261143a565b610d7b5f61194a565b565b7f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363610da7816114da565b610dbb8260076118c390919063ffffffff16565b610dfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df1906125f4565b60405180910390fd5b610e0e82600761191d90919063ffffffff16565b505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e06681565b606060048054610ed2906124aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610efe906124aa565b8015610f495780601f10610f2057610100808354040283529160200191610f49565b820191905f5260205f20905b815481529060010190602001808311610f2c57829003601f168201915b5050505050905090565b610f5b61143a565b610f857ff988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee826111a5565b50565b610f9061143a565b610fba7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682610a8c565b50565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848610fe7816114da565b610ff18383611a0d565b505050565b5f801b81565b5f806110066114c1565b905061101c8160076118c390919063ffffffff16565b1561105c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110539061265c565b60405180910390fd5b6110708160096118c390919063ffffffff16565b156110b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a7906126c4565b60405180910390fd5b6110c48460096118c390919063ffffffff16565b15611104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fb9061272c565b60405180910390fd5b61110e8484611a8c565b91505092915050565b61111f61143a565b6111497f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e06682610a8c565b50565b61115461143a565b61117e7f62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066826111a5565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6111ae82610a16565b6111b7816114da565b6111c1838361175a565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f61125e8260076118c390919063ffffffff16565b9050919050565b7f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d36361128f816114da565b6112a38260076118c390919063ffffffff16565b156112e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112da90612794565b60405180910390fd5b6112f78260076118f090919063ffffffff16565b505050565b61130461143a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611374575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161136b9190612426565b60405180910390fd5b61137d8161194a565b50565b61138861143a565b6113b27f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84882610a8c565b50565b5f6113ca8260096118c390919063ffffffff16565b9050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6114426114c1565b73ffffffffffffffffffffffffffffffffffffffff16611460610e13565b73ffffffffffffffffffffffffffffffffffffffff16146114bf576114836114c1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114b69190612426565b60405180910390fd5b565b5f33905090565b6114d58383836001611aae565b505050565b6114eb816114e66114c1565b611c7d565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361155e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115559190612426565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115ce575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115c59190612426565b60405180910390fd5b6115d9838383611cce565b505050565b5f6115e984846111c7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461166a578181101561165b578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611652939291906127b2565b60405180910390fd5b61166984848484035f611aae565b5b50505050565b5f61167b8383610e3b565b61175057600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506116ed6114c1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611754565b5f90505b92915050565b5f6117658383610e3b565b1561183a575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117d76114c1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061183e565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118b4575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118ab9190612426565b60405180910390fd5b6118bf5f8383611cce565b5050565b5f6118e8835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611ee7565b905092915050565b5f611915835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611f07565b905092915050565b5f611942835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611f6e565b905092915050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a7d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a749190612426565b60405180910390fd5b611a88825f83611cce565b5050565b5f80611a966114c1565b9050611aa38185856114ee565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b1e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611b159190612426565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b8e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611b859190612426565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611c77578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611c6e91906122e7565b60405180910390a35b50505050565b611c878282610e3b565b611cca5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611cc19291906127e7565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d1e578060025f828254611d12919061283b565b92505081905550611dec565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611da7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611d9e939291906127b2565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e33578060025f8282540392505081905550611e7d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611eda91906122e7565b60405180910390a3505050565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f611f128383611ee7565b611f6457825f0182908060018154018082558091505060019003905f5260205f20015f9091909190915055825f0180549050836001015f8481526020019081526020015f208190555060019050611f68565b5f90505b92915050565b5f80836001015f8481526020019081526020015f205490505f811461205f575f600182611f9b919061286e565b90505f6001865f0180549050611fb1919061286e565b9050808214612017575f865f018281548110611fd057611fcf6128a1565b5b905f5260205f200154905080875f018481548110611ff157611ff06128a1565b5b905f5260205f20018190555083876001015f8381526020019081526020015f2081905550505b855f0180548061202a576120296128ce565b5b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f905560019350505050612064565b5f9150505b92915050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120a28161206e565b81146120ac575f80fd5b50565b5f813590506120bd81612099565b92915050565b5f602082840312156120d8576120d761206a565b5b5f6120e5848285016120af565b91505092915050565b5f8115159050919050565b612102816120ee565b82525050565b5f60208201905061211b5f8301846120f9565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61214a82612121565b9050919050565b61215a81612140565b8114612164575f80fd5b50565b5f8135905061217581612151565b92915050565b5f602082840312156121905761218f61206a565b5b5f61219d84828501612167565b91505092915050565b5f819050919050565b6121b8816121a6565b82525050565b5f6020820190506121d15f8301846121af565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612219826121d7565b61222381856121e1565b93506122338185602086016121f1565b61223c816121ff565b840191505092915050565b5f6020820190508181035f83015261225f818461220f565b905092915050565b5f819050919050565b61227981612267565b8114612283575f80fd5b50565b5f8135905061229481612270565b92915050565b5f80604083850312156122b0576122af61206a565b5b5f6122bd85828601612167565b92505060206122ce85828601612286565b9150509250929050565b6122e181612267565b82525050565b5f6020820190506122fa5f8301846122d8565b92915050565b5f805f606084860312156123175761231661206a565b5b5f61232486828701612167565b935050602061233586828701612167565b925050604061234686828701612286565b9150509250925092565b612359816121a6565b8114612363575f80fd5b50565b5f8135905061237481612350565b92915050565b5f6020828403121561238f5761238e61206a565b5b5f61239c84828501612366565b91505092915050565b5f80604083850312156123bb576123ba61206a565b5b5f6123c885828601612366565b92505060206123d985828601612167565b9150509250929050565b5f60ff82169050919050565b6123f8816123e3565b82525050565b5f6020820190506124115f8301846123ef565b92915050565b61242081612140565b82525050565b5f6020820190506124395f830184612417565b92915050565b5f80604083850312156124555761245461206a565b5b5f61246285828601612167565b925050602061247385828601612167565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124c157607f821691505b6020821081036124d4576124d361247d565b5b50919050565b7f4163636f756e7420697320616c726561647920626c61636b6c697374656400005f82015250565b5f61250e601e836121e1565b9150612519826124da565b602082019050919050565b5f6020820190508181035f83015261253b81612502565b9050919050565b7f4163636f756e74206973206e6f7420626c61636b6c69737465640000000000005f82015250565b5f612576601a836121e1565b915061258182612542565b602082019050919050565b5f6020820190508181035f8301526125a38161256a565b9050919050565b7f4163636f756e74206973206e6f742066726f7a656e00000000000000000000005f82015250565b5f6125de6015836121e1565b91506125e9826125aa565b602082019050919050565b5f6020820190508181035f83015261260b816125d2565b9050919050565b7f53656e646572206163636f756e742069732066726f7a656e00000000000000005f82015250565b5f6126466018836121e1565b915061265182612612565b602082019050919050565b5f6020820190508181035f8301526126738161263a565b9050919050565b7f53656e646572206163636f756e7420697320626c61636b6c69737465640000005f82015250565b5f6126ae601d836121e1565b91506126b98261267a565b602082019050919050565b5f6020820190508181035f8301526126db816126a2565b9050919050565b7f526563697069656e74206163636f756e7420697320626c61636b6c69737465645f82015250565b5f6127166020836121e1565b9150612721826126e2565b602082019050919050565b5f6020820190508181035f8301526127438161270a565b9050919050565b7f4163636f756e7420697320616c72656164792066726f7a656e000000000000005f82015250565b5f61277e6019836121e1565b91506127898261274a565b602082019050919050565b5f6020820190508181035f8301526127ab81612772565b9050919050565b5f6060820190506127c55f830186612417565b6127d260208301856122d8565b6127df60408301846122d8565b949350505050565b5f6040820190506127fa5f830185612417565b61280760208301846121af565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61284582612267565b915061285083612267565b92508282019050808211156128685761286761280e565b5b92915050565b5f61287882612267565b915061288383612267565b925082820390508181111561289b5761289a61280e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea2646970667358221220f31b5309d1693d5e37ce7e37b580bbcb57512310b3baf8fac321aa345ecd65af64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x267 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x707 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xF26C159F EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0xF44637BA EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x7BB JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xC2134B23 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xD1C2DE0A EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6EB JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0x939BCBC9 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x939BCBC9 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0x974B368C EQ PUSH2 0x5F3 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x647 JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x788649EA EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x587 JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0x282C51F3 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x410B2424 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x526606C9 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x4F7 JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x2ACD2000 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x44B JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0xEFF2AFC GT PUSH2 0x22F JUMPI DUP1 PUSH4 0xEFF2AFC EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x1EC82CB8 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3A9 JUMPI PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x2846858 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x6A85F0F EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x347 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x2300 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x2300 JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x237A JUMP JUMPDEST PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xA57 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xAAE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x453 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A9 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xBC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xC5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x511 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xC8F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH2 0xD6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x571 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BF PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DD PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x629 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xF88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x645 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST PUSH2 0xFBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64F PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x1117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x114C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D5 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x705 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH2 0x11A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x243F JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x751 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x1249 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x781 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x1265 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x12FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x1380 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x85D JUMPI POP PUSH2 0x85C DUP3 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C PUSH2 0x143A JUMP JUMPDEST PUSH2 0x896 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0x11A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8CC SWAP1 PUSH2 0x24AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F8 SWAP1 PUSH2 0x24AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x943 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x91A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x943 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x926 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x957 PUSH2 0x14C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x964 DUP2 DUP6 DUP6 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x977 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x9A1 PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP3 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 PUSH2 0x9D7 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0x9E2 DUP5 DUP5 DUP5 PUSH2 0x14EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9F2 PUSH2 0x14C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x9FF DUP6 DUP3 DUP6 PUSH2 0x15DE JUMP JUMPDEST PUSH2 0xA0A DUP6 DUP6 DUP6 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0xA5F PUSH2 0x143A JUMP JUMPDEST PUSH2 0xA89 PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 DUP3 PUSH2 0x11A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA95 DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xAA8 DUP4 DUP4 PUSH2 0x1670 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAB6 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xAE0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x11A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAF3 PUSH2 0x14C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB61 DUP3 DUP3 PUSH2 0x175A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xB90 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xB9A DUP4 DUP4 PUSH2 0x1844 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP2 JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE PUSH2 0xBED DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xC01 DUP3 PUSH1 0x9 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xC41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC38 SWAP1 PUSH2 0x2524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC55 DUP3 PUSH1 0x9 PUSH2 0x18F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC62 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xC8C PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 DUP3 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE PUSH2 0xCB9 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xCCD DUP3 PUSH1 0x9 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD03 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD20 DUP3 PUSH1 0x9 PUSH2 0x191D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xD7B PUSH0 PUSH2 0x194A JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 PUSH2 0xDA7 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xDBB DUP3 PUSH1 0x7 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF1 SWAP1 PUSH2 0x25F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0E DUP3 PUSH1 0x7 PUSH2 0x191D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xED2 SWAP1 PUSH2 0x24AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEFE SWAP1 PUSH2 0x24AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF49 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF20 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF49 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF2C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF5B PUSH2 0x143A JUMP JUMPDEST PUSH2 0xF85 PUSH32 0xF988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE DUP3 PUSH2 0x11A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF90 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xFBA PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0xFE7 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xFF1 DUP4 DUP4 PUSH2 0x1A0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1006 PUSH2 0x14C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x101C DUP2 PUSH1 0x7 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1053 SWAP1 PUSH2 0x265C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1070 DUP2 PUSH1 0x9 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A7 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C4 DUP5 PUSH1 0x9 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1104 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FB SWAP1 PUSH2 0x272C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x110E DUP5 DUP5 PUSH2 0x1A8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x111F PUSH2 0x143A JUMP JUMPDEST PUSH2 0x1149 PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP3 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1154 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x117E PUSH32 0x62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066 DUP3 PUSH2 0x11A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x11AE DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x11B7 DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0x11C1 DUP4 DUP4 PUSH2 0x175A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x125E DUP3 PUSH1 0x7 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363 PUSH2 0x128F DUP2 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0x12A3 DUP3 PUSH1 0x7 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DA SWAP1 PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F7 DUP3 PUSH1 0x7 PUSH2 0x18F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1304 PUSH2 0x143A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1374 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x137D DUP2 PUSH2 0x194A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1388 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x13B2 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x13CA DUP3 PUSH1 0x9 PUSH2 0x18C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1442 PUSH2 0x14C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1460 PUSH2 0xE13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14BF JUMPI PUSH2 0x1483 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B6 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14D5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1AAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14EB DUP2 PUSH2 0x14E6 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x1C7D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x155E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1555 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C5 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D9 DUP4 DUP4 DUP4 PUSH2 0x1CCE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15E9 DUP5 DUP5 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x166A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x165B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1652 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1669 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x167B DUP4 DUP4 PUSH2 0xE3B JUMP JUMPDEST PUSH2 0x1750 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x16ED PUSH2 0x14C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1754 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1765 DUP4 DUP4 PUSH2 0xE3B JUMP JUMPDEST ISZERO PUSH2 0x183A JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x17D7 PUSH2 0x14C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x183E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AB SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18BF PUSH0 DUP4 DUP4 PUSH2 0x1CCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18E8 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1EE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1915 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1F07 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1942 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1F6E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A7D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A74 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A88 DUP3 PUSH0 DUP4 PUSH2 0x1CCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1A96 PUSH2 0x14C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AA3 DUP2 DUP6 DUP6 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B1E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B15 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B85 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1C77 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C6E SWAP2 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C87 DUP3 DUP3 PUSH2 0xE3B JUMP JUMPDEST PUSH2 0x1CCA JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC1 SWAP3 SWAP2 SWAP1 PUSH2 0x27E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D1E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D12 SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1DEC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1DA7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E33 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E7D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EDA SWAP2 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F12 DUP4 DUP4 PUSH2 0x1EE7 JUMP JUMPDEST PUSH2 0x1F64 JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1F68 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x205F JUMPI PUSH0 PUSH1 0x1 DUP3 PUSH2 0x1F9B SWAP2 SWAP1 PUSH2 0x286E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP7 PUSH0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1FB1 SWAP2 SWAP1 PUSH2 0x286E JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x2017 JUMPI PUSH0 DUP7 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1FD0 JUMPI PUSH2 0x1FCF PUSH2 0x28A1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FF1 JUMPI PUSH2 0x1FF0 PUSH2 0x28A1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH0 ADD DUP1 SLOAD DUP1 PUSH2 0x202A JUMPI PUSH2 0x2029 PUSH2 0x28CE JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2064 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A2 DUP2 PUSH2 0x206E JUMP JUMPDEST DUP2 EQ PUSH2 0x20AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20BD DUP2 PUSH2 0x2099 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D8 JUMPI PUSH2 0x20D7 PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20E5 DUP5 DUP3 DUP6 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2102 DUP2 PUSH2 0x20EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x211B PUSH0 DUP4 ADD DUP5 PUSH2 0x20F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x214A DUP3 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215A DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP2 EQ PUSH2 0x2164 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2175 DUP2 PUSH2 0x2151 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2190 JUMPI PUSH2 0x218F PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x219D DUP5 DUP3 DUP6 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B8 DUP2 PUSH2 0x21A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2219 DUP3 PUSH2 0x21D7 JUMP JUMPDEST PUSH2 0x2223 DUP2 DUP6 PUSH2 0x21E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2233 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21F1 JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH2 0x21FF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x225F DUP2 DUP5 PUSH2 0x220F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2279 DUP2 PUSH2 0x2267 JUMP JUMPDEST DUP2 EQ PUSH2 0x2283 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2294 DUP2 PUSH2 0x2270 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22B0 JUMPI PUSH2 0x22AF PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22BD DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22CE DUP6 DUP3 DUP7 ADD PUSH2 0x2286 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E1 DUP2 PUSH2 0x2267 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22FA PUSH0 DUP4 ADD DUP5 PUSH2 0x22D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2317 JUMPI PUSH2 0x2316 PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2324 DUP7 DUP3 DUP8 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2335 DUP7 DUP3 DUP8 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2346 DUP7 DUP3 DUP8 ADD PUSH2 0x2286 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2359 DUP2 PUSH2 0x21A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2363 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2374 DUP2 PUSH2 0x2350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x238F JUMPI PUSH2 0x238E PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239C DUP5 DUP3 DUP6 ADD PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23BB JUMPI PUSH2 0x23BA PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23C8 DUP6 DUP3 DUP7 ADD PUSH2 0x2366 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23D9 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F8 DUP2 PUSH2 0x23E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2411 PUSH0 DUP4 ADD DUP5 PUSH2 0x23EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2420 DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2439 PUSH0 DUP4 ADD DUP5 PUSH2 0x2417 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2455 JUMPI PUSH2 0x2454 PUSH2 0x206A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2462 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2473 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24D4 JUMPI PUSH2 0x24D3 PUSH2 0x247D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C726561647920626C61636B6C69737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x250E PUSH1 0x1E DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2519 DUP3 PUSH2 0x24DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x253B DUP2 PUSH2 0x2502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F7420626C61636B6C6973746564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2576 PUSH1 0x1A DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2581 DUP3 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25A3 DUP2 PUSH2 0x256A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F742066726F7A656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25DE PUSH1 0x15 DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x25E9 DUP3 PUSH2 0x25AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x260B DUP2 PUSH2 0x25D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206163636F756E742069732066726F7A656E0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2646 PUSH1 0x18 DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2651 DUP3 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2673 DUP2 PUSH2 0x263A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206163636F756E7420697320626C61636B6C6973746564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26AE PUSH1 0x1D DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP3 PUSH2 0x267A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26DB DUP2 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E74206163636F756E7420697320626C61636B6C6973746564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2716 PUSH1 0x20 DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2721 DUP3 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2743 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C72656164792066726F7A656E00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x277E PUSH1 0x19 DUP4 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2789 DUP3 PUSH2 0x274A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27AB DUP2 PUSH2 0x2772 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27C5 PUSH0 DUP4 ADD DUP7 PUSH2 0x2417 JUMP JUMPDEST PUSH2 0x27D2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x27DF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22D8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27FA PUSH0 DUP4 ADD DUP6 PUSH2 0x2417 JUMP JUMPDEST PUSH2 0x2807 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2845 DUP3 PUSH2 0x2267 JUMP JUMPDEST SWAP2 POP PUSH2 0x2850 DUP4 PUSH2 0x2267 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2868 JUMPI PUSH2 0x2867 PUSH2 0x280E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2878 DUP3 PUSH2 0x2267 JUMP JUMPDEST SWAP2 POP PUSH2 0x2883 DUP4 PUSH2 0x2267 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x289B JUMPI PUSH2 0x289A PUSH2 0x280E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SHL MSTORE8 MULMOD 0xD1 PUSH10 0x3D5E37CE7E37B580BBCB JUMPI MLOAD 0x23 LT 0xB3 0xBA 0xF8 STATICCALL 0xC3 0x21 0xAA CALLVALUE MCOPY 0xCD PUSH6 0xAF64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "314:6054:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5092:107:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;610:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5654:124:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3746:135:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5039:244:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;541:62:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5458:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4730:107:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1585:107:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;681:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2888:224;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5276:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3192:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;:::i;:::-;;2309:198:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;772:64:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5865:128:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4551:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1742:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3975:500:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6070:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6254:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;472:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2570:116:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2043:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4913:103:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3484:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;5092:107:11:-;1531:13:2;:11;:13::i;:::-;5159:32:11::1;579:24;5183:7;5159:10;:32::i;:::-;5092:107:::0;:::o;610:64::-;649:25;610:64;:::o;2074:89:4:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;5654:124:11:-;1531:13:2;:11;:13::i;:::-;5728:42:11::1;730:35;5762:7;5728:9;:42::i;:::-;5654:124:::0;:::o;3144:97:4:-;3196:7;3222:12;;3215:19;;3144:97;:::o;3746:135:11:-;811:25;2464:16:0;2475:4;2464:10;:16::i;:::-;3846:27:11::1;3856:4;3862:2;3866:6;3846:9;:27::i;:::-;3746:135:::0;;;;:::o;5039:244:4:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;541:62:11:-;579:24;541:62;:::o;5458:109::-;1531:13:2;:11;:13::i;:::-;5526:33:11::1;649:25;5551:7;5526:10;:33::i;:::-;5458:109:::0;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;4730:107:11:-;1531:13:2;:11;:13::i;:::-;4797:32:11::1;510:24;4821:7;4797:10;:32::i;:::-;4730:107:::0;:::o;3002:82:4:-;3051:5;3075:2;3068:9;;3002:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1585:107:11:-;510:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1667:17:11::1;1673:2;1677:6;1667:5;:17::i;:::-;1585:107:::0;;;:::o;681:84::-;730:35;681:84;:::o;2888:224::-;730:35;2464:16:0;2475:4;2464:10;:16::i;:::-;2989:37:11::1;3018:7;2989:19;:28;;:37;;;;:::i;:::-;2988:38;2980:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3072:32;3096:7;3072:19;:23;;:32;;;;:::i;:::-;;2888:224:::0;;:::o;5276:105::-;1531:13:2;:11;:13::i;:::-;5341:32:11::1;649:25;5365:7;5341:9;:32::i;:::-;5276:105:::0;:::o;3192:227::-;730:35;2464:16:0;2475:4;2464:10;:16::i;:::-;3297:37:11::1;3326:7;3297:19;:28;;:37;;;;:::i;:::-;3289:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3376:35;3403:7;3376:19;:26;;:35;;;;:::i;:::-;;3192:227:::0;;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2309:198:11:-;649:25;2464:16:0;2475:4;2464:10;:16::i;:::-;2400:32:11::1;2424:7;2400:14;:23;;:32;;;;:::i;:::-;2392:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2469:30;2491:7;2469:14;:21;;:30;;;;:::i;:::-;;2309:198:::0;;:::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;772:64:11:-;811:25;772:64;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;5865:128:11:-;1531:13:2;:11;:13::i;:::-;5942:43:11::1;730:35;5977:7;5942:10;:43::i;:::-;5865:128:::0;:::o;4551:103::-;1531:13:2;:11;:13::i;:::-;4615:31:11::1;510:24;4638:7;4615:9;:31::i;:::-;4551:103:::0;:::o;1742:111::-;579:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1826:19:11::1;1832:4;1838:6;1826:5;:19::i;:::-;1742:111:::0;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3975:500:11:-;4054:4;4071:13;4087:12;:10;:12::i;:::-;4071:28;;4119:30;4143:5;4119:14;:23;;:30;;;;:::i;:::-;4118:31;4110:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4198:35;4227:5;4198:19;:28;;:35;;;;:::i;:::-;4197:36;4189:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;4287:32;4316:2;4287:19;:28;;:32;;;;:::i;:::-;4286:33;4278:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;4376:26;4391:2;4395:6;4376:14;:26::i;:::-;4369:33;;;3975:500;;;;:::o;6070:107::-;1531:13:2;:11;:13::i;:::-;6137:32:11::1;811:25;6161:7;6137:9;:32::i;:::-;6070:107:::0;:::o;6254:111::-;1531:13:2;:11;:13::i;:::-;6324:33:11::1;811:25;6349:7;6324:10;:33::i;:::-;6254:111:::0;:::o;472:62::-;510:24;472:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2570:116:11:-;2626:4;2646:32;2670:7;2646:14;:23;;:32;;;;:::i;:::-;2639:39;;2570:116;;;:::o;2043:198::-;649:25;2464:16:0;2475:4;2464:10;:16::i;:::-;2133:32:11::1;2157:7;2133:14;:23;;:32;;;;:::i;:::-;2132:33;2124:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2206:27;2225:7;2206:14;:18;;:27;;;;:::i;:::-;;2043:198:::0;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;4913:103:11:-;1531:13:2;:11;:13::i;:::-;4977:31:11::1;579:24;5000:7;4977:9;:31::i;:::-;4913:103:::0;:::o;3484:126::-;3545:4;3565:37;3594:7;3565:19;:28;;:37;;;;:::i;:::-;3558:44;;3484:126;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;5656:300:4:-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8871:165:10:-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;:55::i;:::-;8967:62;;8871:165;;;;:::o;8316:150::-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;8634:156::-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;2912:187:2:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8247:206:4:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;6271:1107:4:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4264:129:10:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;2815:1368::-;2881:4;2991:16;3010:3;:14;;:21;3025:5;3010:21;;;;;;;;;;;;2991:40;;3058:1;3046:8;:13;3042:1135;;3413:18;3445:1;3434:8;:12;;;;:::i;:::-;3413:33;;3460:17;3501:1;3480:3;:11;;:18;;;;:22;;;;:::i;:::-;3460:42;;3535:9;3521:10;:23;3517:378;;3564:17;3584:3;:11;;3596:9;3584:22;;;;;;;;:::i;:::-;;;;;;;;;;3564:42;;3731:9;3705:3;:11;;3717:10;3705:23;;;;;;;;:::i;:::-;;;;;;;;;:35;;;;3872:8;3844:3;:14;;:25;3859:9;3844:25;;;;;;;;;;;:36;;;;3546:349;3517:378;3973:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4076:3;:14;;:21;4091:5;4076:21;;;;;;;;;;;4069:28;;;4119:4;4112:11;;;;;;;3042:1135;4161:5;4154:12;;;2815:1368;;;;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:77::-;2397:7;2426:5;2415:16;;2360:77;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2795:99::-;2847:6;2881:5;2875:12;2865:22;;2795:99;;;:::o;2900:169::-;2984:11;3018:6;3013:3;3006:19;3058:4;3053:3;3049:14;3034:29;;2900:169;;;;:::o;3075:139::-;3164:6;3159:3;3154;3148:23;3205:1;3196:6;3191:3;3187:16;3180:27;3075:139;;;:::o;3220:102::-;3261:6;3312:2;3308:7;3303:2;3296:5;3292:14;3288:28;3278:38;;3220:102;;;:::o;3328:377::-;3416:3;3444:39;3477:5;3444:39;:::i;:::-;3499:71;3563:6;3558:3;3499:71;:::i;:::-;3492:78;;3579:65;3637:6;3632:3;3625:4;3618:5;3614:16;3579:65;:::i;:::-;3669:29;3691:6;3669:29;:::i;:::-;3664:3;3660:39;3653:46;;3420:285;3328:377;;;;:::o;3711:313::-;3824:4;3862:2;3851:9;3847:18;3839:26;;3911:9;3905:4;3901:20;3897:1;3886:9;3882:17;3875:47;3939:78;4012:4;4003:6;3939:78;:::i;:::-;3931:86;;3711:313;;;;:::o;4030:77::-;4067:7;4096:5;4085:16;;4030:77;;;:::o;4113:122::-;4186:24;4204:5;4186:24;:::i;:::-;4179:5;4176:35;4166:63;;4225:1;4222;4215:12;4166:63;4113:122;:::o;4241:139::-;4287:5;4325:6;4312:20;4303:29;;4341:33;4368:5;4341:33;:::i;:::-;4241:139;;;;:::o;4386:474::-;4454:6;4462;4511:2;4499:9;4490:7;4486:23;4482:32;4479:119;;;4517:79;;:::i;:::-;4479:119;4637:1;4662:53;4707:7;4698:6;4687:9;4683:22;4662:53;:::i;:::-;4652:63;;4608:117;4764:2;4790:53;4835:7;4826:6;4815:9;4811:22;4790:53;:::i;:::-;4780:63;;4735:118;4386:474;;;;;:::o;4866:118::-;4953:24;4971:5;4953:24;:::i;:::-;4948:3;4941:37;4866:118;;:::o;4990:222::-;5083:4;5121:2;5110:9;5106:18;5098:26;;5134:71;5202:1;5191:9;5187:17;5178:6;5134:71;:::i;:::-;4990:222;;;;:::o;5218:619::-;5295:6;5303;5311;5360:2;5348:9;5339:7;5335:23;5331:32;5328:119;;;5366:79;;:::i;:::-;5328:119;5486:1;5511:53;5556:7;5547:6;5536:9;5532:22;5511:53;:::i;:::-;5501:63;;5457:117;5613:2;5639:53;5684:7;5675:6;5664:9;5660:22;5639:53;:::i;:::-;5629:63;;5584:118;5741:2;5767:53;5812:7;5803:6;5792:9;5788:22;5767:53;:::i;:::-;5757:63;;5712:118;5218:619;;;;;:::o;5843:122::-;5916:24;5934:5;5916:24;:::i;:::-;5909:5;5906:35;5896:63;;5955:1;5952;5945:12;5896:63;5843:122;:::o;5971:139::-;6017:5;6055:6;6042:20;6033:29;;6071:33;6098:5;6071:33;:::i;:::-;5971:139;;;;:::o;6116:329::-;6175:6;6224:2;6212:9;6203:7;6199:23;6195:32;6192:119;;;6230:79;;:::i;:::-;6192:119;6350:1;6375:53;6420:7;6411:6;6400:9;6396:22;6375:53;:::i;:::-;6365:63;;6321:117;6116:329;;;;:::o;6451:474::-;6519:6;6527;6576:2;6564:9;6555:7;6551:23;6547:32;6544:119;;;6582:79;;:::i;:::-;6544:119;6702:1;6727:53;6772:7;6763:6;6752:9;6748:22;6727:53;:::i;:::-;6717:63;;6673:117;6829:2;6855:53;6900:7;6891:6;6880:9;6876:22;6855:53;:::i;:::-;6845:63;;6800:118;6451:474;;;;;:::o;6931:86::-;6966:7;7006:4;6999:5;6995:16;6984:27;;6931:86;;;:::o;7023:112::-;7106:22;7122:5;7106:22;:::i;:::-;7101:3;7094:35;7023:112;;:::o;7141:214::-;7230:4;7268:2;7257:9;7253:18;7245:26;;7281:67;7345:1;7334:9;7330:17;7321:6;7281:67;:::i;:::-;7141:214;;;;:::o;7361:118::-;7448:24;7466:5;7448:24;:::i;:::-;7443:3;7436:37;7361:118;;:::o;7485:222::-;7578:4;7616:2;7605:9;7601:18;7593:26;;7629:71;7697:1;7686:9;7682:17;7673:6;7629:71;:::i;:::-;7485:222;;;;:::o;7713:474::-;7781:6;7789;7838:2;7826:9;7817:7;7813:23;7809:32;7806:119;;;7844:79;;:::i;:::-;7806:119;7964:1;7989:53;8034:7;8025:6;8014:9;8010:22;7989:53;:::i;:::-;7979:63;;7935:117;8091:2;8117:53;8162:7;8153:6;8142:9;8138:22;8117:53;:::i;:::-;8107:63;;8062:118;7713:474;;;;;:::o;8193:180::-;8241:77;8238:1;8231:88;8338:4;8335:1;8328:15;8362:4;8359:1;8352:15;8379:320;8423:6;8460:1;8454:4;8450:12;8440:22;;8507:1;8501:4;8497:12;8528:18;8518:81;;8584:4;8576:6;8572:17;8562:27;;8518:81;8646:2;8638:6;8635:14;8615:18;8612:38;8609:84;;8665:18;;:::i;:::-;8609:84;8430:269;8379:320;;;:::o;8705:180::-;8845:32;8841:1;8833:6;8829:14;8822:56;8705:180;:::o;8891:366::-;9033:3;9054:67;9118:2;9113:3;9054:67;:::i;:::-;9047:74;;9130:93;9219:3;9130:93;:::i;:::-;9248:2;9243:3;9239:12;9232:19;;8891:366;;;:::o;9263:419::-;9429:4;9467:2;9456:9;9452:18;9444:26;;9516:9;9510:4;9506:20;9502:1;9491:9;9487:17;9480:47;9544:131;9670:4;9544:131;:::i;:::-;9536:139;;9263:419;;;:::o;9688:176::-;9828:28;9824:1;9816:6;9812:14;9805:52;9688:176;:::o;9870:366::-;10012:3;10033:67;10097:2;10092:3;10033:67;:::i;:::-;10026:74;;10109:93;10198:3;10109:93;:::i;:::-;10227:2;10222:3;10218:12;10211:19;;9870:366;;;:::o;10242:419::-;10408:4;10446:2;10435:9;10431:18;10423:26;;10495:9;10489:4;10485:20;10481:1;10470:9;10466:17;10459:47;10523:131;10649:4;10523:131;:::i;:::-;10515:139;;10242:419;;;:::o;10667:171::-;10807:23;10803:1;10795:6;10791:14;10784:47;10667:171;:::o;10844:366::-;10986:3;11007:67;11071:2;11066:3;11007:67;:::i;:::-;11000:74;;11083:93;11172:3;11083:93;:::i;:::-;11201:2;11196:3;11192:12;11185:19;;10844:366;;;:::o;11216:419::-;11382:4;11420:2;11409:9;11405:18;11397:26;;11469:9;11463:4;11459:20;11455:1;11444:9;11440:17;11433:47;11497:131;11623:4;11497:131;:::i;:::-;11489:139;;11216:419;;;:::o;11641:174::-;11781:26;11777:1;11769:6;11765:14;11758:50;11641:174;:::o;11821:366::-;11963:3;11984:67;12048:2;12043:3;11984:67;:::i;:::-;11977:74;;12060:93;12149:3;12060:93;:::i;:::-;12178:2;12173:3;12169:12;12162:19;;11821:366;;;:::o;12193:419::-;12359:4;12397:2;12386:9;12382:18;12374:26;;12446:9;12440:4;12436:20;12432:1;12421:9;12417:17;12410:47;12474:131;12600:4;12474:131;:::i;:::-;12466:139;;12193:419;;;:::o;12618:179::-;12758:31;12754:1;12746:6;12742:14;12735:55;12618:179;:::o;12803:366::-;12945:3;12966:67;13030:2;13025:3;12966:67;:::i;:::-;12959:74;;13042:93;13131:3;13042:93;:::i;:::-;13160:2;13155:3;13151:12;13144:19;;12803:366;;;:::o;13175:419::-;13341:4;13379:2;13368:9;13364:18;13356:26;;13428:9;13422:4;13418:20;13414:1;13403:9;13399:17;13392:47;13456:131;13582:4;13456:131;:::i;:::-;13448:139;;13175:419;;;:::o;13600:182::-;13740:34;13736:1;13728:6;13724:14;13717:58;13600:182;:::o;13788:366::-;13930:3;13951:67;14015:2;14010:3;13951:67;:::i;:::-;13944:74;;14027:93;14116:3;14027:93;:::i;:::-;14145:2;14140:3;14136:12;14129:19;;13788:366;;;:::o;14160:419::-;14326:4;14364:2;14353:9;14349:18;14341:26;;14413:9;14407:4;14403:20;14399:1;14388:9;14384:17;14377:47;14441:131;14567:4;14441:131;:::i;:::-;14433:139;;14160:419;;;:::o;14585:175::-;14725:27;14721:1;14713:6;14709:14;14702:51;14585:175;:::o;14766:366::-;14908:3;14929:67;14993:2;14988:3;14929:67;:::i;:::-;14922:74;;15005:93;15094:3;15005:93;:::i;:::-;15123:2;15118:3;15114:12;15107:19;;14766:366;;;:::o;15138:419::-;15304:4;15342:2;15331:9;15327:18;15319:26;;15391:9;15385:4;15381:20;15377:1;15366:9;15362:17;15355:47;15419:131;15545:4;15419:131;:::i;:::-;15411:139;;15138:419;;;:::o;15563:442::-;15712:4;15750:2;15739:9;15735:18;15727:26;;15763:71;15831:1;15820:9;15816:17;15807:6;15763:71;:::i;:::-;15844:72;15912:2;15901:9;15897:18;15888:6;15844:72;:::i;:::-;15926;15994:2;15983:9;15979:18;15970:6;15926:72;:::i;:::-;15563:442;;;;;;:::o;16011:332::-;16132:4;16170:2;16159:9;16155:18;16147:26;;16183:71;16251:1;16240:9;16236:17;16227:6;16183:71;:::i;:::-;16264:72;16332:2;16321:9;16317:18;16308:6;16264:72;:::i;:::-;16011:332;;;;;:::o;16349:180::-;16397:77;16394:1;16387:88;16494:4;16491:1;16484:15;16518:4;16515:1;16508:15;16535:191;16575:3;16594:20;16612:1;16594:20;:::i;:::-;16589:25;;16628:20;16646:1;16628:20;:::i;:::-;16623:25;;16671:1;16668;16664:9;16657:16;;16692:3;16689:1;16686:10;16683:36;;;16699:18;;:::i;:::-;16683:36;16535:191;;;;:::o;16732:194::-;16772:4;16792:20;16810:1;16792:20;:::i;:::-;16787:25;;16826:20;16844:1;16826:20;:::i;:::-;16821:25;;16870:1;16867;16863:9;16855:17;;16894:1;16888:4;16885:11;16882:37;;;16899:18;;:::i;:::-;16882:37;16732:194;;;;:::o;16932:180::-;16980:77;16977:1;16970:88;17077:4;17074:1;17067:15;17101:4;17098:1;17091:15;17118:180;17166:77;17163:1;17156:88;17263:4;17260:1;17253:15;17287:4;17284:1;17277:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2109000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BLACKLIST_MANAGER_ROLE()": "414",
								"BURNER_ROLE()": "371",
								"DEFAULT_ADMIN_ROLE()": "485",
								"FREEZER_ROLE()": "416",
								"MINTER_ROLE()": "436",
								"RECOVER_ROLE()": "370",
								"addBlacklistManager(address)": "infinite",
								"addBurner(address)": "infinite",
								"addFreezer(address)": "infinite",
								"addMinter(address)": "infinite",
								"addRecoverer(address)": "infinite",
								"addToBlacklist(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2875",
								"burn(address,uint256)": "infinite",
								"decimals()": "472",
								"freezeAccount(address)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3256",
								"isBlacklisted(address)": "infinite",
								"isFrozen(address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2627",
								"recover(address,address,uint256)": "infinite",
								"removeBlacklistManager(address)": "infinite",
								"removeBurner(address)": "infinite",
								"removeFreezer(address)": "infinite",
								"removeFromBlacklist(address)": "infinite",
								"removeMinter(address)": "infinite",
								"removeRecoverer(address)": "infinite",
								"renounceOwnership()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreezeAccount(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 314,
									"end": 6368,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1131,
									"end": 1532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1255,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1213,
									"end": 1217,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1219,
									"end": 1225,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1315,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1284,
									"end": 1302,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1284,
									"end": 1302,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1314,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1273,
									"end": 1283,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1273,
									"end": 1283,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1273,
									"end": 1283,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1273,
									"end": 1315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1273,
									"end": 1315,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1273,
									"end": 1315,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1273,
									"end": 1315,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1273,
									"end": 1315,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1273,
									"end": 1315,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1350,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1332,
									"end": 1342,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1344,
									"end": 1349,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1331,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1326,
									"end": 1331,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1326,
									"end": 1331,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1350,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1326,
									"end": 1350,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1350,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1350,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1326,
									"end": 1350,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1361,
									"end": 1382,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1371,
									"end": 1381,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1361,
									"end": 1370,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1361,
									"end": 1370,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1361,
									"end": 1370,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1361,
									"end": 1382,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1361,
									"end": 1382,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1361,
									"end": 1382,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1361,
									"end": 1382,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1361,
									"end": 1382,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1393,
									"end": 1414,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1403,
									"end": 1413,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1393,
									"end": 1402,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1393,
									"end": 1402,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1393,
									"end": 1402,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1393,
									"end": 1414,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1393,
									"end": 1414,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1393,
									"end": 1414,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1393,
									"end": 1414,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1393,
									"end": 1414,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1425,
									"end": 1447,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1436,
									"end": 1446,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1425,
									"end": 1435,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1425,
									"end": 1435,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1425,
									"end": 1435,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1425,
									"end": 1447,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1425,
									"end": 1447,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1425,
									"end": 1447,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1425,
									"end": 1447,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1425,
									"end": 1447,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1478,
									"end": 1488,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1458,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1458,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1458,
									"end": 1477,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1458,
									"end": 1489,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1524,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1513,
									"end": 1523,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1512,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1500,
									"end": 1512,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1500,
									"end": 1512,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1524,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1500,
									"end": 1524,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1524,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1524,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1500,
									"end": 1524,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1532,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4551,
									"end": 4654,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 4551,
									"end": 4654,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4615,
									"end": 4646,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 510,
									"end": 534,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 4638,
									"end": 4645,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4615,
									"end": 4624,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 4615,
									"end": 4624,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4615,
									"end": 4624,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 4615,
									"end": 4646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4615,
									"end": 4646,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 4615,
									"end": 4646,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4615,
									"end": 4646,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 4615,
									"end": 4646,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4551,
									"end": 4654,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4551,
									"end": 4654,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4913,
									"end": 5016,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 4913,
									"end": 5016,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4977,
									"end": 5008,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 579,
									"end": 603,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
								},
								{
									"begin": 5000,
									"end": 5007,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4977,
									"end": 4986,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 4977,
									"end": 4986,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4977,
									"end": 4986,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 4977,
									"end": 5008,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4977,
									"end": 5008,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 4977,
									"end": 5008,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4977,
									"end": 5008,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 4977,
									"end": 5008,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4913,
									"end": 5016,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4913,
									"end": 5016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5276,
									"end": 5381,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 5276,
									"end": 5381,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5341,
									"end": 5373,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 649,
									"end": 674,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363"
								},
								{
									"begin": 5365,
									"end": 5372,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5341,
									"end": 5350,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 5341,
									"end": 5350,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5341,
									"end": 5350,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5341,
									"end": 5373,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5341,
									"end": 5373,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 5341,
									"end": 5373,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5341,
									"end": 5373,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 5341,
									"end": 5373,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5276,
									"end": 5381,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5276,
									"end": 5381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5654,
									"end": 5778,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 5654,
									"end": 5778,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5728,
									"end": 5770,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 730,
									"end": 765,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
								},
								{
									"begin": 5762,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5728,
									"end": 5737,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 5728,
									"end": 5737,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5728,
									"end": 5737,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5728,
									"end": 5770,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5728,
									"end": 5770,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 5728,
									"end": 5770,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5728,
									"end": 5770,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 5728,
									"end": 5770,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5654,
									"end": 5778,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5654,
									"end": 5778,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6070,
									"end": 6177,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 6070,
									"end": 6177,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6169,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 811,
									"end": 836,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066"
								},
								{
									"begin": 6161,
									"end": 6168,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6137,
									"end": 6146,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 6137,
									"end": 6146,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6137,
									"end": 6146,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 6137,
									"end": 6169,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6137,
									"end": 6169,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 6137,
									"end": 6169,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6137,
									"end": 6169,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 6137,
									"end": 6169,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6070,
									"end": 6177,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6070,
									"end": 6177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1866,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1855,
									"end": 1862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "tag",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1928,
									"end": 1940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "tag",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 2,
									"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1901,
									"end": 1941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "tag",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "89"
								},
								{
									"begin": 4313,
									"end": 4317,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4300,
									"end": 4312,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "90"
								},
								{
									"begin": 4300,
									"end": 4312,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4300,
									"end": 4312,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4300,
									"end": 4318,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "tag",
									"source": 0,
									"value": "89"
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "92"
								},
								{
									"begin": 2475,
									"end": 2479,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "93"
								},
								{
									"begin": 2464,
									"end": 2474,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2464,
									"end": 2474,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "tag",
									"source": 0,
									"value": "92"
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "95"
								},
								{
									"begin": 4341,
									"end": 4345,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4347,
									"end": 4354,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4330,
									"end": 4340,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 4330,
									"end": 4340,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4330,
									"end": 4340,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4330,
									"end": 4355,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "95"
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4226,
									"end": 4362,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "tag",
									"source": 0,
									"value": "90"
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3875,
									"end": 3882,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3907,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3912,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3302,
									"name": "tag",
									"source": 0,
									"value": "93"
								},
								{
									"begin": 3199,
									"end": 3302,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "99"
								},
								{
									"begin": 3276,
									"end": 3280,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3282,
									"end": 3292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 3282,
									"end": 3292,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3282,
									"end": 3292,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3282,
									"end": 3294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "tag",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "101"
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3265,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "tag",
									"source": 0,
									"value": "99"
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3302,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "tag",
									"source": 0,
									"value": "101"
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "103"
								},
								{
									"begin": 3528,
									"end": 3532,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3534,
									"end": 3541,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3520,
									"end": 3542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "tag",
									"source": 0,
									"value": "103"
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "104"
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3598,
									"end": 3605,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3607,
									"end": 3611,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 0,
									"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "105"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "106"
								},
								{
									"begin": 3565,
									"end": 3612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "tag",
									"source": 0,
									"value": "105"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "tag",
									"source": 0,
									"value": "104"
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3432,
									"end": 3629,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "161"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "161"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "164"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "165"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "165"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "164"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "166"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "166"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 12
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "175"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 12,
									"value": "175"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "180"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 12,
									"value": "180"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3038,
									"end": 3044,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3054,
									"end": 3060,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3103,
									"end": 3105,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3091,
									"end": 3100,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3082,
									"end": 3089,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3078,
									"end": 3101,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3106,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "185"
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "186"
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 3109,
									"end": 3188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "tag",
									"source": 12,
									"value": "186"
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "tag",
									"source": 12,
									"value": "185"
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3250,
									"end": 3251,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3239,
									"end": 3248,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3235,
									"end": 3252,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3229,
									"end": 3253,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3280,
									"end": 3298,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3272,
									"end": 3278,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3269,
									"end": 3299,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "188"
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3302,
									"end": 3381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "tag",
									"source": 12,
									"value": "188"
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "tag",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 3473,
									"end": 3480,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3464,
									"end": 3470,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3453,
									"end": 3462,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3449,
									"end": 3471,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 3407,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "tag",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3397,
									"end": 3481,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3397,
									"end": 3481,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3200,
									"end": 3491,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3553,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3540,
									"end": 3549,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3554,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3530,
									"end": 3555,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3582,
									"end": 3600,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3574,
									"end": 3580,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3601,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "190"
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3604,
									"end": 3683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "tag",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "tag",
									"source": 12,
									"value": "190"
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 3775,
									"end": 3782,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3766,
									"end": 3772,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3764,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3751,
									"end": 3773,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 3709,
									"end": 3783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "tag",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3699,
									"end": 3783,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3699,
									"end": 3783,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3501,
									"end": 3793,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3832,
									"end": 3834,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "193"
								},
								{
									"begin": 3914,
									"end": 3921,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3905,
									"end": 3911,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3894,
									"end": 3903,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3890,
									"end": 3912,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 3858,
									"end": 3922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "tag",
									"source": 12,
									"value": "193"
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3848,
									"end": 3922,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3848,
									"end": 3922,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3932,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4031,
									"end": 4036,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4025,
									"end": 4037,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 4044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4050,
									"end": 4230,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 4050,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4098,
									"end": 4175,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4095,
									"end": 4096,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4088,
									"end": 4176,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4195,
									"end": 4199,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 4192,
									"end": 4193,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4185,
									"end": 4200,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4219,
									"end": 4223,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4216,
									"end": 4217,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4209,
									"end": 4224,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4280,
									"end": 4286,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4317,
									"end": 4318,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4311,
									"end": 4315,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4307,
									"end": 4319,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4319,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4319,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4364,
									"end": 4365,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4358,
									"end": 4362,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4354,
									"end": 4366,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4385,
									"end": 4403,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4441,
									"end": 4445,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4433,
									"end": 4439,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4429,
									"end": 4446,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4419,
									"end": 4446,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4419,
									"end": 4446,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "tag",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4503,
									"end": 4505,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4495,
									"end": 4501,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4492,
									"end": 4506,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4472,
									"end": 4490,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4469,
									"end": 4507,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 4522,
									"end": 4540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "tag",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "tag",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4287,
									"end": 4556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4236,
									"end": 4556,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4611,
									"end": 4615,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4634,
									"end": 4637,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4626,
									"end": 4637,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4626,
									"end": 4637,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4657,
									"end": 4660,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4655,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4647,
									"end": 4661,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4691,
									"end": 4695,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4688,
									"end": 4689,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4678,
									"end": 4696,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4670,
									"end": 4696,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4670,
									"end": 4696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4562,
									"end": 4703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4746,
									"end": 4752,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4793,
									"end": 4795,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4788,
									"end": 4790,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4781,
									"end": 4786,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4777,
									"end": 4791,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4773,
									"end": 4796,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4763,
									"end": 4796,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4763,
									"end": 4796,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4709,
									"end": 4802,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4852,
									"end": 4860,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4902,
									"end": 4907,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4896,
									"end": 4900,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4892,
									"end": 4908,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4871,
									"end": 4908,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4871,
									"end": 4908,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4808,
									"end": 4915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4990,
									"end": 4996,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5040,
									"end": 5041,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 5038,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5024,
									"end": 5042,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 5093,
									"end": 5159,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5082,
									"end": 5091,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 5063,
									"end": 5160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "tag",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 5211,
									"end": 5219,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5200,
									"end": 5209,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 5181,
									"end": 5220,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "tag",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5169,
									"end": 5220,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 5169,
									"end": 5220,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5253,
									"end": 5257,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5249,
									"end": 5258,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5242,
									"end": 5247,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5238,
									"end": 5259,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5259,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5259,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5302,
									"end": 5306,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5300,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5288,
									"end": 5307,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5281,
									"end": 5286,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5278,
									"end": 5308,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 5268,
									"end": 5308,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5268,
									"end": 5308,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4997,
									"end": 5314,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4997,
									"end": 5314,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4921,
									"end": 5314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5348,
									"end": 5351,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5369,
									"end": 5374,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5362,
									"end": 5374,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5362,
									"end": 5374,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5320,
									"end": 5380,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5436,
									"end": 5445,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "209"
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 5514,
									"end": 5519,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 5496,
									"end": 5520,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "tag",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 5487,
									"end": 5521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "tag",
									"source": 12,
									"value": "209"
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 5469,
									"end": 5522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "tag",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5456,
									"end": 5522,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5456,
									"end": 5522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5386,
									"end": 5528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5577,
									"end": 5580,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5598,
									"end": 5603,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5591,
									"end": 5603,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5591,
									"end": 5603,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5534,
									"end": 5609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "213"
								},
								{
									"begin": 5756,
									"end": 5763,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 5725,
									"end": 5764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "tag",
									"source": 12,
									"value": "213"
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "215"
								},
								{
									"begin": 5859,
									"end": 5875,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 5835,
									"end": 5876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "tag",
									"source": 12,
									"value": "215"
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5827,
									"end": 5833,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5820,
									"end": 5824,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5814,
									"end": 5825,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 5786,
									"end": 5877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "tag",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5780,
									"end": 5784,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5773,
									"end": 5878,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5691,
									"end": 5884,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5615,
									"end": 5884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5935,
									"end": 5938,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5890,
									"end": 5963,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "218"
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 6046,
									"end": 6078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "tag",
									"source": 12,
									"value": "218"
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 6145,
									"end": 6151,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6137,
									"end": 6143,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6131,
									"end": 6135,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 6087,
									"end": 6152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "tag",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6022,
									"end": 6158,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "tag",
									"source": 12,
									"value": "221"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6241,
									"end": 6244,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6234,
									"end": 6239,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6231,
									"end": 6245,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "223"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "224"
								},
								{
									"begin": 6332,
									"end": 6333,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6325,
									"end": 6330,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 6295,
									"end": 6334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "tag",
									"source": 12,
									"value": "224"
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6268,
									"end": 6269,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6261,
									"end": 6266,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6257,
									"end": 6270,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6248,
									"end": 6270,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6248,
									"end": 6270,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "221"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "tag",
									"source": 12,
									"value": "223"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6164,
									"end": 6350,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6457,
									"end": 6459,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6452,
									"end": 6455,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6449,
									"end": 6460,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "227"
								},
								{
									"begin": 6523,
									"end": 6528,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6491,
									"end": 6529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "tag",
									"source": 12,
									"value": "227"
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "228"
								},
								{
									"begin": 6593,
									"end": 6603,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6575,
									"end": 6604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "tag",
									"source": 12,
									"value": "228"
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6565,
									"end": 6573,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6561,
									"end": 6605,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6746,
									"end": 6756,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "229"
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6779,
									"end": 6787,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6764,
									"end": 6787,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6764,
									"end": 6787,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "tag",
									"source": 12,
									"value": "229"
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "230"
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "231"
								},
								{
									"begin": 6876,
									"end": 6879,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6858,
									"end": 6880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "tag",
									"source": 12,
									"value": "231"
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6848,
									"end": 6856,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6844,
									"end": 6881,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6831,
									"end": 6842,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 6802,
									"end": 6882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "tag",
									"source": 12,
									"value": "230"
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6461,
									"end": 6892,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6461,
									"end": 6892,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "tag",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6356,
									"end": 6899,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6959,
									"end": 6967,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7009,
									"end": 7014,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7003,
									"end": 7007,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6999,
									"end": 7015,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6978,
									"end": 7015,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6978,
									"end": 7015,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6905,
									"end": 7022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7072,
									"end": 7078,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "234"
								},
								{
									"begin": 7153,
									"end": 7154,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7149,
									"end": 7155,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7141,
									"end": 7146,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7134,
									"end": 7147,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7105,
									"end": 7156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "tag",
									"source": 12,
									"value": "234"
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7101,
									"end": 7157,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7190,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7180,
									"end": 7184,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 7191,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7166,
									"end": 7191,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7166,
									"end": 7191,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7079,
									"end": 7197,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7028,
									"end": 7197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7278,
									"end": 7282,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "236"
								},
								{
									"begin": 7449,
									"end": 7452,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7443,
									"end": 7447,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 7424,
									"end": 7453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "tag",
									"source": 12,
									"value": "236"
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7416,
									"end": 7453,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7416,
									"end": 7453,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7486,
									"end": 7489,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7483,
									"end": 7484,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7479,
									"end": 7490,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7473,
									"end": 7477,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7470,
									"end": 7491,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7462,
									"end": 7491,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7462,
									"end": 7491,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7202,
									"end": 7497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "238"
								},
								{
									"begin": 7652,
									"end": 7655,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 7619,
									"end": 7656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "tag",
									"source": 12,
									"value": "238"
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7721,
									"end": 7739,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7713,
									"end": 7719,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7710,
									"end": 7740,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "239"
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "240"
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 7743,
									"end": 7761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "tag",
									"source": 12,
									"value": "240"
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "tag",
									"source": 12,
									"value": "239"
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "241"
								},
								{
									"begin": 7819,
									"end": 7823,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7813,
									"end": 7824,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 7787,
									"end": 7825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "tag",
									"source": 12,
									"value": "241"
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "242"
								},
								{
									"begin": 7932,
									"end": 7938,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7918,
									"end": 7922,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7872,
									"end": 7939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "tag",
									"source": 12,
									"value": "242"
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7966,
									"end": 7967,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7990,
									"end": 7994,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7977,
									"end": 7994,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7977,
									"end": 7994,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8022,
									"end": 8024,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8014,
									"end": 8020,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8011,
									"end": 8025,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8039,
									"end": 8040,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "244"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8696,
									"end": 8697,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8713,
									"end": 8719,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "245"
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8762,
									"end": 8771,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8757,
									"end": 8760,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 8753,
									"end": 8772,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8747,
									"end": 8773,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8738,
									"end": 8773,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8738,
									"end": 8773,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "tag",
									"source": 12,
									"value": "245"
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "246"
								},
								{
									"begin": 8873,
									"end": 8879,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8866,
									"end": 8871,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 8813,
									"end": 8880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "tag",
									"source": 12,
									"value": "246"
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8807,
									"end": 8811,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8800,
									"end": 8881,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8669,
									"end": 8891,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "243"
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "tag",
									"source": 12,
									"value": "244"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8086,
									"end": 8090,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8082,
									"end": 8091,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8074,
									"end": 8080,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8070,
									"end": 8092,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "247"
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 8120,
									"end": 8157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "tag",
									"source": 12,
									"value": "247"
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8179,
									"end": 8180,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "tag",
									"source": 12,
									"value": "248"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8207,
									"end": 8214,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8205,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8201,
									"end": 8215,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "250"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8286,
									"end": 8295,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8281,
									"end": 8284,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8277,
									"end": 8296,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8271,
									"end": 8297,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8263,
									"end": 8269,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8256,
									"end": 8298,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8337,
									"end": 8338,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8329,
									"end": 8335,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8325,
									"end": 8339,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8315,
									"end": 8339,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8315,
									"end": 8339,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8386,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8373,
									"end": 8382,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8369,
									"end": 8387,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8356,
									"end": 8387,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8356,
									"end": 8387,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8230,
									"end": 8234,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8227,
									"end": 8228,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8223,
									"end": 8235,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8218,
									"end": 8235,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8218,
									"end": 8235,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "248"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "tag",
									"source": 12,
									"value": "250"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8429,
									"end": 8435,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8420,
									"end": 8427,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8417,
									"end": 8436,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "251"
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8496,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8482,
									"end": 8485,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8478,
									"end": 8497,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8472,
									"end": 8498,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "252"
								},
								{
									"begin": 8572,
									"end": 8576,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8564,
									"end": 8570,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8560,
									"end": 8577,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8549,
									"end": 8558,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 8530,
									"end": 8578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "tag",
									"source": 12,
									"value": "252"
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8522,
									"end": 8528,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8515,
									"end": 8579,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8437,
									"end": 8593,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "tag",
									"source": 12,
									"value": "251"
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8639,
									"end": 8640,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8635,
									"end": 8636,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8627,
									"end": 8633,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8623,
									"end": 8637,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8619,
									"end": 8641,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8613,
									"end": 8617,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8606,
									"end": 8642,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "tag",
									"source": 12,
									"value": "243"
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7502,
									"end": 8897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8940,
									"end": 8947,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8980,
									"end": 9022,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8973,
									"end": 8978,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8969,
									"end": 9023,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8958,
									"end": 9023,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8958,
									"end": 9023,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8903,
									"end": 9029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9072,
									"end": 9079,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "255"
								},
								{
									"begin": 9119,
									"end": 9124,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 9101,
									"end": 9125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "tag",
									"source": 12,
									"value": "255"
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9090,
									"end": 9125,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9090,
									"end": 9125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9035,
									"end": 9131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "257"
								},
								{
									"begin": 9242,
									"end": 9247,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 9224,
									"end": 9248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "tag",
									"source": 12,
									"value": "257"
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9219,
									"end": 9222,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9212,
									"end": 9249,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9354,
									"end": 9358,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9392,
									"end": 9394,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9381,
									"end": 9390,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9377,
									"end": 9395,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9369,
									"end": 9395,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9369,
									"end": 9395,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "259"
								},
								{
									"begin": 9473,
									"end": 9474,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9462,
									"end": 9471,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9458,
									"end": 9475,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9449,
									"end": 9455,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 9405,
									"end": 9476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "tag",
									"source": 12,
									"value": "259"
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9261,
									"end": 9483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9489,
									"end": 9669,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 9489,
									"end": 9669,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9537,
									"end": 9614,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9534,
									"end": 9535,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9527,
									"end": 9615,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9634,
									"end": 9638,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 9631,
									"end": 9632,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 9624,
									"end": 9639,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9658,
									"end": 9662,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 9655,
									"end": 9656,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9648,
									"end": 9663,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9715,
									"end": 9718,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9734,
									"end": 9754,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "262"
								},
								{
									"begin": 9752,
									"end": 9753,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9734,
									"end": 9754,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 9734,
									"end": 9754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9734,
									"end": 9754,
									"name": "tag",
									"source": 12,
									"value": "262"
								},
								{
									"begin": 9734,
									"end": 9754,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9729,
									"end": 9754,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9729,
									"end": 9754,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9768,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "263"
								},
								{
									"begin": 9786,
									"end": 9787,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9768,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 9768,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9768,
									"end": 9788,
									"name": "tag",
									"source": 12,
									"value": "263"
								},
								{
									"begin": 9768,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9763,
									"end": 9788,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9763,
									"end": 9788,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9811,
									"end": 9812,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9808,
									"end": 9809,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9804,
									"end": 9813,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9797,
									"end": 9813,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9797,
									"end": 9813,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9832,
									"end": 9835,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 9829,
									"end": 9830,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9826,
									"end": 9836,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 9823,
									"end": 9859,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9823,
									"end": 9859,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "264"
								},
								{
									"begin": 9823,
									"end": 9859,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9839,
									"end": 9857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "265"
								},
								{
									"begin": 9839,
									"end": 9857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 9839,
									"end": 9857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9839,
									"end": 9857,
									"name": "tag",
									"source": 12,
									"value": "265"
								},
								{
									"begin": 9839,
									"end": 9857,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9823,
									"end": 9859,
									"name": "tag",
									"source": 12,
									"value": "264"
								},
								{
									"begin": 9823,
									"end": 9859,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9675,
									"end": 9866,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9872,
									"end": 9990,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 9872,
									"end": 9990,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9959,
									"end": 9983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "267"
								},
								{
									"begin": 9977,
									"end": 9982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9959,
									"end": 9983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 9959,
									"end": 9983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9959,
									"end": 9983,
									"name": "tag",
									"source": 12,
									"value": "267"
								},
								{
									"begin": 9959,
									"end": 9983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9954,
									"end": 9957,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9947,
									"end": 9984,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9872,
									"end": 9990,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9872,
									"end": 9990,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9872,
									"end": 9990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10145,
									"end": 10149,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10183,
									"end": 10185,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 10172,
									"end": 10181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10168,
									"end": 10186,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10160,
									"end": 10186,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10160,
									"end": 10186,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10196,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "269"
								},
								{
									"begin": 10264,
									"end": 10265,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10253,
									"end": 10262,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10249,
									"end": 10266,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10240,
									"end": 10246,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 10196,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 10196,
									"end": 10267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10196,
									"end": 10267,
									"name": "tag",
									"source": 12,
									"value": "269"
								},
								{
									"begin": 10196,
									"end": 10267,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10277,
									"end": 10349,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "270"
								},
								{
									"begin": 10345,
									"end": 10347,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10334,
									"end": 10343,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10330,
									"end": 10348,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10321,
									"end": 10327,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 10277,
									"end": 10349,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 10277,
									"end": 10349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10277,
									"end": 10349,
									"name": "tag",
									"source": 12,
									"value": "270"
								},
								{
									"begin": 10277,
									"end": 10349,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10359,
									"end": 10431,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "271"
								},
								{
									"begin": 10427,
									"end": 10429,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 10416,
									"end": 10425,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10412,
									"end": 10430,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10403,
									"end": 10409,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10359,
									"end": 10431,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 10359,
									"end": 10431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10359,
									"end": 10431,
									"name": "tag",
									"source": 12,
									"value": "271"
								},
								{
									"begin": 10359,
									"end": 10431,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9996,
									"end": 10438,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10537,
									"end": 10541,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10575,
									"end": 10577,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10564,
									"end": 10573,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10560,
									"end": 10578,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10552,
									"end": 10578,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10552,
									"end": 10578,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10588,
									"end": 10659,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "273"
								},
								{
									"begin": 10656,
									"end": 10657,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10645,
									"end": 10654,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10641,
									"end": 10658,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10632,
									"end": 10638,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10588,
									"end": 10659,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 10588,
									"end": 10659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10588,
									"end": 10659,
									"name": "tag",
									"source": 12,
									"value": "273"
								},
								{
									"begin": 10588,
									"end": 10659,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10444,
									"end": 10666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10672,
									"end": 10749,
									"name": "tag",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 10672,
									"end": 10749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10709,
									"end": 10716,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10738,
									"end": 10743,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10727,
									"end": 10743,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10727,
									"end": 10743,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10672,
									"end": 10749,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10672,
									"end": 10749,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10672,
									"end": 10749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10672,
									"end": 10749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10755,
									"end": 10873,
									"name": "tag",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 10755,
									"end": 10873,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10842,
									"end": 10866,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "276"
								},
								{
									"begin": 10860,
									"end": 10865,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10842,
									"end": 10866,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 10842,
									"end": 10866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10842,
									"end": 10866,
									"name": "tag",
									"source": 12,
									"value": "276"
								},
								{
									"begin": 10842,
									"end": 10866,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10837,
									"end": 10840,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10830,
									"end": 10867,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 10755,
									"end": 10873,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10755,
									"end": 10873,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10755,
									"end": 10873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10879,
									"end": 11211,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 10879,
									"end": 11211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11000,
									"end": 11004,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11038,
									"end": 11040,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 11027,
									"end": 11036,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11023,
									"end": 11041,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11015,
									"end": 11041,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11015,
									"end": 11041,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11051,
									"end": 11122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "278"
								},
								{
									"begin": 11119,
									"end": 11120,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11108,
									"end": 11117,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11104,
									"end": 11121,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11095,
									"end": 11101,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 11051,
									"end": 11122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 11051,
									"end": 11122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11051,
									"end": 11122,
									"name": "tag",
									"source": 12,
									"value": "278"
								},
								{
									"begin": 11051,
									"end": 11122,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11132,
									"end": 11204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "279"
								},
								{
									"begin": 11200,
									"end": 11202,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 11189,
									"end": 11198,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11185,
									"end": 11203,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11176,
									"end": 11182,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 11132,
									"end": 11204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 11132,
									"end": 11204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11132,
									"end": 11204,
									"name": "tag",
									"source": 12,
									"value": "279"
								},
								{
									"begin": 11132,
									"end": 11204,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10879,
									"end": 11211,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 10879,
									"end": 11211,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10879,
									"end": 11211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10879,
									"end": 11211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10879,
									"end": 11211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10879,
									"end": 11211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 6368,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f31b5309d1693d5e37ce7e37b580bbcb57512310b3baf8fac321aa345ecd65af64736f6c63430008190033",
									".code": [
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "E5839836"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "F26C159F"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "F44637BA"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "FE575A87"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "C2134B23"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "D1C2DE0A"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "939BCBC9"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "939BCBC9"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "974B368C"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "983B2D56"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "9DC29FAC"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "788649EA"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "282C51F3"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "410B2424"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "44337EA1"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "526606C9"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "537DF3B6"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "282C51F3"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "2ACD2000"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "3092AFD5"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "EFF2AFC"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "EFF2AFC"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "1EC82CB8"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "2846858"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "6A85F0F"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 6368,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 5092,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 5092,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 610,
											"end": 674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 610,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 610,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 610,
											"end": 674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 674,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 610,
											"end": 674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 610,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 610,
											"end": 674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 674,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 5654,
											"end": 5778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 5654,
											"end": 5778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 3746,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 3746,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 541,
											"end": 603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 541,
											"end": 603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 5458,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 5458,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4730,
											"end": 4837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4730,
											"end": 4837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1585,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 1585,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 681,
											"end": 765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 681,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 681,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 681,
											"end": 765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 681,
											"end": 765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 681,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 681,
											"end": 765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2888,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2888,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 5276,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 5276,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3192,
											"end": 3419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3192,
											"end": 3419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2309,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2309,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 772,
											"end": 836,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 772,
											"end": 836,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 772,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 772,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 772,
											"end": 836,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 836,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 772,
											"end": 836,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 772,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 772,
											"end": 836,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 836,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 5865,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 5865,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4551,
											"end": 4654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 4551,
											"end": 4654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1742,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1742,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3975,
											"end": 4475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 3975,
											"end": 4475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3975,
											"end": 4475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 6070,
											"end": 6177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 6070,
											"end": 6177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 6254,
											"end": 6365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 6254,
											"end": 6365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 472,
											"end": 534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 472,
											"end": 534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2570,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2570,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2570,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2043,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2043,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4913,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 4913,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3484,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 3484,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3484,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 579,
											"end": 603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 5183,
											"end": 5190,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5159,
											"end": 5169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5159,
											"end": 5191,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5159,
											"end": 5191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 5159,
											"end": 5191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 610,
											"end": 674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 649,
											"end": 674,
											"name": "PUSH",
											"source": 11,
											"value": "92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363"
										},
										{
											"begin": 610,
											"end": 674,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 610,
											"end": 674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5728,
											"end": 5770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 730,
											"end": 765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
										},
										{
											"begin": 5762,
											"end": 5769,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5728,
											"end": 5770,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 5728,
											"end": 5770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 811,
											"end": 836,
											"name": "PUSH",
											"source": 11,
											"value": "62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3856,
											"end": 3860,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3864,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3866,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3846,
											"end": 3873,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3873,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3846,
											"end": 3873,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 579,
											"end": 603,
											"name": "PUSH",
											"source": 11,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 649,
											"end": 674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363"
										},
										{
											"begin": 5551,
											"end": 5558,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5526,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5526,
											"end": 5559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5526,
											"end": 5559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 5526,
											"end": 5559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4797,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 4821,
											"end": 4828,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4797,
											"end": 4807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 4797,
											"end": 4829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4797,
											"end": 4829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 4797,
											"end": 4829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 1673,
											"end": 1675,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1683,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1667,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 1667,
											"end": 1684,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1667,
											"end": 1684,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 1667,
											"end": 1684,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 681,
											"end": 765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 730,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
										},
										{
											"begin": 681,
											"end": 765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 681,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 730,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 3018,
											"end": 3025,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2989,
											"end": 3008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2989,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2989,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2989,
											"end": 3026,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2989,
											"end": 3026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2989,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2989,
											"end": 3026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2989,
											"end": 3026,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2989,
											"end": 3026,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2989,
											"end": 3026,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2988,
											"end": 3026,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2980,
											"end": 3061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2980,
											"end": 3061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 3096,
											"end": 3103,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3072,
											"end": 3095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 3072,
											"end": 3095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 3112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 649,
											"end": 674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363"
										},
										{
											"begin": 5365,
											"end": 5372,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5341,
											"end": 5373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 5341,
											"end": 5373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 730,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3326,
											"end": 3333,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3297,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 3297,
											"end": 3325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3334,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3297,
											"end": 3334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3334,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3334,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3297,
											"end": 3334,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3289,
											"end": 3365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 3289,
											"end": 3365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3403,
											"end": 3410,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3376,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 3376,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3411,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3411,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3411,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3411,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3411,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3376,
											"end": 3411,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 649,
											"end": 674,
											"name": "PUSH",
											"source": 11,
											"value": "92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 2424,
											"end": 2431,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2400,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2400,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2400,
											"end": 2432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2432,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 2400,
											"end": 2432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2392,
											"end": 2458,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2392,
											"end": 2458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2469,
											"end": 2499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2499,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2469,
											"end": 2499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2499,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 772,
											"end": 836,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 772,
											"end": 836,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 811,
											"end": 836,
											"name": "PUSH",
											"source": 11,
											"value": "62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066"
										},
										{
											"begin": 772,
											"end": 836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 772,
											"end": 836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 730,
											"end": 765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F988E4FB62B8E14F4820FED03192306DDF4D7DBFA215595BA1C6BA4B76B369EE"
										},
										{
											"begin": 5977,
											"end": 5984,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5942,
											"end": 5985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 5942,
											"end": 5985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4615,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 4638,
											"end": 4645,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4615,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4615,
											"end": 4646,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4615,
											"end": 4646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4615,
											"end": 4646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 579,
											"end": 603,
											"name": "PUSH",
											"source": 11,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 1832,
											"end": 1836,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1838,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 1826,
											"end": 1845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 1845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 1826,
											"end": 1845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4054,
											"end": 4058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4084,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4087,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 4087,
											"end": 4099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4071,
											"end": 4099,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4071,
											"end": 4099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4143,
											"end": 4148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4133,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4119,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 4119,
											"end": 4142,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4149,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 4110,
											"end": 4178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4110,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4227,
											"end": 4232,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4198,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 4198,
											"end": 4226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4233,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4233,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4233,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4198,
											"end": 4233,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4233,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4198,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4197,
											"end": 4233,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4189,
											"end": 4267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4189,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 4316,
											"end": 4318,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4306,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4287,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 4287,
											"end": 4315,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4286,
											"end": 4319,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4278,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4278,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4376,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4391,
											"end": 4393,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4376,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 4376,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4376,
											"end": 4402,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4376,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 811,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066"
										},
										{
											"begin": 6161,
											"end": 6168,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 6137,
											"end": 6169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6137,
											"end": 6169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 6137,
											"end": 6169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 811,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "62B337EAEFEC74DADF1A62E856BF9DB4F14A0F27D4F48156A95A9F98E7D5E066"
										},
										{
											"begin": 6349,
											"end": 6356,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 6324,
											"end": 6357,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 6324,
											"end": 6357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 472,
											"end": 534,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 472,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 2670,
											"end": 2677,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2646,
											"end": 2660,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2646,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2639,
											"end": 2678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2639,
											"end": 2678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 649,
											"end": 674,
											"name": "PUSH",
											"source": 11,
											"value": "92DE27771F92D6942691D73358B3A4673E4880DE8356F8F2CF452BE87E02D363"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 2157,
											"end": 2164,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2133,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2133,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2165,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 2133,
											"end": 2165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2165,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 2124,
											"end": 2195,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 2124,
											"end": 2195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2206,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 2225,
											"end": 2232,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2206,
											"end": 2220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2206,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2206,
											"end": 2224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2206,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2206,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2206,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2206,
											"end": 2233,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2206,
											"end": 2233,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2206,
											"end": 2233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 2206,
											"end": 2233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2206,
											"end": 2233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 579,
											"end": 603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 5000,
											"end": 5007,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4977,
											"end": 5008,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 4977,
											"end": 5008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3545,
											"end": 3549,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3594,
											"end": 3601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3584,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3565,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 3565,
											"end": 3593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3602,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3602,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3602,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3602,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3602,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3565,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8951,
											"end": 8955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 8984,
											"end": 8987,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8984,
											"end": 8994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8984,
											"end": 8994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9020,
											"end": 9025,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9004,
											"end": 9027,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9004,
											"end": 9027,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8996,
											"end": 9028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8974,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 8974,
											"end": 9029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8386,
											"end": 8390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 8414,
											"end": 8417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8414,
											"end": 8424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8424,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8450,
											"end": 8455,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8434,
											"end": 8457,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8434,
											"end": 8457,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8426,
											"end": 8458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8458,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8409,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 8409,
											"end": 8459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8707,
											"end": 8711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 8738,
											"end": 8741,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8748,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8774,
											"end": 8779,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8758,
											"end": 8781,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8750,
											"end": 8782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8750,
											"end": 8782,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 8730,
											"end": 8783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8783,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 8730,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8723,
											"end": 8783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8723,
											"end": 8783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2335,
											"end": 2338,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 2325,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2365,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2384,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2547,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2523,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3013,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3434,
											"end": 3442,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 3434,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3483,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 3480,
											"end": 3502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3544,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3544,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3581,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3587,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 3584,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3708,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3727,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 3705,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3847,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3858,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3844,
											"end": 3858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3546,
											"end": 3895,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3976,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 3973,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4079,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4096,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4097,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4166,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 4183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 2530,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2555,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 2711,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2894,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 2795,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2853,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2875,
											"end": 2887,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 2887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 2887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2894,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3069,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 2900,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2984,
											"end": 2995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3025,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3058,
											"end": 3062,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3069,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3069,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3214,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 3075,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3170,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3159,
											"end": 3162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3157,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 3205,
											"end": 3206,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3202,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3203,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3207,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3261,
											"end": 3267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3308,
											"end": 3315,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3305,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3296,
											"end": 3301,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3288,
											"end": 3316,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3278,
											"end": 3316,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3278,
											"end": 3316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3220,
											"end": 3322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3705,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3328,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3419,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3444,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 3444,
											"end": 3483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3483,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 3444,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 3563,
											"end": 3569,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3558,
											"end": 3561,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 3499,
											"end": 3570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3570,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 3499,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3570,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3579,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 3637,
											"end": 3643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3635,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3618,
											"end": 3623,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3614,
											"end": 3630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3579,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 3579,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3579,
											"end": 3644,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 3579,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 3691,
											"end": 3697,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3669,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3664,
											"end": 3667,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3699,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3699,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3705,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3705,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 4024,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 3711,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3828,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3864,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3847,
											"end": 3865,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3865,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3911,
											"end": 3920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3921,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3898,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3939,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 4012,
											"end": 4016,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3939,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3939,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3939,
											"end": 4017,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 3939,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 4017,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 4017,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 4024,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 4024,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 4024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 4024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4107,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 4030,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4074,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4085,
											"end": 4101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4085,
											"end": 4101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4107,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4107,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4107,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4113,
											"end": 4235,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 4113,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 4186,
											"end": 4210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4179,
											"end": 4184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4176,
											"end": 4211,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 4166,
											"end": 4229,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4223,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4215,
											"end": 4227,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4229,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 4166,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4113,
											"end": 4235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4113,
											"end": 4235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4380,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 4241,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4287,
											"end": 4292,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4312,
											"end": 4332,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4341,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 4368,
											"end": 4373,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4341,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 4341,
											"end": 4374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4341,
											"end": 4374,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 4341,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4380,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4380,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4386,
											"end": 4860,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 4386,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4454,
											"end": 4460,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4513,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4499,
											"end": 4508,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4490,
											"end": 4497,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4486,
											"end": 4509,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4482,
											"end": 4514,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4479,
											"end": 4598,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4479,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 4479,
											"end": 4598,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 4517,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4479,
											"end": 4598,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 4479,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4637,
											"end": 4638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 4707,
											"end": 4714,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4698,
											"end": 4704,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4696,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4683,
											"end": 4705,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 4662,
											"end": 4715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4715,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 4662,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4715,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4764,
											"end": 4766,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 4835,
											"end": 4842,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4832,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 4824,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4790,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 4790,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4790,
											"end": 4843,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 4790,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4780,
											"end": 4843,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4780,
											"end": 4843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4386,
											"end": 4860,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4386,
											"end": 4860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4386,
											"end": 4860,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4386,
											"end": 4860,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4386,
											"end": 4860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4386,
											"end": 4860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 4984,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 4866,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4953,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 4971,
											"end": 4976,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4953,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 4953,
											"end": 4977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4953,
											"end": 4977,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 4953,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4948,
											"end": 4951,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4941,
											"end": 4978,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 4984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 4984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 4984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5212,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 4990,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5083,
											"end": 5087,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5123,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5110,
											"end": 5119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5106,
											"end": 5124,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5134,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 5202,
											"end": 5203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5200,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5187,
											"end": 5204,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5178,
											"end": 5184,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5134,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 5134,
											"end": 5205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5134,
											"end": 5205,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 5134,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5212,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5212,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5218,
											"end": 5837,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 5218,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5301,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5311,
											"end": 5317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5360,
											"end": 5362,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5348,
											"end": 5357,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5339,
											"end": 5346,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5358,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5331,
											"end": 5363,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5447,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 5328,
											"end": 5447,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5366,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 5366,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 5366,
											"end": 5445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5366,
											"end": 5445,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 5366,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5447,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 5328,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5487,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 5556,
											"end": 5563,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5547,
											"end": 5553,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5545,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5532,
											"end": 5554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5511,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 5511,
											"end": 5564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5511,
											"end": 5564,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 5511,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5501,
											"end": 5564,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5501,
											"end": 5564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5613,
											"end": 5615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 5684,
											"end": 5691,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5675,
											"end": 5681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5664,
											"end": 5673,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5660,
											"end": 5682,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 5639,
											"end": 5692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5692,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 5639,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5692,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5741,
											"end": 5743,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5767,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 5812,
											"end": 5819,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5803,
											"end": 5809,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5792,
											"end": 5801,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5767,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 5767,
											"end": 5820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5767,
											"end": 5820,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 5767,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5757,
											"end": 5820,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5757,
											"end": 5820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5712,
											"end": 5830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5218,
											"end": 5837,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5218,
											"end": 5837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5218,
											"end": 5837,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5218,
											"end": 5837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5218,
											"end": 5837,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5218,
											"end": 5837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5965,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 5843,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 5916,
											"end": 5940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5909,
											"end": 5914,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5906,
											"end": 5941,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5896,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 5896,
											"end": 5959,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 5956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5953,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5957,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5896,
											"end": 5959,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 5896,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6110,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 5971,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6017,
											"end": 6022,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6062,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6071,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 6098,
											"end": 6103,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6071,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 6071,
											"end": 6104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6071,
											"end": 6104,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 6071,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6110,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6445,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 6116,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6175,
											"end": 6181,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6226,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6212,
											"end": 6221,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6203,
											"end": 6210,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6222,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6195,
											"end": 6227,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6311,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 6192,
											"end": 6311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6230,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 6230,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 6230,
											"end": 6309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6230,
											"end": 6309,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 6230,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6311,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 6192,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 6420,
											"end": 6427,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6400,
											"end": 6409,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6396,
											"end": 6418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6375,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 6375,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6375,
											"end": 6428,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 6375,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6365,
											"end": 6428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6365,
											"end": 6428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6321,
											"end": 6438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6445,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6445,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6525,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6578,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6555,
											"end": 6562,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6551,
											"end": 6574,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6547,
											"end": 6579,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 6582,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6752,
											"end": 6761,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 6727,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6673,
											"end": 6790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6876,
											"end": 6898,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 6855,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6800,
											"end": 6918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 7122,
											"end": 7127,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 7106,
											"end": 7128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7094,
											"end": 7129,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7268,
											"end": 7270,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7253,
											"end": 7271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 7281,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 7448,
											"end": 7472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7443,
											"end": 7446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7436,
											"end": 7473,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7578,
											"end": 7582,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7618,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7605,
											"end": 7614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7619,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 7697,
											"end": 7698,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7695,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 7629,
											"end": 7700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "tag",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7781,
											"end": 7787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7795,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7826,
											"end": 7835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7817,
											"end": 7824,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7813,
											"end": 7836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7809,
											"end": 7841,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7806,
											"end": 7925,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7806,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 7806,
											"end": 7925,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 7844,
											"end": 7923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "tag",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7806,
											"end": 7925,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 7806,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7964,
											"end": 7965,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 8034,
											"end": 8041,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8014,
											"end": 8023,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8010,
											"end": 8032,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7989,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 7989,
											"end": 8042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7989,
											"end": 8042,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 7989,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8042,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 8052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8091,
											"end": 8093,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 8162,
											"end": 8169,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8153,
											"end": 8159,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8142,
											"end": 8151,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8117,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 8117,
											"end": 8170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8117,
											"end": 8170,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 8117,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8107,
											"end": 8170,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8107,
											"end": 8170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8062,
											"end": 8180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 8187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8373,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 8193,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8241,
											"end": 8318,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8238,
											"end": 8239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 8319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8342,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 8335,
											"end": 8336,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8328,
											"end": 8343,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8362,
											"end": 8366,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8359,
											"end": 8360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8367,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8699,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 8379,
											"end": 8699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8423,
											"end": 8429,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8461,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8454,
											"end": 8458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8462,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8508,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8501,
											"end": 8505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8497,
											"end": 8509,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8518,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 8518,
											"end": 8599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 8588,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8572,
											"end": 8589,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8562,
											"end": 8589,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8562,
											"end": 8589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8518,
											"end": 8599,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 8518,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8646,
											"end": 8648,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8638,
											"end": 8644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8635,
											"end": 8649,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8615,
											"end": 8633,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8612,
											"end": 8650,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8609,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 8609,
											"end": 8693,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 8665,
											"end": 8683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "tag",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8609,
											"end": 8693,
											"name": "tag",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 8609,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8430,
											"end": 8699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8699,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8885,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 8705,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 8877,
											"name": "PUSH",
											"source": 12,
											"value": "4163636F756E7420697320616C726561647920626C61636B6C69737465640000"
										},
										{
											"begin": 8841,
											"end": 8842,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 8839,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 8843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8822,
											"end": 8878,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8891,
											"end": 9257,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 8891,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 9118,
											"end": 9120,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 9113,
											"end": 9116,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 9054,
											"end": 9121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9121,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 9054,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9121,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9130,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 9219,
											"end": 9222,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9130,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 9130,
											"end": 9223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9130,
											"end": 9223,
											"name": "tag",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 9130,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9248,
											"end": 9250,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9239,
											"end": 9251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9232,
											"end": 9251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9232,
											"end": 9251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8891,
											"end": 9257,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8891,
											"end": 9257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8891,
											"end": 9257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8891,
											"end": 9257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9263,
											"end": 9682,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9263,
											"end": 9682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9429,
											"end": 9433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9467,
											"end": 9469,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9456,
											"end": 9465,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9444,
											"end": 9470,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9444,
											"end": 9470,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9516,
											"end": 9525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9510,
											"end": 9514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9506,
											"end": 9526,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9502,
											"end": 9503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9491,
											"end": 9500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9487,
											"end": 9504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9527,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9544,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "633"
										},
										{
											"begin": 9670,
											"end": 9674,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9544,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 9544,
											"end": 9675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9544,
											"end": 9675,
											"name": "tag",
											"source": 12,
											"value": "633"
										},
										{
											"begin": 9544,
											"end": 9675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9536,
											"end": 9675,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9536,
											"end": 9675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9263,
											"end": 9682,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9263,
											"end": 9682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9263,
											"end": 9682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9263,
											"end": 9682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9688,
											"end": 9864,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 9688,
											"end": 9864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 9856,
											"name": "PUSH",
											"source": 12,
											"value": "4163636F756E74206973206E6F7420626C61636B6C6973746564000000000000"
										},
										{
											"begin": 9824,
											"end": 9825,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9816,
											"end": 9822,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 9826,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9805,
											"end": 9857,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9688,
											"end": 9864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9688,
											"end": 9864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9870,
											"end": 10236,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 9870,
											"end": 10236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10012,
											"end": 10015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10033,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 10097,
											"end": 10099,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 10092,
											"end": 10095,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10033,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 10033,
											"end": 10100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10033,
											"end": 10100,
											"name": "tag",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 10033,
											"end": 10100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10026,
											"end": 10100,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10026,
											"end": 10100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "637"
										},
										{
											"begin": 10198,
											"end": 10201,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 10109,
											"end": 10202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10202,
											"name": "tag",
											"source": 12,
											"value": "637"
										},
										{
											"begin": 10109,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10227,
											"end": 10229,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10222,
											"end": 10225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10218,
											"end": 10230,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10211,
											"end": 10230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10211,
											"end": 10230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9870,
											"end": 10236,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9870,
											"end": 10236,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9870,
											"end": 10236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9870,
											"end": 10236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10242,
											"end": 10661,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 10242,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10408,
											"end": 10412,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10446,
											"end": 10448,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10435,
											"end": 10444,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10423,
											"end": 10449,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10423,
											"end": 10449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10495,
											"end": 10504,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10489,
											"end": 10493,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10505,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10481,
											"end": 10482,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10470,
											"end": 10479,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10459,
											"end": 10506,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10523,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 10649,
											"end": 10653,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10523,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 10523,
											"end": 10654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10523,
											"end": 10654,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 10523,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10515,
											"end": 10654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10515,
											"end": 10654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10242,
											"end": 10661,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10242,
											"end": 10661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10242,
											"end": 10661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10242,
											"end": 10661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10667,
											"end": 10838,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 10667,
											"end": 10838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 10830,
											"name": "PUSH",
											"source": 12,
											"value": "4163636F756E74206973206E6F742066726F7A656E0000000000000000000000"
										},
										{
											"begin": 10803,
											"end": 10804,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10795,
											"end": 10801,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10791,
											"end": 10805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10784,
											"end": 10831,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10667,
											"end": 10838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10667,
											"end": 10838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11210,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 10844,
											"end": 11210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10986,
											"end": 10989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11007,
											"end": 11074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 11071,
											"end": 11073,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 11066,
											"end": 11069,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11007,
											"end": 11074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 11007,
											"end": 11074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11007,
											"end": 11074,
											"name": "tag",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 11007,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11000,
											"end": 11074,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11000,
											"end": 11074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 11172,
											"end": 11175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 11083,
											"end": 11176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11176,
											"name": "tag",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 11083,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11201,
											"end": 11203,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11196,
											"end": 11199,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11192,
											"end": 11204,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11185,
											"end": 11204,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11185,
											"end": 11204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 11210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11216,
											"end": 11635,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 11216,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11382,
											"end": 11386,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11420,
											"end": 11422,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11409,
											"end": 11418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11423,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11397,
											"end": 11423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11397,
											"end": 11423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11469,
											"end": 11478,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11463,
											"end": 11467,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11459,
											"end": 11479,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11455,
											"end": 11456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11444,
											"end": 11453,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11440,
											"end": 11457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11433,
											"end": 11480,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11497,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 11623,
											"end": 11627,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11497,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 11497,
											"end": 11628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11497,
											"end": 11628,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 11497,
											"end": 11628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11489,
											"end": 11628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11489,
											"end": 11628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11216,
											"end": 11635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11216,
											"end": 11635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11216,
											"end": 11635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11216,
											"end": 11635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11641,
											"end": 11815,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 11641,
											"end": 11815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11781,
											"end": 11807,
											"name": "PUSH",
											"source": 12,
											"value": "53656E646572206163636F756E742069732066726F7A656E0000000000000000"
										},
										{
											"begin": 11777,
											"end": 11778,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11769,
											"end": 11775,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11765,
											"end": 11779,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11758,
											"end": 11808,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11641,
											"end": 11815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11641,
											"end": 11815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11821,
											"end": 12187,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 11821,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11963,
											"end": 11966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11984,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 12048,
											"end": 12050,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 12043,
											"end": 12046,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11984,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 11984,
											"end": 12051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11984,
											"end": 12051,
											"name": "tag",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 11984,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11977,
											"end": 12051,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11977,
											"end": 12051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12060,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 12149,
											"end": 12152,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12060,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 12060,
											"end": 12153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12060,
											"end": 12153,
											"name": "tag",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 12060,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12178,
											"end": 12180,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12173,
											"end": 12176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12169,
											"end": 12181,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12162,
											"end": 12181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12162,
											"end": 12181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11821,
											"end": 12187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11821,
											"end": 12187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11821,
											"end": 12187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11821,
											"end": 12187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12193,
											"end": 12612,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 12193,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12359,
											"end": 12363,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12397,
											"end": 12399,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12386,
											"end": 12395,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12374,
											"end": 12400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12374,
											"end": 12400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12446,
											"end": 12455,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12440,
											"end": 12444,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12436,
											"end": 12456,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12432,
											"end": 12433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12421,
											"end": 12430,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12417,
											"end": 12434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12410,
											"end": 12457,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12474,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 12600,
											"end": 12604,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12474,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 12474,
											"end": 12605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12474,
											"end": 12605,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 12474,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12466,
											"end": 12605,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12466,
											"end": 12605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12193,
											"end": 12612,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12193,
											"end": 12612,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12193,
											"end": 12612,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12193,
											"end": 12612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12618,
											"end": 12797,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 12618,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12789,
											"name": "PUSH",
											"source": 12,
											"value": "53656E646572206163636F756E7420697320626C61636B6C6973746564000000"
										},
										{
											"begin": 12754,
											"end": 12755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12746,
											"end": 12752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12742,
											"end": 12756,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12618,
											"end": 12797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12618,
											"end": 12797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 13169,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 12803,
											"end": 13169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12945,
											"end": 12948,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12966,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 13030,
											"end": 13032,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 13025,
											"end": 13028,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 12966,
											"end": 13033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 13033,
											"name": "tag",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 12966,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12959,
											"end": 13033,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12959,
											"end": 13033,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13042,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 13131,
											"end": 13134,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13042,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 13042,
											"end": 13135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13042,
											"end": 13135,
											"name": "tag",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 13042,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13160,
											"end": 13162,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13155,
											"end": 13158,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13151,
											"end": 13163,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13144,
											"end": 13163,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13144,
											"end": 13163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 13169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 13169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 13169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 13169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13175,
											"end": 13594,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 13175,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13341,
											"end": 13345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13379,
											"end": 13381,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13368,
											"end": 13377,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13356,
											"end": 13382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13356,
											"end": 13382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13428,
											"end": 13437,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13422,
											"end": 13426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13418,
											"end": 13438,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13414,
											"end": 13415,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13412,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13399,
											"end": 13416,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13392,
											"end": 13439,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 13582,
											"end": 13586,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 13456,
											"end": 13587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13587,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 13456,
											"end": 13587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13448,
											"end": 13587,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13448,
											"end": 13587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13175,
											"end": 13594,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13175,
											"end": 13594,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13175,
											"end": 13594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13175,
											"end": 13594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13600,
											"end": 13782,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 13600,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13740,
											"end": 13774,
											"name": "PUSH",
											"source": 12,
											"value": "526563697069656E74206163636F756E7420697320626C61636B6C6973746564"
										},
										{
											"begin": 13736,
											"end": 13737,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13728,
											"end": 13734,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13724,
											"end": 13738,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13717,
											"end": 13775,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13600,
											"end": 13782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13600,
											"end": 13782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14154,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 13788,
											"end": 14154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13930,
											"end": 13933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13951,
											"end": 14018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 14015,
											"end": 14017,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14010,
											"end": 14013,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13951,
											"end": 14018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 13951,
											"end": 14018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13951,
											"end": 14018,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 13951,
											"end": 14018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13944,
											"end": 14018,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13944,
											"end": 14018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 14116,
											"end": 14119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 14027,
											"end": 14120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14145,
											"end": 14147,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14140,
											"end": 14143,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14136,
											"end": 14148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14129,
											"end": 14148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14129,
											"end": 14148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14154,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14579,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 14160,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14326,
											"end": 14330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14364,
											"end": 14366,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14353,
											"end": 14362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14349,
											"end": 14367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14341,
											"end": 14367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14341,
											"end": 14367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14407,
											"end": 14411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14403,
											"end": 14423,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14399,
											"end": 14400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14388,
											"end": 14397,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14384,
											"end": 14401,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14377,
											"end": 14424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14441,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 14567,
											"end": 14571,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14441,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 14441,
											"end": 14572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14441,
											"end": 14572,
											"name": "tag",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 14441,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14433,
											"end": 14572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14433,
											"end": 14572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14579,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14585,
											"end": 14760,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 14585,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14725,
											"end": 14752,
											"name": "PUSH",
											"source": 12,
											"value": "4163636F756E7420697320616C72656164792066726F7A656E00000000000000"
										},
										{
											"begin": 14721,
											"end": 14722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14713,
											"end": 14719,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14709,
											"end": 14723,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14702,
											"end": 14753,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14585,
											"end": 14760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14585,
											"end": 14760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 15132,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 14766,
											"end": 15132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14908,
											"end": 14911,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14929,
											"end": 14996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 14993,
											"end": 14995,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 14988,
											"end": 14991,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 14996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 14929,
											"end": 14996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 14996,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 14929,
											"end": 14996,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14922,
											"end": 14996,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14922,
											"end": 14996,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15005,
											"end": 15098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 15094,
											"end": 15097,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15005,
											"end": 15098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 15005,
											"end": 15098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15005,
											"end": 15098,
											"name": "tag",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 15005,
											"end": 15098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15123,
											"end": 15125,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15118,
											"end": 15121,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15107,
											"end": 15126,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15107,
											"end": 15126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 15132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 15132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 15132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 15132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15138,
											"end": 15557,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 15138,
											"end": 15557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15304,
											"end": 15308,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15342,
											"end": 15344,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15331,
											"end": 15340,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15319,
											"end": 15345,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15319,
											"end": 15345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15391,
											"end": 15400,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15385,
											"end": 15389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15381,
											"end": 15401,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15366,
											"end": 15375,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15362,
											"end": 15379,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15355,
											"end": 15402,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15419,
											"end": 15550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 15545,
											"end": 15549,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15419,
											"end": 15550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 15419,
											"end": 15550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15419,
											"end": 15550,
											"name": "tag",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 15419,
											"end": 15550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15411,
											"end": 15550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15411,
											"end": 15550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15138,
											"end": 15557,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15138,
											"end": 15557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15138,
											"end": 15557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15138,
											"end": 15557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 16005,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 15563,
											"end": 16005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15712,
											"end": 15716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15750,
											"end": 15752,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 15739,
											"end": 15748,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15735,
											"end": 15753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15727,
											"end": 15753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15727,
											"end": 15753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15763,
											"end": 15834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 15831,
											"end": 15832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15829,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15816,
											"end": 15833,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15813,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15763,
											"end": 15834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 15763,
											"end": 15834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15763,
											"end": 15834,
											"name": "tag",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 15763,
											"end": 15834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15844,
											"end": 15916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 15912,
											"end": 15914,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15901,
											"end": 15910,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15897,
											"end": 15915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15888,
											"end": 15894,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15844,
											"end": 15916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 15844,
											"end": 15916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15844,
											"end": 15916,
											"name": "tag",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 15844,
											"end": 15916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15926,
											"end": 15998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 15994,
											"end": 15996,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15983,
											"end": 15992,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15979,
											"end": 15997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15970,
											"end": 15976,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15926,
											"end": 15998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 15926,
											"end": 15998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15926,
											"end": 15998,
											"name": "tag",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 15926,
											"end": 15998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 16005,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 16005,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 16005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 16005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 16005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 16005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 16005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16011,
											"end": 16343,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 16011,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16132,
											"end": 16136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16170,
											"end": 16172,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16159,
											"end": 16168,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16155,
											"end": 16173,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16147,
											"end": 16173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16147,
											"end": 16173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16183,
											"end": 16254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 16251,
											"end": 16252,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16240,
											"end": 16249,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16227,
											"end": 16233,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16183,
											"end": 16254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 16183,
											"end": 16254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16183,
											"end": 16254,
											"name": "tag",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 16183,
											"end": 16254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 16332,
											"end": 16334,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16321,
											"end": 16330,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16308,
											"end": 16314,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 16264,
											"end": 16336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "tag",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16011,
											"end": 16343,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16011,
											"end": 16343,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16011,
											"end": 16343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16011,
											"end": 16343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16011,
											"end": 16343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16011,
											"end": 16343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16349,
											"end": 16529,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 16349,
											"end": 16529,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16474,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16394,
											"end": 16395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16387,
											"end": 16475,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16494,
											"end": 16498,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 16491,
											"end": 16492,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 16484,
											"end": 16499,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16518,
											"end": 16522,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16515,
											"end": 16516,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16508,
											"end": 16523,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16535,
											"end": 16726,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 16535,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16575,
											"end": 16578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16594,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 16612,
											"end": 16613,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 16594,
											"end": 16614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16614,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 16594,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16589,
											"end": 16614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16589,
											"end": 16614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16628,
											"end": 16648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16628,
											"end": 16648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 16628,
											"end": 16648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16628,
											"end": 16648,
											"name": "tag",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 16628,
											"end": 16648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16623,
											"end": 16648,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16623,
											"end": 16648,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16671,
											"end": 16672,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16668,
											"end": 16669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16664,
											"end": 16673,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16657,
											"end": 16673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16657,
											"end": 16673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16692,
											"end": 16695,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16689,
											"end": 16690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16686,
											"end": 16696,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16683,
											"end": 16719,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16683,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 16683,
											"end": 16719,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 16699,
											"end": 16717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "tag",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16683,
											"end": 16719,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 16683,
											"end": 16719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16535,
											"end": 16726,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16535,
											"end": 16726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16535,
											"end": 16726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16535,
											"end": 16726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16535,
											"end": 16726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16732,
											"end": 16926,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 16732,
											"end": 16926,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16772,
											"end": 16776,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16792,
											"end": 16812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 16810,
											"end": 16811,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16792,
											"end": 16812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 16792,
											"end": 16812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16792,
											"end": 16812,
											"name": "tag",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 16792,
											"end": 16812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16812,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16812,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 16844,
											"end": 16845,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 16826,
											"end": 16846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "tag",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16821,
											"end": 16846,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16821,
											"end": 16846,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16870,
											"end": 16871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 16868,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16863,
											"end": 16872,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16855,
											"end": 16872,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16855,
											"end": 16872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16894,
											"end": 16895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16888,
											"end": 16892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16885,
											"end": 16896,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16882,
											"end": 16919,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16882,
											"end": 16919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 16882,
											"end": 16919,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16899,
											"end": 16917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 16899,
											"end": 16917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 16899,
											"end": 16917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16899,
											"end": 16917,
											"name": "tag",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 16899,
											"end": 16917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16882,
											"end": 16919,
											"name": "tag",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 16882,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16732,
											"end": 16926,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16732,
											"end": 16926,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16732,
											"end": 16926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16732,
											"end": 16926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16732,
											"end": 16926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16932,
											"end": 17112,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 16932,
											"end": 17112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16980,
											"end": 17057,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16977,
											"end": 16978,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16970,
											"end": 17058,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17077,
											"end": 17081,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 17074,
											"end": 17075,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17067,
											"end": 17082,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17101,
											"end": 17105,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17098,
											"end": 17099,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17091,
											"end": 17106,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17118,
											"end": 17298,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 17118,
											"end": 17298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17166,
											"end": 17243,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17163,
											"end": 17164,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17156,
											"end": 17244,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17263,
											"end": 17267,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 17260,
											"end": 17261,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17253,
											"end": 17268,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17287,
											"end": 17291,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17284,
											"end": 17285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17277,
											"end": 17292,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"Permissions2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BLACKLIST_MANAGER_ROLE()": "410b2424",
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"FREEZER_ROLE()": "06a85f0f",
							"MINTER_ROLE()": "d5391393",
							"RECOVER_ROLE()": "939bcbc9",
							"addBlacklistManager(address)": "0eff2afc",
							"addBurner(address)": "f44637ba",
							"addFreezer(address)": "526606c9",
							"addMinter(address)": "983b2d56",
							"addRecoverer(address)": "c2134b23",
							"addToBlacklist(address)": "44337ea1",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"freezeAccount(address)": "f26c159f",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isBlacklisted(address)": "fe575a87",
							"isFrozen(address)": "e5839836",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"recover(address,address,uint256)": "1ec82cb8",
							"removeBlacklistManager(address)": "974b368c",
							"removeBurner(address)": "02846858",
							"removeFreezer(address)": "2acd2000",
							"removeFromBlacklist(address)": "537df3b6",
							"removeMinter(address)": "3092afd5",
							"removeRecoverer(address)": "d1c2de0a",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unfreezeAccount(address)": "788649ea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLACKLIST_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FREEZER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RECOVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBlacklistManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addFreezer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addRecoverer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBlacklistManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFreezer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeRecoverer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unfreezeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Permissions2.sol\":\"ERC20PermissionsControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"Permissions2.sol\":{\"keccak256\":\"0xf05995b03a9f11602848122e650e5192685fb09b0bcebb91da94cbeac29078fd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f6e0114817b53a1f4d46702851fa977da8c318232fce4841f2e9aa11e5c6d738\",\"dweb:/ipfs/QmfD6HkaE3WETKRd6DQWQBx2TpWmfAJiyjqD6StyFwiuST\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 686,
								"contract": "Permissions2.sol:ERC20PermissionsControl",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 692,
								"contract": "Permissions2.sol:ERC20PermissionsControl",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 694,
								"contract": "Permissions2.sol:ERC20PermissionsControl",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 696,
								"contract": "Permissions2.sol:ERC20PermissionsControl",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 698,
								"contract": "Permissions2.sol:ERC20PermissionsControl",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "Permissions2.sol:ERC20PermissionsControl",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 387,
								"contract": "Permissions2.sol:ERC20PermissionsControl",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2005,
								"contract": "Permissions2.sol:ERC20PermissionsControl",
								"label": "frozenAccounts",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(AddressSet)1674_storage"
							},
							{
								"astId": 2008,
								"contract": "Permissions2.sol:ERC20PermissionsControl",
								"label": "blacklistedAccounts",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(AddressSet)1674_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)1674_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1673,
										"contract": "Permissions2.sol:ERC20PermissionsControl",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1359_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "Permissions2.sol:ERC20PermissionsControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "Permissions2.sol:ERC20PermissionsControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1359_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1354,
										"contract": "Permissions2.sol:ERC20PermissionsControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1358,
										"contract": "Permissions2.sol:ERC20PermissionsControl",
										"label": "_positions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1312
						],
						"ERC165": [
							1336
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1313,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1337,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1336,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1336,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1336,
								1348,
								378,
								1312
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1335,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1312
						],
						"Ownable": [
							526
						]
					},
					"id": 527,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 1313,
							"src": "128:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "136:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 384,
										"name": "Context",
										"nameLocations": [
											"692:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "692:7:2"
									},
									"id": 385,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 383,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 526,
							"linearizedBaseContracts": [
								526,
								1312
							],
							"name": "Ownable",
							"nameLocation": "681:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 387,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "706:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 386,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 392,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "858:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:2"
									},
									"src": "825:50:2"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 397,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "994:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:2"
									},
									"src": "968:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 403,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1042:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1073:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:2"
									},
									"src": "1015:84:2"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "1259:153:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "1273:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 410,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 423,
												"nodeType": "IfStatement",
												"src": "1269:95:2",
												"trueBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "1301:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 416,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 415,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "1322:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 421,
															"nodeType": "RevertStatement",
															"src": "1315:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1392:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 424,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "1373:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:2"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 429,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "1237:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:2"
									},
									"scope": 526,
									"src": "1225:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1521:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "1531:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:2"
											},
											{
												"id": 435,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:2"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 437,
									"name": "onlyOwner",
									"nameLocation": "1509:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:2"
									},
									"src": "1500:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1693:30:2",
										"statements": [
											{
												"expression": {
													"id": 443,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "1710:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 442,
												"id": 444,
												"nodeType": "Return",
												"src": "1703:13:2"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1684:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:2"
									},
									"scope": 526,
									"src": "1638:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "1841:117:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 450,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1855:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 452,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "1866:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "1851:101:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "1880:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 456,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "1928:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "1901:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 459,
															"nodeType": "RevertStatement",
															"src": "1894:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:2"
									},
									"scope": 526,
									"src": "1796:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2347:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 469,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2357:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:2"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 466,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "2337:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:2"
									},
									"scope": 526,
									"src": "2293:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "2613:145:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 485,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2627:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 486,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "2623:91:2",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "2651:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "2672:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "2665:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2742:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 500,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2723:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:2"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 482,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "2603:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2570:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:2"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:2"
									},
									"scope": 526,
									"src": "2543:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "2975:124:2",
										"statements": [
											{
												"assignments": [
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "2985:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 511,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 514,
												"initialValue": {
													"id": 513,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "3004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:2"
											},
											{
												"expression": {
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 515,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3020:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 516,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "3029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 520,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3073:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3083:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 519,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3052:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "EmitStatement",
												"src": "3047:45:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2940:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:2"
									},
									"scope": 526,
									"src": "2912:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 527,
							"src": "663:2438:2",
							"usedErrors": [
								392,
								397
							],
							"usedEvents": [
								403
							]
						}
					],
					"src": "102:3000:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							663
						],
						"IERC20Errors": [
							568
						],
						"IERC721Errors": [
							616
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 528,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 529,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 538,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 543,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 548,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 557,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 562,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 567,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 664,
							"src": "278:1764:3",
							"usedErrors": [
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 569,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 574,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 579,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 588,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 593,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 598,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 605,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 610,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 615,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 664,
							"src": "2186:2092:3",
							"usedErrors": [
								574,
								579,
								588,
								593,
								598,
								605,
								610,
								615
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 617,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 628,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 633,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 638,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 645,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 650,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 655,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 662,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 664,
							"src": "4424:2107:3",
							"usedErrors": [
								628,
								633,
								638,
								645,
								650,
								655,
								662
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1312
						],
						"ERC20": [
							1178
						],
						"IERC20": [
							1256
						],
						"IERC20Errors": [
							568
						],
						"IERC20Metadata": [
							1282
						]
					},
					"id": 1179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1257,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 666,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1256,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1283,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 668,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1282,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1313,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 670,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 664,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 672,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 568,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 675,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "1428:7:4"
									},
									"id": 676,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 677,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1256,
										"src": "1437:6:4"
									},
									"id": 678,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 679,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1282,
										"src": "1445:14:4"
									},
									"id": 680,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 681,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 568,
										"src": "1461:12:4"
									},
									"id": 682,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 674,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1178,
							"linearizedBaseContracts": [
								1178,
								568,
								1282,
								1256,
								1312
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 686,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 685,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 683,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 684,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 692,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 691,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 687,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 690,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 688,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 689,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 694,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 693,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 696,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 695,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 698,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 697,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 706,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 707,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 710,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 711,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 715,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 702,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 1178,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 721,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 696,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 720,
												"id": 722,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 1178,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 730,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 698,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 729,
												"id": 731,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 727,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 1178,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1281
									],
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 738,
												"id": 740,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 736,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 1178,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1205
									],
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 748,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 694,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 747,
												"id": 749,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 1178,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 759,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 761,
													"indexExpression": {
														"id": 760,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 758,
												"id": 762,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 1178,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 774,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 773,
												"id": 786,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 1178,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1233
									],
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 798,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 800,
														"indexExpression": {
															"id": 799,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 802,
													"indexExpression": {
														"id": 801,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 797,
												"id": 803,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 1178,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													816
												],
												"declarations": [
													{
														"constant": false,
														"id": 816,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 815,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 819,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 817,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 820,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1069,
															1129
														],
														"referencedDeclaration": 1069,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 814,
												"id": 827,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 1178,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1255
									],
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													842
												],
												"declarations": [
													{
														"constant": false,
														"id": 842,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 841,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 843,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 840,
												"id": 859,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 1178,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 871,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 872,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 878,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 877,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 883,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 893,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 892,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 898,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 1178,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 918,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 919,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																930
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 930,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 955,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 929,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 934,
															"initialValue": {
																"baseExpression": {
																	"id": 931,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 933,
																"indexExpression": {
																	"id": 932,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 935,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 936,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 945,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 944,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 939,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 911,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 940,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 941,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 915,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 938,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 943,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 954,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 946,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 948,
																			"indexExpression": {
																				"id": 947,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 949,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 930,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 950,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 915,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 953,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 924,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 925,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 927,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 957,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 958,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 976,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 975,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 969,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 971,
																			"indexExpression": {
																				"id": 970,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 913,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 974,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 977,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 963,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 964,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 979,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 978,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 1178,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1000,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 999,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1008,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 1178,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1026,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1027,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1033,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1032,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1038,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1042,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1043,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 1178,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1062,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1061,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1069,
															1129
														],
														"referencedDeclaration": 1129,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 1178,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1081,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1082,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1088,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1087,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1093,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1096,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1097,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1103,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1102,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1108,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1111,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1114,
															"indexExpression": {
																"id": 1112,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1115,
														"indexExpression": {
															"id": 1113,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1116,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 1119,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1121,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1122,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1123,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1120,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1077,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 1178,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"arguments": [
														{
															"id": 1142,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1141,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1147,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1153,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1154,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1163,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 1162,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1157,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1158,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1159,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1156,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 557,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1161,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 1173,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1167,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1168,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1164,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1069,
																				1129
																			],
																			"referencedDeclaration": 1129,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1172,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 1178,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1179,
							"src": "1401:9741:4",
							"usedErrors": [
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1256
						]
					},
					"id": 1257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1181,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1256,
							"linearizedBaseContracts": [
								1256
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1190,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1199,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1256,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 1256,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 1256,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 1256,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 1256,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 1256,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1257,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1256
						],
						"IERC20Metadata": [
							1282
						]
					},
					"id": 1283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1258,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1283,
							"sourceUnit": 1257,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1259,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1256,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1262,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1256,
										"src": "305:6:6"
									},
									"id": 1263,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1261,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1282,
							"linearizedBaseContracts": [
								1282,
								1256
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1282,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1282,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1278,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1282,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1283,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1312
						]
					},
					"id": 1313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1312,
							"linearizedBaseContracts": [
								1312
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1290,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1292,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1312,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1299,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1298,
												"id": 1301,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1312,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1307,
												"id": 1309,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1312,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1313,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1336
						],
						"IERC165": [
							1348
						]
					},
					"id": 1337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1349,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1315,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1348,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1318,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1348,
										"src": "687:7:8"
									},
									"id": 1319,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1317,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1336,
							"linearizedBaseContracts": [
								1336,
								1348
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1347
									],
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1329,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1348_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1348_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1328,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1348",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1333,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1336,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1337,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1348
						]
					},
					"id": 1349,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1339,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1348,
							"linearizedBaseContracts": [
								1348
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1348,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1349,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1961
						]
					},
					"id": 1962,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1350,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1351,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:10",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1961,
							"linearizedBaseContracts": [
								1961
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1359,
									"members": [
										{
											"constant": false,
											"id": 1354,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1359,
											"src": "1852:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1352,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1353,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1358,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1359,
											"src": "2020:44:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1357,
												"keyName": "value",
												"keyNameLocation": "2036:5:10",
												"keyType": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:10",
									"nodeType": "StructDefinition",
									"scope": 1961,
									"src": "1798:273:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "2310:337:10",
										"statements": [
											{
												"condition": {
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:10",
													"subExpression": {
														"arguments": [
															{
																"id": 1371,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "2335:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1372,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "2340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1370,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "2325:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1398,
													"nodeType": "Block",
													"src": "2604:37:10",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1369,
															"id": 1397,
															"nodeType": "Return",
															"src": "2618:12:10"
														}
													]
												},
												"id": 1399,
												"nodeType": "IfStatement",
												"src": "2320:321:10",
												"trueBody": {
													"id": 1395,
													"nodeType": "Block",
													"src": "2348:250:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1380,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "2379:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1375,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "2362:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:10",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "2362:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:10",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1382,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:10"
														},
														{
															"expression": {
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1383,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "2520:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:10",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1358,
																		"src": "2520:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1387,
																	"indexExpression": {
																		"id": 1385,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "2535:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1388,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "2544:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:10",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "2544:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1392,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:10"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1369,
															"id": 1394,
															"nodeType": "Return",
															"src": "2576:11:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2255:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1361,
														"name": "Set",
														"nameLocations": [
															"2255:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "2255:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "2255:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2272:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:10"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2304:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:10"
									},
									"scope": 1961,
									"src": "2241:406:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "2887:1296:10",
										"statements": [
											{
												"assignments": [
													1413
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "2991:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1418,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1414,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "3010:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1415,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:10",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1358,
														"src": "3010:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1417,
													"indexExpression": {
														"id": 1416,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "3025:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1419,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "3046:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1482,
													"nodeType": "Block",
													"src": "4140:37:10",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1411,
															"id": 1481,
															"nodeType": "Return",
															"src": "4154:12:10"
														}
													]
												},
												"id": 1483,
												"nodeType": "IfStatement",
												"src": "3042:1135:10",
												"trueBody": {
													"id": 1479,
													"nodeType": "Block",
													"src": "3061:1073:10",
													"statements": [
														{
															"assignments": [
																1423
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1423,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1479,
																	"src": "3413:18:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1422,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1427,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1424,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "3434:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:10"
														},
														{
															"assignments": [
																1429
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1429,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1479,
																	"src": "3460:17:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1428,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1435,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1430,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "3480:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:10",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "3480:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1436,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "3521:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1437,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "3535:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1463,
															"nodeType": "IfStatement",
															"src": "3517:378:10",
															"trueBody": {
																"id": 1462,
																"nodeType": "Block",
																"src": "3546:349:10",
																"statements": [
																	{
																		"assignments": [
																			1440
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1440,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1462,
																				"src": "3564:17:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1439,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1445,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1441,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1405,
																					"src": "3584:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1442,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:10",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1354,
																				"src": "3584:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1444,
																			"indexExpression": {
																				"id": 1443,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1429,
																				"src": "3596:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:10"
																	},
																	{
																		"expression": {
																			"id": 1452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1446,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1405,
																						"src": "3705:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1449,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:10",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1354,
																					"src": "3705:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1450,
																				"indexExpression": {
																					"id": 1448,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "3717:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1451,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1440,
																				"src": "3731:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1453,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:10"
																	},
																	{
																		"expression": {
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1454,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1405,
																						"src": "3844:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1457,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:10",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1358,
																					"src": "3844:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1458,
																				"indexExpression": {
																					"id": 1456,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1440,
																					"src": "3859:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1459,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1413,
																				"src": "3872:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1461,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:10"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1464,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "3973:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:10",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "3973:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:10",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1470,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:10"
														},
														{
															"expression": {
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:10",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1471,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "4076:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:10",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1358,
																		"src": "4076:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1474,
																	"indexExpression": {
																		"id": 1473,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "4091:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1476,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:10"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1411,
															"id": 1478,
															"nodeType": "Return",
															"src": "4112:11:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "2832:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1403,
														"name": "Set",
														"nameLocations": [
															"2832:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "2832:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "2832:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "2849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1406,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:10"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "2881:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:10"
									},
									"scope": 1961,
									"src": "2815:1368:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "4343:50:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1496,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "4360:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:10",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1358,
															"src": "4360:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1499,
														"indexExpression": {
															"id": 1498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "4375:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1502,
												"nodeType": "Return",
												"src": "4353:33:10"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "4283:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1487,
														"name": "Set",
														"nameLocations": [
															"4283:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "4283:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "4283:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "4300:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:10"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "4337:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:10"
									},
									"scope": 1961,
									"src": "4264:129:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "4539:42:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1513,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "4556:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:10",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1354,
														"src": "4556:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:10",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1516,
												"nodeType": "Return",
												"src": "4549:25:10"
											}
										]
									},
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:10",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "4491:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1507,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1506,
														"name": "Set",
														"nameLocations": [
															"4491:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "4491:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "4491:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:10"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "4530:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:10"
									},
									"scope": 1961,
									"src": "4474:107:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "4999:42:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1529,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "5016:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:10",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1354,
														"src": "5016:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1532,
													"indexExpression": {
														"id": 1531,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "5028:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1528,
												"id": 1533,
												"nodeType": "Return",
												"src": "5009:25:10"
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "4936:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1520,
														"name": "Set",
														"nameLocations": [
															"4936:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "4936:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "4936:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "4953:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:10"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "4990:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:10"
									},
									"scope": 1961,
									"src": "4923:118:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "5655:35:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1545,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "5672:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:10",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1354,
													"src": "5672:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1544,
												"id": 1547,
												"nodeType": "Return",
												"src": "5665:18:10"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:10",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "5598:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1537,
														"name": "Set",
														"nameLocations": [
															"5598:3:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1359,
														"src": "5598:3:10"
													},
													"referencedDeclaration": 1359,
													"src": "5598:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:10"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "5637:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1541,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1542,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:10"
									},
									"scope": 1961,
									"src": "5581:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1553,
									"members": [
										{
											"constant": false,
											"id": 1552,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "5743:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1551,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1550,
													"name": "Set",
													"nameLocations": [
														"5743:3:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1359,
													"src": "5743:3:10"
												},
												"referencedDeclaration": 1359,
												"src": "5743:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:10",
									"nodeType": "StructDefinition",
									"scope": 1961,
									"src": "5715:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "6006:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1565,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "6028:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "6028:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1567,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "6040:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1564,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "6023:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1569,
												"nodeType": "Return",
												"src": "6016:30:10"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5943:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1556,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1555,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "5943:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "5943:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5967:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:10"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "6000:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:10"
									},
									"scope": 1961,
									"src": "5930:123:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "6300:50:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1583,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "6325:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "6325:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1585,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "6337:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1582,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "6317:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1587,
												"nodeType": "Return",
												"src": "6310:33:10"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "6237:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1573,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "6237:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "6237:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "6261:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1576,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:10"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "6294:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:10"
									},
									"scope": 1961,
									"src": "6221:129:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "6517:52:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1601,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "6544:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "6544:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1603,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "6556:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1600,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "6534:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1599,
												"id": 1605,
												"nodeType": "Return",
												"src": "6527:35:10"
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "6449:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1591,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "6449:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "6449:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "6473:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1594,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:10"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "6511:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:10"
									},
									"scope": 1961,
									"src": "6431:138:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "6722:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1617,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "6747:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "6747:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1616,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "6739:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1615,
												"id": 1620,
												"nodeType": "Return",
												"src": "6732:26:10"
											}
										]
									},
									"documentation": {
										"id": 1608,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:10",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "6666:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1609,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "6666:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "6666:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:10"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "6713:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:10"
									},
									"scope": 1961,
									"src": "6650:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "7190:46:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1634,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "7211:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "7211:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1636,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "7223:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1633,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "7207:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1632,
												"id": 1638,
												"nodeType": "Return",
												"src": "7200:29:10"
											}
										]
									},
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "7119:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1624,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "7119:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "7119:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "7143:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:10"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "7181:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:10"
									},
									"scope": 1961,
									"src": "7107:129:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "7857:219:10",
										"statements": [
											{
												"assignments": [
													1654
												],
												"declarations": [
													{
														"constant": false,
														"id": 1654,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "7867:22:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1652,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1653,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1656,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "7900:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "7900:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1655,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "7892:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:10"
											},
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "7921:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1662,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1663,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:10"
											},
											{
												"AST": {
													"nativeSrc": "8007:39:10",
													"nodeType": "YulBlock",
													"src": "8007:39:10",
													"statements": [
														{
															"nativeSrc": "8021:15:10",
															"nodeType": "YulAssignment",
															"src": "8021:15:10",
															"value": {
																"name": "store",
																"nativeSrc": "8031:5:10",
																"nodeType": "YulIdentifier",
																"src": "8031:5:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8021:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1664,
														"isOffset": false,
														"isSlot": false,
														"src": "8021:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1654,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:5:10",
														"valueSize": 1
													}
												],
												"id": 1666,
												"nodeType": "InlineAssembly",
												"src": "7998:48:10"
											},
											{
												"expression": {
													"id": 1667,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1664,
													"src": "8063:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1649,
												"id": 1668,
												"nodeType": "Return",
												"src": "8056:13:10"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:10",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "7792:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1642,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "7792:10:10"
													},
													"referencedDeclaration": 1553,
													"src": "7792:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1553_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:10"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "7839:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1646,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1647,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:10"
									},
									"scope": 1961,
									"src": "7776:300:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1674,
									"members": [
										{
											"constant": false,
											"id": 1673,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8133:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1674,
											"src": "8129:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1672,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1671,
													"name": "Set",
													"nameLocations": [
														"8129:3:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1359,
													"src": "8129:3:10"
												},
												"referencedDeclaration": 1359,
												"src": "8129:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8108:10:10",
									"nodeType": "StructDefinition",
									"scope": 1961,
									"src": "8101:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "8392:74:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1686,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1678,
																"src": "8414:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8418:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "8414:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1694,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1680,
																					"src": "8450:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8442:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1692,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8442:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8442:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8434:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1690,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8434:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8434:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8426:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1688,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8426:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8426:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1685,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "8409:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1684,
												"id": 1699,
												"nodeType": "Return",
												"src": "8402:57:10"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "8152:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8325:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8348:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "8329:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1676,
														"name": "AddressSet",
														"nameLocations": [
															"8329:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "8329:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "8329:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8361:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "8353:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:39:10"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "8386:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8386:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8385:6:10"
									},
									"scope": 1961,
									"src": "8316:150:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "8713:77:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1713,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "8738:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8742:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "8738:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1721,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1707,
																					"src": "8774:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8766:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1719,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8766:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8766:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8758:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1717,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8758:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8758:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8750:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1715,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8750:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8750:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1712,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "8730:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8730:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1726,
												"nodeType": "Return",
												"src": "8723:60:10"
											}
										]
									},
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "8472:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8643:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8669:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "8650:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1703,
														"name": "AddressSet",
														"nameLocations": [
															"8650:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "8650:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "8650:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8682:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "8674:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:39:10"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "8707:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1709,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8707:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8706:6:10"
									},
									"scope": 1961,
									"src": "8634:156:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "8957:79:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1740,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "8984:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8988:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "8984:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1748,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1734,
																					"src": "9020:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9012:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1746,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9012:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9012:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9004:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1744,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9004:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9004:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8996:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1742,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8996:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8996:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1739,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "8974:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1738,
												"id": 1753,
												"nodeType": "Return",
												"src": "8967:62:10"
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "8796:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8880:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8908:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "8889:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1731,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1730,
														"name": "AddressSet",
														"nameLocations": [
															"8889:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "8889:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "8889:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8921:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "8913:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8913:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:39:10"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "8951:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:10"
									},
									"scope": 1961,
									"src": "8871:165:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "9189:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1765,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "9214:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9218:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "9214:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1764,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "9206:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1763,
												"id": 1768,
												"nodeType": "Return",
												"src": "9199:26:10"
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "9042:70:10",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9126:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9152:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "9133:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1758,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1757,
														"name": "AddressSet",
														"nameLocations": [
															"9133:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "9133:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "9133:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:24:10"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "9180:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:9:10"
									},
									"scope": 1961,
									"src": "9117:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "9657:73:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1788,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1774,
																						"src": "9702:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1789,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9706:6:10",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1673,
																					"src": "9702:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1359_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1790,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1776,
																					"src": "9714:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1359_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1787,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1535,
																				"src": "9698:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:22:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9690:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1785,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9690:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:31:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1783,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9682:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:40:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9674:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1781,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9674:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9674:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1780,
												"id": 1795,
												"nodeType": "Return",
												"src": "9667:56:10"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "9238:331:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9583:2:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9605:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "9586:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1772,
														"name": "AddressSet",
														"nameLocations": [
															"9586:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "9586:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "9586:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9618:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "9610:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9585:39:10"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "9648:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:9:10"
									},
									"scope": 1961,
									"src": "9574:156:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "10351:219:10",
										"statements": [
											{
												"assignments": [
													1811
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10378:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1826,
														"src": "10361:22:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1809,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10361:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1810,
															"nodeType": "ArrayTypeName",
															"src": "10361:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1816,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1813,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "10394:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10398:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "10394:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1812,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "10386:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10386:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10361:44:10"
											},
											{
												"assignments": [
													1821
												],
												"declarations": [
													{
														"constant": false,
														"id": 1821,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10432:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1826,
														"src": "10415:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1819,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10415:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1820,
															"nodeType": "ArrayTypeName",
															"src": "10415:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1822,
												"nodeType": "VariableDeclarationStatement",
												"src": "10415:23:10"
											},
											{
												"AST": {
													"nativeSrc": "10501:39:10",
													"nodeType": "YulBlock",
													"src": "10501:39:10",
													"statements": [
														{
															"nativeSrc": "10515:15:10",
															"nodeType": "YulAssignment",
															"src": "10515:15:10",
															"value": {
																"name": "store",
																"nativeSrc": "10525:5:10",
																"nodeType": "YulIdentifier",
																"src": "10525:5:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10515:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "10515:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1811,
														"isOffset": false,
														"isSlot": false,
														"src": "10525:5:10",
														"valueSize": 1
													}
												],
												"id": 1823,
												"nodeType": "InlineAssembly",
												"src": "10492:48:10"
											},
											{
												"expression": {
													"id": 1824,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1821,
													"src": "10557:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1806,
												"id": 1825,
												"nodeType": "Return",
												"src": "10550:13:10"
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "9736:529:10",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10279:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10305:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "10286:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1799,
														"name": "AddressSet",
														"nameLocations": [
															"10286:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1674,
														"src": "10286:10:10"
													},
													"referencedDeclaration": 1674,
													"src": "10286:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10285:24:10"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "10333:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1803,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10333:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1804,
													"nodeType": "ArrayTypeName",
													"src": "10333:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:18:10"
									},
									"scope": 1961,
									"src": "10270:300:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1831,
									"members": [
										{
											"constant": false,
											"id": 1830,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10621:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1831,
											"src": "10617:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1829,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1828,
													"name": "Set",
													"nameLocations": [
														"10617:3:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1359,
													"src": "10617:3:10"
												},
												"referencedDeclaration": 1359,
												"src": "10617:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1359_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10599:7:10",
									"nodeType": "StructDefinition",
									"scope": 1961,
									"src": "10592:42:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "10877:56:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1843,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "10899:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10903:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "10899:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1847,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "10919:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10911:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1845,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10911:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10911:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1842,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "10894:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10894:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1841,
												"id": 1850,
												"nodeType": "Return",
												"src": "10887:39:10"
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "10640:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10813:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10833:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "10817:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1833,
														"name": "UintSet",
														"nameLocations": [
															"10817:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "10817:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "10817:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10846:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "10838:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:36:10"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "10871:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10871:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10870:6:10"
									},
									"scope": 1961,
									"src": "10804:129:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "11177:59:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1864,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "11202:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11206:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "11202:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1868,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1858,
																	"src": "11222:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11214:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1866,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11214:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1863,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "11194:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1862,
												"id": 1871,
												"nodeType": "Return",
												"src": "11187:42:10"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "10939:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11110:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11133:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "11117:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1854,
														"name": "UintSet",
														"nameLocations": [
															"11117:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "11117:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "11117:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11146:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "11138:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:36:10"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "11171:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:6:10"
									},
									"scope": 1961,
									"src": "11101:135:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "11400:61:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1885,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1877,
																"src": "11427:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11431:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "11427:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "11447:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11439:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1887,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11439:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11439:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1884,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "11417:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1883,
												"id": 1892,
												"nodeType": "Return",
												"src": "11410:44:10"
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "11242:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11326:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11351:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "11335:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1875,
														"name": "UintSet",
														"nameLocations": [
															"11335:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "11335:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "11335:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11364:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "11356:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:36:10"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "11394:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:6:10"
									},
									"scope": 1961,
									"src": "11317:144:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "11611:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1904,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "11636:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11640:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "11636:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1903,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "11628:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1902,
												"id": 1907,
												"nodeType": "Return",
												"src": "11621:26:10"
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "11467:70:10",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11551:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11574:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "11558:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1896,
														"name": "UintSet",
														"nameLocations": [
															"11558:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "11558:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "11558:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:21:10"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "11602:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:9:10"
									},
									"scope": 1961,
									"src": "11542:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "12076:55:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1923,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "12105:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1924,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12109:6:10",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1830,
																	"src": "12105:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1359_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1925,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "12117:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1359_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1922,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "12101:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12101:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12093:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12093:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1919,
												"id": 1928,
												"nodeType": "Return",
												"src": "12086:38:10"
											}
										]
									},
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "11660:331:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12005:2:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12024:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "12008:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1911,
														"name": "UintSet",
														"nameLocations": [
															"12008:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "12008:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "12008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12037:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "12029:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:36:10"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "12067:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12066:9:10"
									},
									"scope": 1961,
									"src": "11996:135:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "12749:219:10",
										"statements": [
											{
												"assignments": [
													1944
												],
												"declarations": [
													{
														"constant": false,
														"id": 1944,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12776:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "12759:22:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1942,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1943,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1949,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1946,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "12792:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12796:6:10",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1830,
															"src": "12792:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1359_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1945,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "12784:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1359_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12784:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:44:10"
											},
											{
												"assignments": [
													1954
												],
												"declarations": [
													{
														"constant": false,
														"id": 1954,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12830:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "12813:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1952,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12813:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1953,
															"nodeType": "ArrayTypeName",
															"src": "12813:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1955,
												"nodeType": "VariableDeclarationStatement",
												"src": "12813:23:10"
											},
											{
												"AST": {
													"nativeSrc": "12899:39:10",
													"nodeType": "YulBlock",
													"src": "12899:39:10",
													"statements": [
														{
															"nativeSrc": "12913:15:10",
															"nodeType": "YulAssignment",
															"src": "12913:15:10",
															"value": {
																"name": "store",
																"nativeSrc": "12923:5:10",
																"nodeType": "YulIdentifier",
																"src": "12923:5:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12913:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1954,
														"isOffset": false,
														"isSlot": false,
														"src": "12913:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1944,
														"isOffset": false,
														"isSlot": false,
														"src": "12923:5:10",
														"valueSize": 1
													}
												],
												"id": 1956,
												"nodeType": "InlineAssembly",
												"src": "12890:48:10"
											},
											{
												"expression": {
													"id": 1957,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1954,
													"src": "12955:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1939,
												"id": 1958,
												"nodeType": "Return",
												"src": "12948:13:10"
											}
										]
									},
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "12137:529:10",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12680:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12703:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "12687:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1933,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1932,
														"name": "UintSet",
														"nameLocations": [
															"12687:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1831,
														"src": "12687:7:10"
													},
													"referencedDeclaration": 1831,
													"src": "12687:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1831_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12686:21:10"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "12731:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1936,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12731:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1937,
													"nodeType": "ArrayTypeName",
													"src": "12731:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:18:10"
									},
									"scope": 1961,
									"src": "12671:297:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1962,
							"src": "1330:11640:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12766:10"
				},
				"id": 10
			},
			"Permissions2.sol": {
				"ast": {
					"absolutePath": "Permissions2.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1312
						],
						"ERC165": [
							1336
						],
						"ERC20": [
							1178
						],
						"ERC20PermissionsControl": [
							2414
						],
						"EnumerableSet": [
							1961
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1256
						],
						"IERC20Errors": [
							568
						],
						"IERC20Metadata": [
							1282
						],
						"Ownable": [
							526
						]
					},
					"id": 2415,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1963,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1964,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2415,
							"sourceUnit": 1179,
							"src": "74:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1965,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2415,
							"sourceUnit": 296,
							"src": "131:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 1966,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2415,
							"sourceUnit": 1962,
							"src": "191:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1967,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2415,
							"sourceUnit": 527,
							"src": "258:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1968,
										"name": "ERC20",
										"nameLocations": [
											"350:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "350:5:11"
									},
									"id": 1969,
									"nodeType": "InheritanceSpecifier",
									"src": "350:5:11"
								},
								{
									"baseName": {
										"id": 1970,
										"name": "AccessControl",
										"nameLocations": [
											"357:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "357:13:11"
									},
									"id": 1971,
									"nodeType": "InheritanceSpecifier",
									"src": "357:13:11"
								},
								{
									"baseName": {
										"id": 1972,
										"name": "Ownable",
										"nameLocations": [
											"372:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 526,
										"src": "372:7:11"
									},
									"id": 1973,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:11"
								}
							],
							"canonicalName": "ERC20PermissionsControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2414,
							"linearizedBaseContracts": [
								2414,
								526,
								295,
								1336,
								1348,
								378,
								1178,
								568,
								1282,
								1256,
								1312
							],
							"name": "ERC20PermissionsControl",
							"nameLocation": "323:23:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1977,
									"libraryName": {
										"id": 1974,
										"name": "EnumerableSet",
										"nameLocations": [
											"393:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1961,
										"src": "393:13:11"
									},
									"nodeType": "UsingForDirective",
									"src": "387:49:11",
									"typeName": {
										"id": 1976,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1975,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"411:13:11",
												"425:10:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1674,
											"src": "411:24:11"
										},
										"referencedDeclaration": 1674,
										"src": "411:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1982,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "496:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2414,
									"src": "472:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1978,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "472:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1980,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "520:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1979,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "510:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1981,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "510:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1987,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "565:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2414,
									"src": "541:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1983,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "541:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1985,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "589:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1984,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "579:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1986,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "579:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "06a85f0f",
									"id": 1992,
									"mutability": "constant",
									"name": "FREEZER_ROLE",
									"nameLocation": "634:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2414,
									"src": "610:64:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1988,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "610:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "465245455a45525f524f4c45",
												"id": 1990,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "659:14:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363",
													"typeString": "literal_string \"FREEZER_ROLE\""
												},
												"value": "FREEZER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363",
													"typeString": "literal_string \"FREEZER_ROLE\""
												}
											],
											"id": 1989,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "649:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1991,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "649:25:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "410b2424",
									"id": 1997,
									"mutability": "constant",
									"name": "BLACKLIST_MANAGER_ROLE",
									"nameLocation": "705:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 2414,
									"src": "681:84:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1993,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "681:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "424c41434b4c4953545f4d414e414745525f524f4c45",
												"id": 1995,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "740:24:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee",
													"typeString": "literal_string \"BLACKLIST_MANAGER_ROLE\""
												},
												"value": "BLACKLIST_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee",
													"typeString": "literal_string \"BLACKLIST_MANAGER_ROLE\""
												}
											],
											"id": 1994,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "730:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1996,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "730:35:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "939bcbc9",
									"id": 2002,
									"mutability": "constant",
									"name": "RECOVER_ROLE",
									"nameLocation": "796:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2414,
									"src": "772:64:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1998,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "772:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5245434f5645525f524f4c45",
												"id": 2000,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "821:14:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066",
													"typeString": "literal_string \"RECOVER_ROLE\""
												},
												"value": "RECOVER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_62b337eaefec74dadf1a62e856bf9db4f14a0f27d4f48156a95a9f98e7d5e066",
													"typeString": "literal_string \"RECOVER_ROLE\""
												}
											],
											"id": 1999,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "811:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2001,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "811:25:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2005,
									"mutability": "mutable",
									"name": "frozenAccounts",
									"nameLocation": "900:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2414,
									"src": "867:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 2004,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2003,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"867:13:11",
												"881:10:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1674,
											"src": "867:24:11"
										},
										"referencedDeclaration": 1674,
										"src": "867:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2008,
									"mutability": "mutable",
									"name": "blacklistedAccounts",
									"nameLocation": "954:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 2414,
									"src": "921:52:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 2007,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2006,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"921:13:11",
												"935:10:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1674,
											"src": "921:24:11"
										},
										"referencedDeclaration": 1674,
										"src": "921:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1674_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "1262:270:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2026,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1284:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2027,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1304:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1308:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1304:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2025,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1273:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1273:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "1273:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2032,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1332:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1336:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1332:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2034,
															"name": "amout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "1344:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2031,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1326:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1326:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2036,
												"nodeType": "ExpressionStatement",
												"src": "1326:24:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2038,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1371:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1375:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1371:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2037,
														"name": "addMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2296,
														"src": "1361:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1361:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "1361:21:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2043,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1403:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1407:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1403:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2042,
														"name": "addBurner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "1393:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2046,
												"nodeType": "ExpressionStatement",
												"src": "1393:21:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1436:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1440:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1436:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2047,
														"name": "addFreezer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2348,
														"src": "1425:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1425:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "1425:22:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2053,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1478:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1482:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1478:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2052,
														"name": "addBlacklistManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2374,
														"src": "1458:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1458:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "1458:31:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2058,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1513:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1517:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1513:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2057,
														"name": "addRecoverer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2400,
														"src": "1500:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1500:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2061,
												"nodeType": "ExpressionStatement",
												"src": "1500:24:11"
											}
										]
									},
									"id": 2063,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2017,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2010,
													"src": "1213:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2018,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2012,
													"src": "1219:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2019,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2016,
												"name": "ERC20",
												"nameLocations": [
													"1207:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1178,
												"src": "1207:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1207:19:11"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 2021,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1245:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1249:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1245:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2023,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2020,
												"name": "Ownable",
												"nameLocations": [
													"1237:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 526,
												"src": "1237:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1237:19:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1157:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "1143:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1143:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1177:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "1163:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2011,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1163:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1190:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "1185:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1185:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1142:54:11"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1262:0:11"
									},
									"scope": 2414,
									"src": "1131:401:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "1656:36:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2074,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "1673:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2075,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "1677:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2073,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1667:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1667:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "1667:17:11"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2070,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1982,
													"src": "1643:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2071,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2069,
												"name": "onlyRole",
												"nameLocations": [
													"1634:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1634:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1634:21:11"
										}
									],
									"name": "mint",
									"nameLocation": "1594:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1607:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "1599:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1619:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "1611:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1598:28:11"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:0:11"
									},
									"scope": 2414,
									"src": "1585:107:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "1815:38:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2090,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "1832:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2091,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2083,
															"src": "1838:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2089,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "1826:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "1826:19:11"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2086,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1987,
													"src": "1802:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2087,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2085,
												"name": "onlyRole",
												"nameLocations": [
													"1793:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1793:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1793:21:11"
										}
									],
									"name": "burn",
									"nameLocation": "1751:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1764:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "1756:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1778:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "1770:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:30:11"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1815:0:11"
									},
									"scope": 2414,
									"src": "1742:111:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2118,
										"nodeType": "Block",
										"src": "2113:128:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2132:33:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2106,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "2157:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2104,
																		"name": "frozenAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "2133:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2148:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "2133:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2133:32:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c72656164792066726f7a656e",
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2167:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
																"typeString": "literal_string \"Account is already frozen\""
															},
															"value": "Account is already frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
																"typeString": "literal_string \"Account is already frozen\""
															}
														],
														"id": 2103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2124:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2124:71:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2111,
												"nodeType": "ExpressionStatement",
												"src": "2124:71:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2115,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "2225:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2112,
															"name": "frozenAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "2206:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2221:3:11",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "2206:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2206:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "2206:27:11"
											}
										]
									},
									"functionSelector": "f26c159f",
									"id": 2119,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2100,
													"name": "FREEZER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1992,
													"src": "2099:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2101,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2099,
												"name": "onlyRole",
												"nameLocations": [
													"2090:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2090:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2090:22:11"
										}
									],
									"name": "freezeAccount",
									"nameLocation": "2052:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2074:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "2066:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:17:11"
									},
									"returnParameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2113:0:11"
									},
									"scope": 2414,
									"src": "2043:198:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "2381:126:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2130,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "2424:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2128,
																	"name": "frozenAccounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "2400:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2415:8:11",
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1755,
																"src": "2400:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																}
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2400:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74206973206e6f742066726f7a656e",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2434:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
																"typeString": "literal_string \"Account is not frozen\""
															},
															"value": "Account is not frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
																"typeString": "literal_string \"Account is not frozen\""
															}
														],
														"id": 2127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2392:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2392:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "2392:66:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2138,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2121,
															"src": "2491:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2135,
															"name": "frozenAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "2469:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2484:6:11",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1728,
														"src": "2469:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2469:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "2469:30:11"
											}
										]
									},
									"functionSelector": "788649ea",
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2124,
													"name": "FREEZER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1992,
													"src": "2367:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2125,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2123,
												"name": "onlyRole",
												"nameLocations": [
													"2358:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2358:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2358:22:11"
										}
									],
									"name": "unfreezeAccount",
									"nameLocation": "2318:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2342:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2334:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2334:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2333:17:11"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2381:0:11"
									},
									"scope": 2414,
									"src": "2309:198:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "2632:54:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2151,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "2670:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2149,
															"name": "frozenAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "2646:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2150,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2661:8:11",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1755,
														"src": "2646:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2646:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2148,
												"id": 2153,
												"nodeType": "Return",
												"src": "2639:39:11"
											}
										]
									},
									"functionSelector": "e5839836",
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "2579:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2596:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "2588:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2588:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:17:11"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "2626:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:11"
									},
									"scope": 2414,
									"src": "2570:116:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2178,
										"nodeType": "Block",
										"src": "2969:143:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2988:38:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2166,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "3018:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2164,
																		"name": "blacklistedAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "2989:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3009:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "2989:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2989:37:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c726561647920626c61636b6c6973746564",
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3028:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
																"typeString": "literal_string \"Account is already blacklisted\""
															},
															"value": "Account is already blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
																"typeString": "literal_string \"Account is already blacklisted\""
															}
														],
														"id": 2163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2980:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2980:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2171,
												"nodeType": "ExpressionStatement",
												"src": "2980:81:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2175,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "3096:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2172,
															"name": "blacklistedAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3072:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3092:3:11",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "3072:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3072:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2177,
												"nodeType": "ExpressionStatement",
												"src": "3072:32:11"
											}
										]
									},
									"functionSelector": "44337ea1",
									"id": 2179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2160,
													"name": "BLACKLIST_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1997,
													"src": "2945:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2161,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2159,
												"name": "onlyRole",
												"nameLocations": [
													"2936:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2936:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2936:32:11"
										}
									],
									"name": "addToBlacklist",
									"nameLocation": "2897:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2920:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "2912:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:17:11"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:0:11"
									},
									"scope": 2414,
									"src": "2888:224:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2201,
										"nodeType": "Block",
										"src": "3278:141:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2190,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "3326:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2188,
																	"name": "blacklistedAccounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "3297:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3317:8:11",
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1755,
																"src": "3297:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3297:37:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74206973206e6f7420626c61636b6c6973746564",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3336:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
																"typeString": "literal_string \"Account is not blacklisted\""
															},
															"value": "Account is not blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
																"typeString": "literal_string \"Account is not blacklisted\""
															}
														],
														"id": 2187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3289:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3289:76:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "ExpressionStatement",
												"src": "3289:76:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2198,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "3403:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2195,
															"name": "blacklistedAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3376:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2197,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3396:6:11",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1728,
														"src": "3376:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3376:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2200,
												"nodeType": "ExpressionStatement",
												"src": "3376:35:11"
											}
										]
									},
									"functionSelector": "537df3b6",
									"id": 2202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2184,
													"name": "BLACKLIST_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1997,
													"src": "3254:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2183,
												"name": "onlyRole",
												"nameLocations": [
													"3245:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3245:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3245:32:11"
										}
									],
									"name": "removeFromBlacklist",
									"nameLocation": "3201:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3229:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "3221:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3221:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3220:17:11"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3278:0:11"
									},
									"scope": 2414,
									"src": "3192:227:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2214,
										"nodeType": "Block",
										"src": "3551:59:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2211,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "3594:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2209,
															"name": "blacklistedAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3565:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2210,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3585:8:11",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1755,
														"src": "3565:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3565:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2208,
												"id": 2213,
												"nodeType": "Return",
												"src": "3558:44:11"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 2215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "3493:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3515:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "3507:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3507:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3506:17:11"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "3545:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3545:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3544:6:11"
									},
									"scope": 2414,
									"src": "3484:126:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "3835:46:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2228,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2217,
															"src": "3856:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2229,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "3862:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "3866:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "3846:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "3846:27:11"
											}
										]
									},
									"functionSelector": "1ec82cb8",
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2224,
													"name": "RECOVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2002,
													"src": "3821:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2225,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2223,
												"name": "onlyRole",
												"nameLocations": [
													"3812:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3812:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3812:22:11"
										}
									],
									"name": "recover",
									"nameLocation": "3755:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3771:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "3763:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3785:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "3777:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3797:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "3789:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3789:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3762:42:11"
									},
									"returnParameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3835:0:11"
									},
									"scope": 2414,
									"src": "3746:135:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										788
									],
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "4060:415:11",
										"statements": [
											{
												"assignments": [
													2245
												],
												"declarations": [
													{
														"constant": false,
														"id": 2245,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4079:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2282,
														"src": "4071:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2244,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4071:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2248,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2246,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "4087:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4087:12:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4071:28:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4118:31:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2252,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "4143:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2250,
																		"name": "frozenAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "4119:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4134:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "4119:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4119:30:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206163636f756e742069732066726f7a656e",
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4151:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6",
																"typeString": "literal_string \"Sender account is frozen\""
															},
															"value": "Sender account is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f88e1d78bc08390278df38e619625a8f7c253c4825a21c199a828881dbe0cd6",
																"typeString": "literal_string \"Sender account is frozen\""
															}
														],
														"id": 2249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4110:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4110:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2257,
												"nodeType": "ExpressionStatement",
												"src": "4110:68:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4197:36:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2261,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "4227:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2259,
																		"name": "blacklistedAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "4198:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4218:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "4198:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4198:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206163636f756e7420697320626c61636b6c6973746564",
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4235:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c",
																"typeString": "literal_string \"Sender account is blacklisted\""
															},
															"value": "Sender account is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86a54edaab398d5c47c54c22ef20027dd7c9194dadc0f75c8d4459f42ce6b15c",
																"typeString": "literal_string \"Sender account is blacklisted\""
															}
														],
														"id": 2258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4189:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4189:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2266,
												"nodeType": "ExpressionStatement",
												"src": "4189:78:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4286:33:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2270,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2236,
																		"src": "4316:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2268,
																		"name": "blacklistedAccounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "4287:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1674_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4307:8:11",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "4287:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1674_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1674_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4287:32:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e74206163636f756e7420697320626c61636b6c6973746564",
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4321:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab",
																"typeString": "literal_string \"Recipient account is blacklisted\""
															},
															"value": "Recipient account is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a0ad9cc5c08ae76e463aa0c2c1a61f9e11f741134177cc74a4c7753e71f06ab",
																"typeString": "literal_string \"Recipient account is blacklisted\""
															}
														],
														"id": 2267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4278:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4278:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2275,
												"nodeType": "ExpressionStatement",
												"src": "4278:78:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2278,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "4391:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2279,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "4395:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2276,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4376:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20PermissionsControl_$2414_$",
																"typeString": "type(contract super ERC20PermissionsControl)"
															}
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4382:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 788,
														"src": "4376:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4376:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2243,
												"id": 2281,
												"nodeType": "Return",
												"src": "4369:33:11"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3984:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2240,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4036:8:11"
									},
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4001:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "3993:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4013:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4005:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4005:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:28:11"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4054:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4054:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4053:6:11"
									},
									"scope": 2414,
									"src": "3975:500:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2295,
										"nodeType": "Block",
										"src": "4604:50:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2291,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "4625:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2292,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "4638:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2290,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "4615:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4615:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2294,
												"nodeType": "ExpressionStatement",
												"src": "4615:31:11"
											}
										]
									},
									"functionSelector": "983b2d56",
									"id": 2296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2287,
												"name": "onlyOwner",
												"nameLocations": [
													"4594:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "4594:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4594:9:11"
										}
									],
									"name": "addMinter",
									"nameLocation": "4560:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4578:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "4570:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4570:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4569:17:11"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4604:0:11"
									},
									"scope": 2414,
									"src": "4551:103:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "4786:51:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2304,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "4808:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2305,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2298,
															"src": "4821:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2303,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "4797:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4797:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2307,
												"nodeType": "ExpressionStatement",
												"src": "4797:32:11"
											}
										]
									},
									"functionSelector": "3092afd5",
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2301,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2300,
												"name": "onlyOwner",
												"nameLocations": [
													"4776:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "4776:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4776:9:11"
										}
									],
									"name": "removeMinter",
									"nameLocation": "4739:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4760:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "4752:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4752:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4751:17:11"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4786:0:11"
									},
									"scope": 2414,
									"src": "4730:107:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "4966:50:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2317,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "4987:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2318,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "5000:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2316,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "4977:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4977:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "4977:31:11"
											}
										]
									},
									"functionSelector": "f44637ba",
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2313,
												"name": "onlyOwner",
												"nameLocations": [
													"4956:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "4956:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4956:9:11"
										}
									],
									"name": "addBurner",
									"nameLocation": "4922:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4940:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "4932:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4932:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4931:17:11"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4966:0:11"
									},
									"scope": 2414,
									"src": "4913:103:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "5148:51:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2330,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "5170:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2331,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2324,
															"src": "5183:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2329,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "5159:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5159:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2333,
												"nodeType": "ExpressionStatement",
												"src": "5159:32:11"
											}
										]
									},
									"functionSelector": "02846858",
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2326,
												"name": "onlyOwner",
												"nameLocations": [
													"5138:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "5138:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5138:9:11"
										}
									],
									"name": "removeBurner",
									"nameLocation": "5101:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5122:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "5114:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5114:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5113:17:11"
									},
									"returnParameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5148:0:11"
									},
									"scope": 2414,
									"src": "5092:107:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2347,
										"nodeType": "Block",
										"src": "5330:51:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2343,
															"name": "FREEZER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "5351:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2344,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "5365:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2342,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "5341:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2346,
												"nodeType": "ExpressionStatement",
												"src": "5341:32:11"
											}
										]
									},
									"functionSelector": "526606c9",
									"id": 2348,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2340,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2339,
												"name": "onlyOwner",
												"nameLocations": [
													"5320:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "5320:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5320:9:11"
										}
									],
									"name": "addFreezer",
									"nameLocation": "5285:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5304:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "5296:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5296:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5295:17:11"
									},
									"returnParameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5330:0:11"
									},
									"scope": 2414,
									"src": "5276:105:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "5515:52:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2356,
															"name": "FREEZER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "5537:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2357,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "5551:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2355,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "5526:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5526:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2359,
												"nodeType": "ExpressionStatement",
												"src": "5526:33:11"
											}
										]
									},
									"functionSelector": "2acd2000",
									"id": 2361,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2353,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2352,
												"name": "onlyOwner",
												"nameLocations": [
													"5505:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "5505:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5505:9:11"
										}
									],
									"name": "removeFreezer",
									"nameLocation": "5467:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5489:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "5481:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5481:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5480:17:11"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5515:0:11"
									},
									"scope": 2414,
									"src": "5458:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2373,
										"nodeType": "Block",
										"src": "5717:61:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2369,
															"name": "BLACKLIST_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "5738:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2370,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "5762:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2368,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "5728:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5728:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2372,
												"nodeType": "ExpressionStatement",
												"src": "5728:42:11"
											}
										]
									},
									"functionSelector": "0eff2afc",
									"id": 2374,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2366,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2365,
												"name": "onlyOwner",
												"nameLocations": [
													"5707:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "5707:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5707:9:11"
										}
									],
									"name": "addBlacklistManager",
									"nameLocation": "5663:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5691:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "5683:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5683:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5682:17:11"
									},
									"returnParameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5717:0:11"
									},
									"scope": 2414,
									"src": "5654:124:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "5931:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2382,
															"name": "BLACKLIST_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "5953:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2383,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "5977:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2381,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "5942:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2385,
												"nodeType": "ExpressionStatement",
												"src": "5942:43:11"
											}
										]
									},
									"functionSelector": "974b368c",
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2378,
												"name": "onlyOwner",
												"nameLocations": [
													"5921:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "5921:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5921:9:11"
										}
									],
									"name": "removeBlacklistManager",
									"nameLocation": "5874:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5905:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "5897:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5897:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5896:17:11"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5931:0:11"
									},
									"scope": 2414,
									"src": "5865:128:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2399,
										"nodeType": "Block",
										"src": "6126:51:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2395,
															"name": "RECOVER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "6147:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2396,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "6161:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2394,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "6137:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6137:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2398,
												"nodeType": "ExpressionStatement",
												"src": "6137:32:11"
											}
										]
									},
									"functionSelector": "c2134b23",
									"id": 2400,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2392,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2391,
												"name": "onlyOwner",
												"nameLocations": [
													"6116:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "6116:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6116:9:11"
										}
									],
									"name": "addRecoverer",
									"nameLocation": "6079:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6100:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "6092:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6092:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6091:17:11"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6126:0:11"
									},
									"scope": 2414,
									"src": "6070:107:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "6313:52:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2408,
															"name": "RECOVER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "6335:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2409,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "6349:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2407,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "6324:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6324:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2411,
												"nodeType": "ExpressionStatement",
												"src": "6324:33:11"
											}
										]
									},
									"functionSelector": "d1c2de0a",
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2404,
												"name": "onlyOwner",
												"nameLocations": [
													"6303:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "6303:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6303:9:11"
										}
									],
									"name": "removeRecoverer",
									"nameLocation": "6263:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6287:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "6279:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6279:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6278:17:11"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6313:0:11"
									},
									"scope": 2414,
									"src": "6254:111:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2415,
							"src": "314:6054:11",
							"usedErrors": [
								305,
								308,
								392,
								397,
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": [
								317,
								326,
								335,
								403,
								1190,
								1199
							]
						}
					],
					"src": "39:6331:11"
				},
				"id": 11
			}
		}
	}
}